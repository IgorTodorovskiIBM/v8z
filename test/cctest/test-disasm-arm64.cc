// Copyright 2013 the V8 project authors. All rights reserved.
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//
//     * Redistributions of source code must retain the above copyright
//       notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above
//       copyright notice, this list of conditions and the following
//       disclaimer in the documentation and/or other materials provided
//       with the distribution.
//     * Neither the name of Google Inc. nor the names of its
//       contributors may be used to endorse or promote products derived
//       from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

#include <stdio.h>
#include <cstring>

#include "src/v8.h"
#include "test/cctest/cctest.h"

#include "src/macro-assembler.h"

#include "src/arm64/assembler-arm64.h"
#include "src/arm64/decoder-arm64-inl.h"
#include "src/arm64/disasm-arm64.h"
#include "src/arm64/macro-assembler-arm64.h"
#include "src/arm64/utils-arm64.h"

using namespace v8::internal;

#define TEST_(name)  TEST(DISASM_##name)

#define EXP_SIZE   (256)
#define INSTR_SIZE (1024)
#define SET_UP_CLASS(ASMCLASS)                             \
  InitializeVM();                                          \
  Isolate* isolate = Isolate::Current();                   \
  HandleScope scope(isolate);                              \
  byte* buf = static_cast<byte*>(malloc(INSTR_SIZE));      \
  uint32_t encoding = 0;                                   \
  ASMCLASS* assm = new ASMCLASS(isolate, buf, INSTR_SIZE); \
  Decoder<DispatchingDecoderVisitor>* decoder =            \
      new Decoder<DispatchingDecoderVisitor>();            \
  Disassembler* disasm = new Disassembler();               \
  decoder->AppendVisitor(disasm)

#define SET_UP() SET_UP_CLASS(Assembler)

#define COMPARE(ASM, EXP)                                                      \
  assm->Reset();                                                               \
  assm->ASM;                                                                   \
  assm->GetCode(NULL);                                                         \
  decoder->Decode(reinterpret_cast<Instruction*>(buf));                        \
  encoding = *reinterpret_cast<uint32_t*>(buf);                                \
  if (strcmp(disasm->GetOutput(), EXP) != 0) {                                 \
    printf("\x6c\xa4\x20\x3a\x20\x45\x6e\x63\x6f\x64\x69\x6e\x67\x3a\x20\x25\x30\x38" PRIx32 "\xaE\x78\x70\x65\x63\x74\x65\x64\x3a\x20\x6c\xa2\xaF\x6f\x75\x6e\x64\x3a\x20\x20\x20\x20\x6c\xa2\xa",       \
           __LINE__, encoding, EXP, disasm->GetOutput());                      \
    abort();                                                                   \
  }

#define COMPARE_PREFIX(ASM, EXP)                                               \
  assm->Reset();                                                               \
  assm->ASM;                                                                   \
  assm->GetCode(NULL);                                                         \
  decoder->Decode(reinterpret_cast<Instruction*>(buf));                        \
  encoding = *reinterpret_cast<uint32_t*>(buf);                                \
  if (strncmp(disasm->GetOutput(), EXP, strlen(EXP)) != 0) {                   \
    printf("\x6c\xa4\x20\x3a\x20\x45\x6e\x63\x6f\x64\x69\x6e\x67\x3a\x20\x25\x30\x38" PRIx32 "\xaE\x78\x70\x65\x63\x74\x65\x64\x3a\x20\x6c\xa2\xaF\x6f\x75\x6e\x64\x3a\x20\x20\x20\x20\x6c\xa2\xa",       \
           __LINE__, encoding, EXP, disasm->GetOutput());                      \
    abort();                                                                   \
  }

#define CLEANUP()                                                              \
  delete disasm;                                                               \
  delete decoder;                                                              \
  delete assm


static bool vm_initialized = false;


static void InitializeVM() {
  if (!vm_initialized) {
    CcTest::InitializeVM();
    vm_initialized = true;
  }
}


TEST_(bootstrap) {
  SET_UP();

  // Instructions generated by C compiler, disassembled by objdump, and
  // reformatted to suit our disassembly style.
  COMPARE(dci(0xa9ba7bfd), "\x73\x74\x70\x20\x66\x70\x2c\x20\x6c\x72\x2c\x20\x5b\x63\x73\x70\x2c\x20\x23\x2d\x39\x36\x5d\x21");
  COMPARE(dci(0x910003fd), "\x6d\x6f\x76\x20\x66\x70\x2c\x20\x63\x73\x70");
  COMPARE(dci(0x9100e3a0), "\x61\x64\x64\x20\x78\x30\x2c\x20\x66\x70\x2c\x20\x23\x30\x78\x33\x38\x20\x28\x35\x36\x29");
  COMPARE(dci(0xb900001f), "\x73\x74\x72\x20\x77\x7a\x72\x2c\x20\x5b\x78\x30\x5d");
  COMPARE(dci(0x528000e1), "\x6d\x6f\x76\x7a\x20\x77\x31\x2c\x20\x23\x30\x78\x37");
  COMPARE(dci(0xb9001c01), "\x73\x74\x72\x20\x77\x31\x2c\x20\x5b\x78\x30\x2c\x20\x23\x32\x38\x5d");
  COMPARE(dci(0x390043a0), "\x73\x74\x72\x62\x20\x77\x30\x2c\x20\x5b\x66\x70\x2c\x20\x23\x31\x36\x5d");
  COMPARE(dci(0x790027a0), "\x73\x74\x72\x68\x20\x77\x30\x2c\x20\x5b\x66\x70\x2c\x20\x23\x31\x38\x5d");
  COMPARE(dci(0xb9400400), "\x6c\x64\x72\x20\x77\x30\x2c\x20\x5b\x78\x30\x2c\x20\x23\x34\x5d");
  COMPARE(dci(0x0b000021), "\x61\x64\x64\x20\x77\x31\x2c\x20\x77\x31\x2c\x20\x77\x30");
  COMPARE(dci(0x531b6800), "\x6c\x73\x6c\x20\x77\x30\x2c\x20\x77\x30\x2c\x20\x23\x35");
  COMPARE(dci(0x521e0400), "\x65\x6f\x72\x20\x77\x30\x2c\x20\x77\x30\x2c\x20\x23\x30\x78\x63");
  COMPARE(dci(0x72af0f00), "\x6d\x6f\x76\x6b\x20\x77\x30\x2c\x20\x23\x30\x78\x37\x38\x37\x38\x2c\x20\x6c\x73\x6c\x20\x23\x31\x36");
  COMPARE(dci(0xd360fc00), "\x6c\x73\x72\x20\x78\x30\x2c\x20\x78\x30\x2c\x20\x23\x33\x32");
  COMPARE(dci(0x13037c01), "\x61\x73\x72\x20\x77\x31\x2c\x20\x77\x30\x2c\x20\x23\x33");
  COMPARE(dci(0x4b000021), "\x73\x75\x62\x20\x77\x31\x2c\x20\x77\x31\x2c\x20\x77\x30");
  COMPARE(dci(0x2a0103e0), "\x6d\x6f\x76\x20\x77\x30\x2c\x20\x77\x31");
  COMPARE(dci(0x93407c00), "\x73\x78\x74\x77\x20\x78\x30\x2c\x20\x77\x30");
  COMPARE(dci(0x2a000020), "\x6f\x72\x72\x20\x77\x30\x2c\x20\x77\x31\x2c\x20\x77\x30");
  COMPARE(dci(0xa8c67bfd), "\x6c\x64\x70\x20\x66\x70\x2c\x20\x6c\x72\x2c\x20\x5b\x63\x73\x70\x5d\x2c\x20\x23\x39\x36");

  CLEANUP();
}


TEST_(mov_mvn) {
  SET_UP_CLASS(MacroAssembler);

  COMPARE(Mov(w0, Operand(0x1234)), "\x6d\x6f\x76\x7a\x20\x77\x30\x2c\x20\x23\x30\x78\x31\x32\x33\x34");
  COMPARE(Mov(x1, Operand(0x1234)), "\x6d\x6f\x76\x7a\x20\x78\x31\x2c\x20\x23\x30\x78\x31\x32\x33\x34");
  COMPARE(Mov(w2, Operand(w3)), "\x6d\x6f\x76\x20\x77\x32\x2c\x20\x77\x33");
  COMPARE(Mov(x4, Operand(x5)), "\x6d\x6f\x76\x20\x78\x34\x2c\x20\x78\x35");
  COMPARE(Mov(w6, Operand(w7, LSL, 5)), "\x6c\x73\x6c\x20\x77\x36\x2c\x20\x77\x37\x2c\x20\x23\x35");
  COMPARE(Mov(x8, Operand(x9, ASR, 42)), "\x61\x73\x72\x20\x78\x38\x2c\x20\x78\x39\x2c\x20\x23\x34\x32");
  COMPARE(Mov(w10, Operand(w11, UXTB)), "\x75\x78\x74\x62\x20\x77\x31\x30\x2c\x20\x77\x31\x31");
  COMPARE(Mov(x12, Operand(x13, UXTB, 1)), "\x75\x62\x66\x69\x7a\x20\x78\x31\x32\x2c\x20\x78\x31\x33\x2c\x20\x23\x31\x2c\x20\x23\x38");
  COMPARE(Mov(w14, Operand(w15, SXTH, 2)), "\x73\x62\x66\x69\x7a\x20\x77\x31\x34\x2c\x20\x77\x31\x35\x2c\x20\x23\x32\x2c\x20\x23\x31\x36");
  COMPARE(Mov(x16, Operand(x20, SXTW, 3)), "\x73\x62\x66\x69\x7a\x20\x78\x31\x36\x2c\x20\x78\x32\x30\x2c\x20\x23\x33\x2c\x20\x23\x33\x32");

  COMPARE(Mov(x0, csp), "\x6d\x6f\x76\x20\x78\x30\x2c\x20\x63\x73\x70");
  COMPARE(Mov(w0, wcsp), "\x6d\x6f\x76\x20\x77\x30\x2c\x20\x77\x63\x73\x70");
  COMPARE(Mov(x0, xzr), "\x6d\x6f\x76\x20\x78\x30\x2c\x20\x78\x7a\x72");
  COMPARE(Mov(w0, wzr), "\x6d\x6f\x76\x20\x77\x30\x2c\x20\x77\x7a\x72");
  COMPARE(mov(x0, csp), "\x6d\x6f\x76\x20\x78\x30\x2c\x20\x63\x73\x70");
  COMPARE(mov(w0, wcsp), "\x6d\x6f\x76\x20\x77\x30\x2c\x20\x77\x63\x73\x70");
  COMPARE(mov(x0, xzr), "\x6d\x6f\x76\x20\x78\x30\x2c\x20\x78\x7a\x72");
  COMPARE(mov(w0, wzr), "\x6d\x6f\x76\x20\x77\x30\x2c\x20\x77\x7a\x72");

  COMPARE(Mvn(w0, Operand(0x1)), "\x6d\x6f\x76\x6e\x20\x77\x30\x2c\x20\x23\x30\x78\x31");
  COMPARE(Mvn(x1, Operand(0xfff)), "\x6d\x6f\x76\x6e\x20\x78\x31\x2c\x20\x23\x30\x78\x66\x66\x66");
  COMPARE(Mvn(w2, Operand(w3)), "\x6d\x76\x6e\x20\x77\x32\x2c\x20\x77\x33");
  COMPARE(Mvn(x4, Operand(x5)), "\x6d\x76\x6e\x20\x78\x34\x2c\x20\x78\x35");
  COMPARE(Mvn(w6, Operand(w7, LSL, 12)), "\x6d\x76\x6e\x20\x77\x36\x2c\x20\x77\x37\x2c\x20\x6c\x73\x6c\x20\x23\x31\x32");
  COMPARE(Mvn(x8, Operand(x9, ASR, 63)), "\x6d\x76\x6e\x20\x78\x38\x2c\x20\x78\x39\x2c\x20\x61\x73\x72\x20\x23\x36\x33");

  CLEANUP();
}


TEST_(move_immediate) {
  SET_UP();

  COMPARE(movz(w0, 0x1234), "\x6d\x6f\x76\x7a\x20\x77\x30\x2c\x20\x23\x30\x78\x31\x32\x33\x34");
  COMPARE(movz(x1, 0xabcd0000), "\x6d\x6f\x76\x7a\x20\x78\x31\x2c\x20\x23\x30\x78\x61\x62\x63\x64\x30\x30\x30\x30");
  COMPARE(movz(x2, 0x555500000000), "\x6d\x6f\x76\x7a\x20\x78\x32\x2c\x20\x23\x30\x78\x35\x35\x35\x35\x30\x30\x30\x30\x30\x30\x30\x30");
  COMPARE(movz(x3, 0xaaaa000000000000), "\x6d\x6f\x76\x7a\x20\x78\x33\x2c\x20\x23\x30\x78\x61\x61\x61\x61\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30");
  COMPARE(movz(x4, 0xabcd, 16), "\x6d\x6f\x76\x7a\x20\x78\x34\x2c\x20\x23\x30\x78\x61\x62\x63\x64\x30\x30\x30\x30");
  COMPARE(movz(x5, 0x5555, 32), "\x6d\x6f\x76\x7a\x20\x78\x35\x2c\x20\x23\x30\x78\x35\x35\x35\x35\x30\x30\x30\x30\x30\x30\x30\x30");
  COMPARE(movz(x6, 0xaaaa, 48), "\x6d\x6f\x76\x7a\x20\x78\x36\x2c\x20\x23\x30\x78\x61\x61\x61\x61\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30");

  COMPARE(movk(w7, 0x1234), "\x6d\x6f\x76\x6b\x20\x77\x37\x2c\x20\x23\x30\x78\x31\x32\x33\x34");
  COMPARE(movk(x8, 0xabcd0000), "\x6d\x6f\x76\x6b\x20\x78\x38\x2c\x20\x23\x30\x78\x61\x62\x63\x64\x2c\x20\x6c\x73\x6c\x20\x23\x31\x36");
  COMPARE(movk(x9, 0x555500000000), "\x6d\x6f\x76\x6b\x20\x78\x39\x2c\x20\x23\x30\x78\x35\x35\x35\x35\x2c\x20\x6c\x73\x6c\x20\x23\x33\x32");
  COMPARE(movk(x10, 0xaaaa000000000000), "\x6d\x6f\x76\x6b\x20\x78\x31\x30\x2c\x20\x23\x30\x78\x61\x61\x61\x61\x2c\x20\x6c\x73\x6c\x20\x23\x34\x38");
  COMPARE(movk(w11, 0xabcd, 16), "\x6d\x6f\x76\x6b\x20\x77\x31\x31\x2c\x20\x23\x30\x78\x61\x62\x63\x64\x2c\x20\x6c\x73\x6c\x20\x23\x31\x36");
  COMPARE(movk(x12, 0x5555, 32), "\x6d\x6f\x76\x6b\x20\x78\x31\x32\x2c\x20\x23\x30\x78\x35\x35\x35\x35\x2c\x20\x6c\x73\x6c\x20\x23\x33\x32");
  COMPARE(movk(x13, 0xaaaa, 48), "\x6d\x6f\x76\x6b\x20\x78\x31\x33\x2c\x20\x23\x30\x78\x61\x61\x61\x61\x2c\x20\x6c\x73\x6c\x20\x23\x34\x38");

  COMPARE(movn(w14, 0x1234), "\x6d\x6f\x76\x6e\x20\x77\x31\x34\x2c\x20\x23\x30\x78\x31\x32\x33\x34");
  COMPARE(movn(x15, 0xabcd0000), "\x6d\x6f\x76\x6e\x20\x78\x31\x35\x2c\x20\x23\x30\x78\x61\x62\x63\x64\x30\x30\x30\x30");
  COMPARE(movn(x16, 0x555500000000), "\x6d\x6f\x76\x6e\x20\x78\x31\x36\x2c\x20\x23\x30\x78\x35\x35\x35\x35\x30\x30\x30\x30\x30\x30\x30\x30");
  COMPARE(movn(x17, 0xaaaa000000000000), "\x6d\x6f\x76\x6e\x20\x78\x31\x37\x2c\x20\x23\x30\x78\x61\x61\x61\x61\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30");
  COMPARE(movn(w18, 0xabcd, 16), "\x6d\x6f\x76\x6e\x20\x77\x31\x38\x2c\x20\x23\x30\x78\x61\x62\x63\x64\x30\x30\x30\x30");
  COMPARE(movn(x19, 0x5555, 32), "\x6d\x6f\x76\x6e\x20\x78\x31\x39\x2c\x20\x23\x30\x78\x35\x35\x35\x35\x30\x30\x30\x30\x30\x30\x30\x30");
  COMPARE(movn(x20, 0xaaaa, 48), "\x6d\x6f\x76\x6e\x20\x78\x32\x30\x2c\x20\x23\x30\x78\x61\x61\x61\x61\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30");

  COMPARE(movk(w21, 0), "\x6d\x6f\x76\x6b\x20\x77\x32\x31\x2c\x20\x23\x30\x78\x30");
  COMPARE(movk(x22, 0, 0), "\x6d\x6f\x76\x6b\x20\x78\x32\x32\x2c\x20\x23\x30\x78\x30");
  COMPARE(movk(w23, 0, 16), "\x6d\x6f\x76\x6b\x20\x77\x32\x33\x2c\x20\x23\x30\x78\x30\x2c\x20\x6c\x73\x6c\x20\x23\x31\x36");
  COMPARE(movk(x24, 0, 32), "\x6d\x6f\x76\x6b\x20\x78\x32\x34\x2c\x20\x23\x30\x78\x30\x2c\x20\x6c\x73\x6c\x20\x23\x33\x32");
  COMPARE(movk(x25, 0, 48), "\x6d\x6f\x76\x6b\x20\x78\x32\x35\x2c\x20\x23\x30\x78\x30\x2c\x20\x6c\x73\x6c\x20\x23\x34\x38");

  CLEANUP();
}


TEST(move_immediate_2) {
  SET_UP_CLASS(MacroAssembler);

  // Move instructions expected for certain immediates. This is really a macro
  // assembler test, to ensure it generates immediates efficiently.
  COMPARE(Mov(w0, 0), "\x6d\x6f\x76\x7a\x20\x77\x30\x2c\x20\x23\x30\x78\x30");
  COMPARE(Mov(w0, 0x0000ffff), "\x6d\x6f\x76\x7a\x20\x77\x30\x2c\x20\x23\x30\x78\x66\x66\x66\x66");
  COMPARE(Mov(w0, 0x00010000), "\x6d\x6f\x76\x7a\x20\x77\x30\x2c\x20\x23\x30\x78\x31\x30\x30\x30\x30");
  COMPARE(Mov(w0, 0xffff0000), "\x6d\x6f\x76\x7a\x20\x77\x30\x2c\x20\x23\x30\x78\x66\x66\x66\x66\x30\x30\x30\x30");
  COMPARE(Mov(w0, 0x0001ffff), "\x6d\x6f\x76\x6e\x20\x77\x30\x2c\x20\x23\x30\x78\x66\x66\x66\x65\x30\x30\x30\x30");
  COMPARE(Mov(w0, 0xffff8000), "\x6d\x6f\x76\x6e\x20\x77\x30\x2c\x20\x23\x30\x78\x37\x66\x66\x66");
  COMPARE(Mov(w0, 0xfffffffe), "\x6d\x6f\x76\x6e\x20\x77\x30\x2c\x20\x23\x30\x78\x31");
  COMPARE(Mov(w0, 0xffffffff), "\x6d\x6f\x76\x6e\x20\x77\x30\x2c\x20\x23\x30\x78\x30");
  COMPARE(Mov(w0, 0x00ffff00), "\x6d\x6f\x76\x20\x77\x30\x2c\x20\x23\x30\x78\x66\x66\x66\x66\x30\x30");
  COMPARE(Mov(w0, 0xfffe7fff), "\x6d\x6f\x76\x20\x77\x30\x2c\x20\x23\x30\x78\x66\x66\x66\x65\x37\x66\x66\x66");
  COMPARE(Mov(w0, 0xfffeffff), "\x6d\x6f\x76\x6e\x20\x77\x30\x2c\x20\x23\x30\x78\x31\x30\x30\x30\x30");
  COMPARE(Mov(w0, 0xffff7fff), "\x6d\x6f\x76\x6e\x20\x77\x30\x2c\x20\x23\x30\x78\x38\x30\x30\x30");

  COMPARE(Mov(x0, 0), "\x6d\x6f\x76\x7a\x20\x78\x30\x2c\x20\x23\x30\x78\x30");
  COMPARE(Mov(x0, 0x0000ffff), "\x6d\x6f\x76\x7a\x20\x78\x30\x2c\x20\x23\x30\x78\x66\x66\x66\x66");
  COMPARE(Mov(x0, 0x00010000), "\x6d\x6f\x76\x7a\x20\x78\x30\x2c\x20\x23\x30\x78\x31\x30\x30\x30\x30");
  COMPARE(Mov(x0, 0xffff0000), "\x6d\x6f\x76\x7a\x20\x78\x30\x2c\x20\x23\x30\x78\x66\x66\x66\x66\x30\x30\x30\x30");
  COMPARE(Mov(x0, 0x0001ffff), "\x6d\x6f\x76\x20\x78\x30\x2c\x20\x23\x30\x78\x31\x66\x66\x66\x66");
  COMPARE(Mov(x0, 0xffff8000), "\x6d\x6f\x76\x20\x78\x30\x2c\x20\x23\x30\x78\x66\x66\x66\x66\x38\x30\x30\x30");
  COMPARE(Mov(x0, 0xfffffffe), "\x6d\x6f\x76\x20\x78\x30\x2c\x20\x23\x30\x78\x66\x66\x66\x66\x66\x66\x66\x65");
  COMPARE(Mov(x0, 0xffffffff), "\x6d\x6f\x76\x20\x78\x30\x2c\x20\x23\x30\x78\x66\x66\x66\x66\x66\x66\x66\x66");
  COMPARE(Mov(x0, 0x00ffff00), "\x6d\x6f\x76\x20\x78\x30\x2c\x20\x23\x30\x78\x66\x66\x66\x66\x30\x30");
  COMPARE(Mov(x0, 0xffff000000000000), "\x6d\x6f\x76\x7a\x20\x78\x30\x2c\x20\x23\x30\x78\x66\x66\x66\x66\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30");
  COMPARE(Mov(x0, 0x0000ffff00000000), "\x6d\x6f\x76\x7a\x20\x78\x30\x2c\x20\x23\x30\x78\x66\x66\x66\x66\x30\x30\x30\x30\x30\x30\x30\x30");
  COMPARE(Mov(x0, 0x00000000ffff0000), "\x6d\x6f\x76\x7a\x20\x78\x30\x2c\x20\x23\x30\x78\x66\x66\x66\x66\x30\x30\x30\x30");
  COMPARE(Mov(x0, 0xffffffffffff0000), "\x6d\x6f\x76\x6e\x20\x78\x30\x2c\x20\x23\x30\x78\x66\x66\x66\x66");
  COMPARE(Mov(x0, 0xffffffff0000ffff), "\x6d\x6f\x76\x6e\x20\x78\x30\x2c\x20\x23\x30\x78\x66\x66\x66\x66\x30\x30\x30\x30");
  COMPARE(Mov(x0, 0xffff0000ffffffff), "\x6d\x6f\x76\x6e\x20\x78\x30\x2c\x20\x23\x30\x78\x66\x66\x66\x66\x30\x30\x30\x30\x30\x30\x30\x30");
  COMPARE(Mov(x0, 0x0000ffffffffffff), "\x6d\x6f\x76\x6e\x20\x78\x30\x2c\x20\x23\x30\x78\x66\x66\x66\x66\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30");
  COMPARE(Mov(x0, 0xfffe7fffffffffff), "\x6d\x6f\x76\x20\x78\x30\x2c\x20\x23\x30\x78\x66\x66\x66\x65\x37\x66\x66\x66\x66\x66\x66\x66\x66\x66\x66\x66");
  COMPARE(Mov(x0, 0xfffeffffffffffff), "\x6d\x6f\x76\x6e\x20\x78\x30\x2c\x20\x23\x30\x78\x31\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30");
  COMPARE(Mov(x0, 0xffff7fffffffffff), "\x6d\x6f\x76\x6e\x20\x78\x30\x2c\x20\x23\x30\x78\x38\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30");
  COMPARE(Mov(x0, 0xfffffffe7fffffff), "\x6d\x6f\x76\x20\x78\x30\x2c\x20\x23\x30\x78\x66\x66\x66\x66\x66\x66\x66\x65\x37\x66\x66\x66\x66\x66\x66\x66");
  COMPARE(Mov(x0, 0xfffffffeffffffff), "\x6d\x6f\x76\x6e\x20\x78\x30\x2c\x20\x23\x30\x78\x31\x30\x30\x30\x30\x30\x30\x30\x30");
  COMPARE(Mov(x0, 0xffffffff7fffffff), "\x6d\x6f\x76\x6e\x20\x78\x30\x2c\x20\x23\x30\x78\x38\x30\x30\x30\x30\x30\x30\x30");
  COMPARE(Mov(x0, 0xfffffffffffe7fff), "\x6d\x6f\x76\x20\x78\x30\x2c\x20\x23\x30\x78\x66\x66\x66\x66\x66\x66\x66\x66\x66\x66\x66\x65\x37\x66\x66\x66");
  COMPARE(Mov(x0, 0xfffffffffffeffff), "\x6d\x6f\x76\x6e\x20\x78\x30\x2c\x20\x23\x30\x78\x31\x30\x30\x30\x30");
  COMPARE(Mov(x0, 0xffffffffffff7fff), "\x6d\x6f\x76\x6e\x20\x78\x30\x2c\x20\x23\x30\x78\x38\x30\x30\x30");
  COMPARE(Mov(x0, 0xffffffffffffffff), "\x6d\x6f\x76\x6e\x20\x78\x30\x2c\x20\x23\x30\x78\x30");

  COMPARE(Movk(w0, 0x1234, 0), "\x6d\x6f\x76\x6b\x20\x77\x30\x2c\x20\x23\x30\x78\x31\x32\x33\x34");
  COMPARE(Movk(x1, 0x2345, 0), "\x6d\x6f\x76\x6b\x20\x78\x31\x2c\x20\x23\x30\x78\x32\x33\x34\x35");
  COMPARE(Movk(w2, 0x3456, 16), "\x6d\x6f\x76\x6b\x20\x77\x32\x2c\x20\x23\x30\x78\x33\x34\x35\x36\x2c\x20\x6c\x73\x6c\x20\x23\x31\x36");
  COMPARE(Movk(x3, 0x4567, 16), "\x6d\x6f\x76\x6b\x20\x78\x33\x2c\x20\x23\x30\x78\x34\x35\x36\x37\x2c\x20\x6c\x73\x6c\x20\x23\x31\x36");
  COMPARE(Movk(x4, 0x5678, 32), "\x6d\x6f\x76\x6b\x20\x78\x34\x2c\x20\x23\x30\x78\x35\x36\x37\x38\x2c\x20\x6c\x73\x6c\x20\x23\x33\x32");
  COMPARE(Movk(x5, 0x6789, 48), "\x6d\x6f\x76\x6b\x20\x78\x35\x2c\x20\x23\x30\x78\x36\x37\x38\x39\x2c\x20\x6c\x73\x6c\x20\x23\x34\x38");

  CLEANUP();
}


TEST_(add_immediate) {
  SET_UP();

  COMPARE(add(w0, w1, Operand(0xff)), "\x61\x64\x64\x20\x77\x30\x2c\x20\x77\x31\x2c\x20\x23\x30\x78\x66\x66\x20\x28\x32\x35\x35\x29");
  COMPARE(add(x2, x3, Operand(0x3ff)), "\x61\x64\x64\x20\x78\x32\x2c\x20\x78\x33\x2c\x20\x23\x30\x78\x33\x66\x66\x20\x28\x31\x30\x32\x33\x29");
  COMPARE(add(w4, w5, Operand(0xfff)), "\x61\x64\x64\x20\x77\x34\x2c\x20\x77\x35\x2c\x20\x23\x30\x78\x66\x66\x66\x20\x28\x34\x30\x39\x35\x29");
  COMPARE(add(x6, x7, Operand(0x1000)), "\x61\x64\x64\x20\x78\x36\x2c\x20\x78\x37\x2c\x20\x23\x30\x78\x31\x30\x30\x30\x20\x28\x34\x30\x39\x36\x29");
  COMPARE(add(w8, w9, Operand(0xff000)), "\x61\x64\x64\x20\x77\x38\x2c\x20\x77\x39\x2c\x20\x23\x30\x78\x66\x66\x30\x30\x30\x20\x28\x31\x30\x34\x34\x34\x38\x30\x29");
  COMPARE(add(x10, x11, Operand(0x3ff000)),
          "\x61\x64\x64\x20\x78\x31\x30\x2c\x20\x78\x31\x31\x2c\x20\x23\x30\x78\x33\x66\x66\x30\x30\x30\x20\x28\x34\x31\x39\x30\x32\x30\x38\x29");
  COMPARE(add(w12, w13, Operand(0xfff000)),
          "\x61\x64\x64\x20\x77\x31\x32\x2c\x20\x77\x31\x33\x2c\x20\x23\x30\x78\x66\x66\x66\x30\x30\x30\x20\x28\x31\x36\x37\x37\x33\x31\x32\x30\x29");
  COMPARE(adds(w14, w15, Operand(0xff)), "\x61\x64\x64\x73\x20\x77\x31\x34\x2c\x20\x77\x31\x35\x2c\x20\x23\x30\x78\x66\x66\x20\x28\x32\x35\x35\x29");
  COMPARE(adds(x16, x17, Operand(0xaa000)),
          "\x61\x64\x64\x73\x20\x78\x31\x36\x2c\x20\x78\x31\x37\x2c\x20\x23\x30\x78\x61\x61\x30\x30\x30\x20\x28\x36\x39\x36\x33\x32\x30\x29");
  COMPARE(cmn(w18, Operand(0xff)), "\x63\x6d\x6e\x20\x77\x31\x38\x2c\x20\x23\x30\x78\x66\x66\x20\x28\x32\x35\x35\x29");
  COMPARE(cmn(x19, Operand(0xff000)), "\x63\x6d\x6e\x20\x78\x31\x39\x2c\x20\x23\x30\x78\x66\x66\x30\x30\x30\x20\x28\x31\x30\x34\x34\x34\x38\x30\x29");
  COMPARE(add(w0, wcsp, Operand(0)), "\x6d\x6f\x76\x20\x77\x30\x2c\x20\x77\x63\x73\x70");
  COMPARE(add(csp, x0, Operand(0)), "\x6d\x6f\x76\x20\x63\x73\x70\x2c\x20\x78\x30");

  COMPARE(add(w1, wcsp, Operand(8)), "\x61\x64\x64\x20\x77\x31\x2c\x20\x77\x63\x73\x70\x2c\x20\x23\x30\x78\x38\x20\x28\x38\x29");
  COMPARE(add(x2, csp, Operand(16)), "\x61\x64\x64\x20\x78\x32\x2c\x20\x63\x73\x70\x2c\x20\x23\x30\x78\x31\x30\x20\x28\x31\x36\x29");
  COMPARE(add(wcsp, wcsp, Operand(42)), "\x61\x64\x64\x20\x77\x63\x73\x70\x2c\x20\x77\x63\x73\x70\x2c\x20\x23\x30\x78\x32\x61\x20\x28\x34\x32\x29");
  COMPARE(cmn(csp, Operand(24)), "\x63\x6d\x6e\x20\x63\x73\x70\x2c\x20\x23\x30\x78\x31\x38\x20\x28\x32\x34\x29");
  COMPARE(adds(wzr, wcsp, Operand(9)), "\x63\x6d\x6e\x20\x77\x63\x73\x70\x2c\x20\x23\x30\x78\x39\x20\x28\x39\x29");

  CLEANUP();
}


TEST_(sub_immediate) {
  SET_UP();

  COMPARE(sub(w0, w1, Operand(0xff)), "\x73\x75\x62\x20\x77\x30\x2c\x20\x77\x31\x2c\x20\x23\x30\x78\x66\x66\x20\x28\x32\x35\x35\x29");
  COMPARE(sub(x2, x3, Operand(0x3ff)), "\x73\x75\x62\x20\x78\x32\x2c\x20\x78\x33\x2c\x20\x23\x30\x78\x33\x66\x66\x20\x28\x31\x30\x32\x33\x29");
  COMPARE(sub(w4, w5, Operand(0xfff)), "\x73\x75\x62\x20\x77\x34\x2c\x20\x77\x35\x2c\x20\x23\x30\x78\x66\x66\x66\x20\x28\x34\x30\x39\x35\x29");
  COMPARE(sub(x6, x7, Operand(0x1000)), "\x73\x75\x62\x20\x78\x36\x2c\x20\x78\x37\x2c\x20\x23\x30\x78\x31\x30\x30\x30\x20\x28\x34\x30\x39\x36\x29");
  COMPARE(sub(w8, w9, Operand(0xff000)), "\x73\x75\x62\x20\x77\x38\x2c\x20\x77\x39\x2c\x20\x23\x30\x78\x66\x66\x30\x30\x30\x20\x28\x31\x30\x34\x34\x34\x38\x30\x29");
  COMPARE(sub(x10, x11, Operand(0x3ff000)),
          "\x73\x75\x62\x20\x78\x31\x30\x2c\x20\x78\x31\x31\x2c\x20\x23\x30\x78\x33\x66\x66\x30\x30\x30\x20\x28\x34\x31\x39\x30\x32\x30\x38\x29");
  COMPARE(sub(w12, w13, Operand(0xfff000)),
          "\x73\x75\x62\x20\x77\x31\x32\x2c\x20\x77\x31\x33\x2c\x20\x23\x30\x78\x66\x66\x66\x30\x30\x30\x20\x28\x31\x36\x37\x37\x33\x31\x32\x30\x29");
  COMPARE(subs(w14, w15, Operand(0xff)), "\x73\x75\x62\x73\x20\x77\x31\x34\x2c\x20\x77\x31\x35\x2c\x20\x23\x30\x78\x66\x66\x20\x28\x32\x35\x35\x29");
  COMPARE(subs(x16, x17, Operand(0xaa000)),
          "\x73\x75\x62\x73\x20\x78\x31\x36\x2c\x20\x78\x31\x37\x2c\x20\x23\x30\x78\x61\x61\x30\x30\x30\x20\x28\x36\x39\x36\x33\x32\x30\x29");
  COMPARE(cmp(w18, Operand(0xff)), "\x63\x6d\x70\x20\x77\x31\x38\x2c\x20\x23\x30\x78\x66\x66\x20\x28\x32\x35\x35\x29");
  COMPARE(cmp(x19, Operand(0xff000)), "\x63\x6d\x70\x20\x78\x31\x39\x2c\x20\x23\x30\x78\x66\x66\x30\x30\x30\x20\x28\x31\x30\x34\x34\x34\x38\x30\x29");

  COMPARE(add(w1, wcsp, Operand(8)), "\x61\x64\x64\x20\x77\x31\x2c\x20\x77\x63\x73\x70\x2c\x20\x23\x30\x78\x38\x20\x28\x38\x29");
  COMPARE(add(x2, csp, Operand(16)), "\x61\x64\x64\x20\x78\x32\x2c\x20\x63\x73\x70\x2c\x20\x23\x30\x78\x31\x30\x20\x28\x31\x36\x29");
  COMPARE(add(wcsp, wcsp, Operand(42)), "\x61\x64\x64\x20\x77\x63\x73\x70\x2c\x20\x77\x63\x73\x70\x2c\x20\x23\x30\x78\x32\x61\x20\x28\x34\x32\x29");
  COMPARE(cmn(csp, Operand(24)), "\x63\x6d\x6e\x20\x63\x73\x70\x2c\x20\x23\x30\x78\x31\x38\x20\x28\x32\x34\x29");
  COMPARE(adds(wzr, wcsp, Operand(9)), "\x63\x6d\x6e\x20\x77\x63\x73\x70\x2c\x20\x23\x30\x78\x39\x20\x28\x39\x29");

  CLEANUP();
}


TEST_(add_shifted) {
  SET_UP();

  COMPARE(add(w0, w1, Operand(w2)), "\x61\x64\x64\x20\x77\x30\x2c\x20\x77\x31\x2c\x20\x77\x32");
  COMPARE(add(x3, x4, Operand(x5)), "\x61\x64\x64\x20\x78\x33\x2c\x20\x78\x34\x2c\x20\x78\x35");
  COMPARE(add(w6, w7, Operand(w8, LSL, 1)), "\x61\x64\x64\x20\x77\x36\x2c\x20\x77\x37\x2c\x20\x77\x38\x2c\x20\x6c\x73\x6c\x20\x23\x31");
  COMPARE(add(x9, x10, Operand(x11, LSL, 2)), "\x61\x64\x64\x20\x78\x39\x2c\x20\x78\x31\x30\x2c\x20\x78\x31\x31\x2c\x20\x6c\x73\x6c\x20\x23\x32");
  COMPARE(add(w12, w13, Operand(w14, LSR, 3)), "\x61\x64\x64\x20\x77\x31\x32\x2c\x20\x77\x31\x33\x2c\x20\x77\x31\x34\x2c\x20\x6c\x73\x72\x20\x23\x33");
  COMPARE(add(x15, x16, Operand(x17, LSR, 4)), "\x61\x64\x64\x20\x78\x31\x35\x2c\x20\x78\x31\x36\x2c\x20\x78\x31\x37\x2c\x20\x6c\x73\x72\x20\x23\x34");
  COMPARE(add(w18, w19, Operand(w20, ASR, 5)), "\x61\x64\x64\x20\x77\x31\x38\x2c\x20\x77\x31\x39\x2c\x20\x77\x32\x30\x2c\x20\x61\x73\x72\x20\x23\x35");
  COMPARE(add(x21, x22, Operand(x23, ASR, 6)), "\x61\x64\x64\x20\x78\x32\x31\x2c\x20\x78\x32\x32\x2c\x20\x78\x32\x33\x2c\x20\x61\x73\x72\x20\x23\x36");
  COMPARE(cmn(w24, Operand(w25)), "\x63\x6d\x6e\x20\x77\x32\x34\x2c\x20\x77\x32\x35");
  COMPARE(cmn(x26, Operand(cp, LSL, 63)), "\x63\x6d\x6e\x20\x78\x32\x36\x2c\x20\x63\x70\x2c\x20\x6c\x73\x6c\x20\x23\x36\x33");

  COMPARE(add(x0, csp, Operand(x1)), "\x61\x64\x64\x20\x78\x30\x2c\x20\x63\x73\x70\x2c\x20\x78\x31");
  COMPARE(add(w2, wcsp, Operand(w3)), "\x61\x64\x64\x20\x77\x32\x2c\x20\x77\x63\x73\x70\x2c\x20\x77\x33");
  COMPARE(add(x4, csp, Operand(x5, LSL, 1)), "\x61\x64\x64\x20\x78\x34\x2c\x20\x63\x73\x70\x2c\x20\x78\x35\x2c\x20\x6c\x73\x6c\x20\x23\x31");
  COMPARE(add(x4, xzr, Operand(x5, LSL, 1)), "\x61\x64\x64\x20\x78\x34\x2c\x20\x78\x7a\x72\x2c\x20\x78\x35\x2c\x20\x6c\x73\x6c\x20\x23\x31");
  COMPARE(add(w6, wcsp, Operand(w7, LSL, 3)), "\x61\x64\x64\x20\x77\x36\x2c\x20\x77\x63\x73\x70\x2c\x20\x77\x37\x2c\x20\x6c\x73\x6c\x20\x23\x33");
  COMPARE(adds(xzr, csp, Operand(x8, LSL, 4)), "\x63\x6d\x6e\x20\x63\x73\x70\x2c\x20\x78\x38\x2c\x20\x6c\x73\x6c\x20\x23\x34");
  COMPARE(adds(xzr, xzr, Operand(x8, LSL, 5)), "\x63\x6d\x6e\x20\x78\x7a\x72\x2c\x20\x78\x38\x2c\x20\x6c\x73\x6c\x20\x23\x35");

  CLEANUP();
}


TEST_(sub_shifted) {
  SET_UP();

  COMPARE(sub(w0, w1, Operand(w2)), "\x73\x75\x62\x20\x77\x30\x2c\x20\x77\x31\x2c\x20\x77\x32");
  COMPARE(sub(x3, x4, Operand(x5)), "\x73\x75\x62\x20\x78\x33\x2c\x20\x78\x34\x2c\x20\x78\x35");
  COMPARE(sub(w6, w7, Operand(w8, LSL, 1)), "\x73\x75\x62\x20\x77\x36\x2c\x20\x77\x37\x2c\x20\x77\x38\x2c\x20\x6c\x73\x6c\x20\x23\x31");
  COMPARE(sub(x9, x10, Operand(x11, LSL, 2)), "\x73\x75\x62\x20\x78\x39\x2c\x20\x78\x31\x30\x2c\x20\x78\x31\x31\x2c\x20\x6c\x73\x6c\x20\x23\x32");
  COMPARE(sub(w12, w13, Operand(w14, LSR, 3)), "\x73\x75\x62\x20\x77\x31\x32\x2c\x20\x77\x31\x33\x2c\x20\x77\x31\x34\x2c\x20\x6c\x73\x72\x20\x23\x33");
  COMPARE(sub(x15, x16, Operand(x17, LSR, 4)), "\x73\x75\x62\x20\x78\x31\x35\x2c\x20\x78\x31\x36\x2c\x20\x78\x31\x37\x2c\x20\x6c\x73\x72\x20\x23\x34");
  COMPARE(sub(w18, w19, Operand(w20, ASR, 5)), "\x73\x75\x62\x20\x77\x31\x38\x2c\x20\x77\x31\x39\x2c\x20\x77\x32\x30\x2c\x20\x61\x73\x72\x20\x23\x35");
  COMPARE(sub(x21, x22, Operand(x23, ASR, 6)), "\x73\x75\x62\x20\x78\x32\x31\x2c\x20\x78\x32\x32\x2c\x20\x78\x32\x33\x2c\x20\x61\x73\x72\x20\x23\x36");
  COMPARE(cmp(w24, Operand(w25)), "\x63\x6d\x70\x20\x77\x32\x34\x2c\x20\x77\x32\x35");
  COMPARE(cmp(x26, Operand(cp, LSL, 63)), "\x63\x6d\x70\x20\x78\x32\x36\x2c\x20\x63\x70\x2c\x20\x6c\x73\x6c\x20\x23\x36\x33");
  COMPARE(neg(w28, Operand(w29)), "\x6e\x65\x67\x20\x77\x32\x38\x2c\x20\x77\x32\x39");
  COMPARE(neg(lr, Operand(x0, LSR, 62)), "\x6e\x65\x67\x20\x6c\x72\x2c\x20\x78\x30\x2c\x20\x6c\x73\x72\x20\x23\x36\x32");
  COMPARE(negs(w1, Operand(w2)), "\x6e\x65\x67\x73\x20\x77\x31\x2c\x20\x77\x32");
  COMPARE(negs(x3, Operand(x4, ASR, 61)), "\x6e\x65\x67\x73\x20\x78\x33\x2c\x20\x78\x34\x2c\x20\x61\x73\x72\x20\x23\x36\x31");

  COMPARE(sub(x0, csp, Operand(x1)), "\x73\x75\x62\x20\x78\x30\x2c\x20\x63\x73\x70\x2c\x20\x78\x31");
  COMPARE(sub(w2, wcsp, Operand(w3)), "\x73\x75\x62\x20\x77\x32\x2c\x20\x77\x63\x73\x70\x2c\x20\x77\x33");
  COMPARE(sub(x4, csp, Operand(x5, LSL, 1)), "\x73\x75\x62\x20\x78\x34\x2c\x20\x63\x73\x70\x2c\x20\x78\x35\x2c\x20\x6c\x73\x6c\x20\x23\x31");
  COMPARE(sub(x4, xzr, Operand(x5, LSL, 1)), "\x6e\x65\x67\x20\x78\x34\x2c\x20\x78\x35\x2c\x20\x6c\x73\x6c\x20\x23\x31");
  COMPARE(sub(w6, wcsp, Operand(w7, LSL, 3)), "\x73\x75\x62\x20\x77\x36\x2c\x20\x77\x63\x73\x70\x2c\x20\x77\x37\x2c\x20\x6c\x73\x6c\x20\x23\x33");
  COMPARE(subs(xzr, csp, Operand(x8, LSL, 4)), "\x63\x6d\x70\x20\x63\x73\x70\x2c\x20\x78\x38\x2c\x20\x6c\x73\x6c\x20\x23\x34");
  COMPARE(subs(xzr, xzr, Operand(x8, LSL, 5)), "\x63\x6d\x70\x20\x78\x7a\x72\x2c\x20\x78\x38\x2c\x20\x6c\x73\x6c\x20\x23\x35");

  CLEANUP();
}


TEST_(add_extended) {
  SET_UP();

  COMPARE(add(w0, w1, Operand(w2, UXTB)), "\x61\x64\x64\x20\x77\x30\x2c\x20\x77\x31\x2c\x20\x77\x32\x2c\x20\x75\x78\x74\x62");
  COMPARE(adds(x3, x4, Operand(w5, UXTB, 1)), "\x61\x64\x64\x73\x20\x78\x33\x2c\x20\x78\x34\x2c\x20\x77\x35\x2c\x20\x75\x78\x74\x62\x20\x23\x31");
  COMPARE(add(w6, w7, Operand(w8, UXTH, 2)), "\x61\x64\x64\x20\x77\x36\x2c\x20\x77\x37\x2c\x20\x77\x38\x2c\x20\x75\x78\x74\x68\x20\x23\x32");
  COMPARE(adds(x9, x10, Operand(x11, UXTW, 3)), "\x61\x64\x64\x73\x20\x78\x39\x2c\x20\x78\x31\x30\x2c\x20\x77\x31\x31\x2c\x20\x75\x78\x74\x77\x20\x23\x33");
  COMPARE(add(x12, x13, Operand(x14, UXTX, 4)), "\x61\x64\x64\x20\x78\x31\x32\x2c\x20\x78\x31\x33\x2c\x20\x78\x31\x34\x2c\x20\x75\x78\x74\x78\x20\x23\x34");
  COMPARE(adds(w15, w16, Operand(w17, SXTB, 4)), "\x61\x64\x64\x73\x20\x77\x31\x35\x2c\x20\x77\x31\x36\x2c\x20\x77\x31\x37\x2c\x20\x73\x78\x74\x62\x20\x23\x34");
  COMPARE(add(x18, x19, Operand(x20, SXTB, 3)), "\x61\x64\x64\x20\x78\x31\x38\x2c\x20\x78\x31\x39\x2c\x20\x77\x32\x30\x2c\x20\x73\x78\x74\x62\x20\x23\x33");
  COMPARE(adds(w21, w22, Operand(w23, SXTH, 2)), "\x61\x64\x64\x73\x20\x77\x32\x31\x2c\x20\x77\x32\x32\x2c\x20\x77\x32\x33\x2c\x20\x73\x78\x74\x68\x20\x23\x32");
  COMPARE(add(x24, x25, Operand(x26, SXTW, 1)), "\x61\x64\x64\x20\x78\x32\x34\x2c\x20\x78\x32\x35\x2c\x20\x77\x32\x36\x2c\x20\x73\x78\x74\x77\x20\x23\x31");
  COMPARE(adds(cp, jssp, Operand(fp, SXTX)), "\x61\x64\x64\x73\x20\x63\x70\x2c\x20\x6a\x73\x73\x70\x2c\x20\x66\x70\x2c\x20\x73\x78\x74\x78");
  COMPARE(cmn(w0, Operand(w1, UXTB, 2)), "\x63\x6d\x6e\x20\x77\x30\x2c\x20\x77\x31\x2c\x20\x75\x78\x74\x62\x20\x23\x32");
  COMPARE(cmn(x2, Operand(x3, SXTH, 4)), "\x63\x6d\x6e\x20\x78\x32\x2c\x20\x77\x33\x2c\x20\x73\x78\x74\x68\x20\x23\x34");

  COMPARE(add(w0, wcsp, Operand(w1, UXTB)), "\x61\x64\x64\x20\x77\x30\x2c\x20\x77\x63\x73\x70\x2c\x20\x77\x31\x2c\x20\x75\x78\x74\x62");
  COMPARE(add(x2, csp, Operand(x3, UXTH, 1)), "\x61\x64\x64\x20\x78\x32\x2c\x20\x63\x73\x70\x2c\x20\x77\x33\x2c\x20\x75\x78\x74\x68\x20\x23\x31");
  COMPARE(add(wcsp, wcsp, Operand(w4, UXTW, 2)), "\x61\x64\x64\x20\x77\x63\x73\x70\x2c\x20\x77\x63\x73\x70\x2c\x20\x77\x34\x2c\x20\x6c\x73\x6c\x20\x23\x32");
  COMPARE(cmn(csp, Operand(xzr, UXTX, 3)), "\x63\x6d\x6e\x20\x63\x73\x70\x2c\x20\x78\x7a\x72\x2c\x20\x6c\x73\x6c\x20\x23\x33");
  COMPARE(cmn(csp, Operand(xzr, LSL, 4)), "\x63\x6d\x6e\x20\x63\x73\x70\x2c\x20\x78\x7a\x72\x2c\x20\x6c\x73\x6c\x20\x23\x34");

  CLEANUP();
}


TEST_(sub_extended) {
  SET_UP();

  COMPARE(sub(w0, w1, Operand(w2, UXTB)), "\x73\x75\x62\x20\x77\x30\x2c\x20\x77\x31\x2c\x20\x77\x32\x2c\x20\x75\x78\x74\x62");
  COMPARE(subs(x3, x4, Operand(w5, UXTB, 1)), "\x73\x75\x62\x73\x20\x78\x33\x2c\x20\x78\x34\x2c\x20\x77\x35\x2c\x20\x75\x78\x74\x62\x20\x23\x31");
  COMPARE(sub(w6, w7, Operand(w8, UXTH, 2)), "\x73\x75\x62\x20\x77\x36\x2c\x20\x77\x37\x2c\x20\x77\x38\x2c\x20\x75\x78\x74\x68\x20\x23\x32");
  COMPARE(subs(x9, x10, Operand(x11, UXTW, 3)), "\x73\x75\x62\x73\x20\x78\x39\x2c\x20\x78\x31\x30\x2c\x20\x77\x31\x31\x2c\x20\x75\x78\x74\x77\x20\x23\x33");
  COMPARE(sub(x12, x13, Operand(x14, UXTX, 4)), "\x73\x75\x62\x20\x78\x31\x32\x2c\x20\x78\x31\x33\x2c\x20\x78\x31\x34\x2c\x20\x75\x78\x74\x78\x20\x23\x34");
  COMPARE(subs(w15, w16, Operand(w17, SXTB, 4)), "\x73\x75\x62\x73\x20\x77\x31\x35\x2c\x20\x77\x31\x36\x2c\x20\x77\x31\x37\x2c\x20\x73\x78\x74\x62\x20\x23\x34");
  COMPARE(sub(x18, x19, Operand(x20, SXTB, 3)), "\x73\x75\x62\x20\x78\x31\x38\x2c\x20\x78\x31\x39\x2c\x20\x77\x32\x30\x2c\x20\x73\x78\x74\x62\x20\x23\x33");
  COMPARE(subs(w21, w22, Operand(w23, SXTH, 2)), "\x73\x75\x62\x73\x20\x77\x32\x31\x2c\x20\x77\x32\x32\x2c\x20\x77\x32\x33\x2c\x20\x73\x78\x74\x68\x20\x23\x32");
  COMPARE(sub(x24, x25, Operand(x26, SXTW, 1)), "\x73\x75\x62\x20\x78\x32\x34\x2c\x20\x78\x32\x35\x2c\x20\x77\x32\x36\x2c\x20\x73\x78\x74\x77\x20\x23\x31");
  COMPARE(subs(cp, jssp, Operand(fp, SXTX)), "\x73\x75\x62\x73\x20\x63\x70\x2c\x20\x6a\x73\x73\x70\x2c\x20\x66\x70\x2c\x20\x73\x78\x74\x78");
  COMPARE(cmp(w0, Operand(w1, SXTB, 1)), "\x63\x6d\x70\x20\x77\x30\x2c\x20\x77\x31\x2c\x20\x73\x78\x74\x62\x20\x23\x31");
  COMPARE(cmp(x2, Operand(x3, UXTH, 3)), "\x63\x6d\x70\x20\x78\x32\x2c\x20\x77\x33\x2c\x20\x75\x78\x74\x68\x20\x23\x33");

  COMPARE(sub(w0, wcsp, Operand(w1, UXTB)), "\x73\x75\x62\x20\x77\x30\x2c\x20\x77\x63\x73\x70\x2c\x20\x77\x31\x2c\x20\x75\x78\x74\x62");
  COMPARE(sub(x2, csp, Operand(x3, UXTH, 1)), "\x73\x75\x62\x20\x78\x32\x2c\x20\x63\x73\x70\x2c\x20\x77\x33\x2c\x20\x75\x78\x74\x68\x20\x23\x31");
  COMPARE(sub(wcsp, wcsp, Operand(w4, UXTW, 2)), "\x73\x75\x62\x20\x77\x63\x73\x70\x2c\x20\x77\x63\x73\x70\x2c\x20\x77\x34\x2c\x20\x6c\x73\x6c\x20\x23\x32");
  COMPARE(cmp(csp, Operand(xzr, UXTX, 3)), "\x63\x6d\x70\x20\x63\x73\x70\x2c\x20\x78\x7a\x72\x2c\x20\x6c\x73\x6c\x20\x23\x33");
  COMPARE(cmp(csp, Operand(xzr, LSL, 4)), "\x63\x6d\x70\x20\x63\x73\x70\x2c\x20\x78\x7a\x72\x2c\x20\x6c\x73\x6c\x20\x23\x34");

  CLEANUP();
}


TEST_(adc_subc_ngc) {
  SET_UP();

  COMPARE(adc(w0, w1, Operand(w2)), "\x61\x64\x63\x20\x77\x30\x2c\x20\x77\x31\x2c\x20\x77\x32");
  COMPARE(adc(x3, x4, Operand(x5)), "\x61\x64\x63\x20\x78\x33\x2c\x20\x78\x34\x2c\x20\x78\x35");
  COMPARE(adcs(w6, w7, Operand(w8)), "\x61\x64\x63\x73\x20\x77\x36\x2c\x20\x77\x37\x2c\x20\x77\x38");
  COMPARE(adcs(x9, x10, Operand(x11)), "\x61\x64\x63\x73\x20\x78\x39\x2c\x20\x78\x31\x30\x2c\x20\x78\x31\x31");
  COMPARE(sbc(w12, w13, Operand(w14)), "\x73\x62\x63\x20\x77\x31\x32\x2c\x20\x77\x31\x33\x2c\x20\x77\x31\x34");
  COMPARE(sbc(x15, x16, Operand(x17)), "\x73\x62\x63\x20\x78\x31\x35\x2c\x20\x78\x31\x36\x2c\x20\x78\x31\x37");
  COMPARE(sbcs(w18, w19, Operand(w20)), "\x73\x62\x63\x73\x20\x77\x31\x38\x2c\x20\x77\x31\x39\x2c\x20\x77\x32\x30");
  COMPARE(sbcs(x21, x22, Operand(x23)), "\x73\x62\x63\x73\x20\x78\x32\x31\x2c\x20\x78\x32\x32\x2c\x20\x78\x32\x33");
  COMPARE(ngc(w24, Operand(w25)), "\x6e\x67\x63\x20\x77\x32\x34\x2c\x20\x77\x32\x35");
  COMPARE(ngc(x26, Operand(cp)), "\x6e\x67\x63\x20\x78\x32\x36\x2c\x20\x63\x70");
  COMPARE(ngcs(w28, Operand(w29)), "\x6e\x67\x63\x73\x20\x77\x32\x38\x2c\x20\x77\x32\x39");
  COMPARE(ngcs(lr, Operand(x0)), "\x6e\x67\x63\x73\x20\x6c\x72\x2c\x20\x78\x30");

  CLEANUP();
}


TEST_(mul_and_div) {
  SET_UP();

  COMPARE(mul(w0, w1, w2), "\x6d\x75\x6c\x20\x77\x30\x2c\x20\x77\x31\x2c\x20\x77\x32");
  COMPARE(mul(x3, x4, x5), "\x6d\x75\x6c\x20\x78\x33\x2c\x20\x78\x34\x2c\x20\x78\x35");
  COMPARE(mul(w30, w0, w1), "\x6d\x75\x6c\x20\x77\x33\x30\x2c\x20\x77\x30\x2c\x20\x77\x31");
  COMPARE(mul(lr, x0, x1), "\x6d\x75\x6c\x20\x6c\x72\x2c\x20\x78\x30\x2c\x20\x78\x31");
  COMPARE(mneg(w0, w1, w2), "\x6d\x6e\x65\x67\x20\x77\x30\x2c\x20\x77\x31\x2c\x20\x77\x32");
  COMPARE(mneg(x3, x4, x5), "\x6d\x6e\x65\x67\x20\x78\x33\x2c\x20\x78\x34\x2c\x20\x78\x35");
  COMPARE(mneg(w30, w0, w1), "\x6d\x6e\x65\x67\x20\x77\x33\x30\x2c\x20\x77\x30\x2c\x20\x77\x31");
  COMPARE(mneg(lr, x0, x1), "\x6d\x6e\x65\x67\x20\x6c\x72\x2c\x20\x78\x30\x2c\x20\x78\x31");
  COMPARE(smull(x0, w0, w1), "\x73\x6d\x75\x6c\x6c\x20\x78\x30\x2c\x20\x77\x30\x2c\x20\x77\x31");
  COMPARE(smull(lr, w30, w0), "\x73\x6d\x75\x6c\x6c\x20\x6c\x72\x2c\x20\x77\x33\x30\x2c\x20\x77\x30");
  COMPARE(smulh(x0, x1, x2), "\x73\x6d\x75\x6c\x68\x20\x78\x30\x2c\x20\x78\x31\x2c\x20\x78\x32");

  COMPARE(madd(w0, w1, w2, w3), "\x6d\x61\x64\x64\x20\x77\x30\x2c\x20\x77\x31\x2c\x20\x77\x32\x2c\x20\x77\x33");
  COMPARE(madd(x4, x5, x6, x7), "\x6d\x61\x64\x64\x20\x78\x34\x2c\x20\x78\x35\x2c\x20\x78\x36\x2c\x20\x78\x37");
  COMPARE(madd(w8, w9, w10, wzr), "\x6d\x75\x6c\x20\x77\x38\x2c\x20\x77\x39\x2c\x20\x77\x31\x30");
  COMPARE(madd(x11, x12, x13, xzr), "\x6d\x75\x6c\x20\x78\x31\x31\x2c\x20\x78\x31\x32\x2c\x20\x78\x31\x33");
  COMPARE(msub(w14, w15, w16, w17), "\x6d\x73\x75\x62\x20\x77\x31\x34\x2c\x20\x77\x31\x35\x2c\x20\x77\x31\x36\x2c\x20\x77\x31\x37");
  COMPARE(msub(x18, x19, x20, x21), "\x6d\x73\x75\x62\x20\x78\x31\x38\x2c\x20\x78\x31\x39\x2c\x20\x78\x32\x30\x2c\x20\x78\x32\x31");
  COMPARE(msub(w22, w23, w24, wzr), "\x6d\x6e\x65\x67\x20\x77\x32\x32\x2c\x20\x77\x32\x33\x2c\x20\x77\x32\x34");
  COMPARE(msub(x25, x26, x0, xzr), "\x6d\x6e\x65\x67\x20\x78\x32\x35\x2c\x20\x78\x32\x36\x2c\x20\x78\x30");

  COMPARE(sdiv(w0, w1, w2), "\x73\x64\x69\x76\x20\x77\x30\x2c\x20\x77\x31\x2c\x20\x77\x32");
  COMPARE(sdiv(x3, x4, x5), "\x73\x64\x69\x76\x20\x78\x33\x2c\x20\x78\x34\x2c\x20\x78\x35");
  COMPARE(udiv(w6, w7, w8), "\x75\x64\x69\x76\x20\x77\x36\x2c\x20\x77\x37\x2c\x20\x77\x38");
  COMPARE(udiv(x9, x10, x11), "\x75\x64\x69\x76\x20\x78\x39\x2c\x20\x78\x31\x30\x2c\x20\x78\x31\x31");

  CLEANUP();
}


TEST(maddl_msubl) {
  SET_UP();

  COMPARE(smaddl(x0, w1, w2, x3), "\x73\x6d\x61\x64\x64\x6c\x20\x78\x30\x2c\x20\x77\x31\x2c\x20\x77\x32\x2c\x20\x78\x33");
  COMPARE(smaddl(x25, w21, w22, x16), "\x73\x6d\x61\x64\x64\x6c\x20\x78\x32\x35\x2c\x20\x77\x32\x31\x2c\x20\x77\x32\x32\x2c\x20\x78\x31\x36");
  COMPARE(umaddl(x0, w1, w2, x3), "\x75\x6d\x61\x64\x64\x6c\x20\x78\x30\x2c\x20\x77\x31\x2c\x20\x77\x32\x2c\x20\x78\x33");
  COMPARE(umaddl(x25, w21, w22, x16), "\x75\x6d\x61\x64\x64\x6c\x20\x78\x32\x35\x2c\x20\x77\x32\x31\x2c\x20\x77\x32\x32\x2c\x20\x78\x31\x36");

  COMPARE(smsubl(x0, w1, w2, x3), "\x73\x6d\x73\x75\x62\x6c\x20\x78\x30\x2c\x20\x77\x31\x2c\x20\x77\x32\x2c\x20\x78\x33");
  COMPARE(smsubl(x25, w21, w22, x16), "\x73\x6d\x73\x75\x62\x6c\x20\x78\x32\x35\x2c\x20\x77\x32\x31\x2c\x20\x77\x32\x32\x2c\x20\x78\x31\x36");
  COMPARE(umsubl(x0, w1, w2, x3), "\x75\x6d\x73\x75\x62\x6c\x20\x78\x30\x2c\x20\x77\x31\x2c\x20\x77\x32\x2c\x20\x78\x33");
  COMPARE(umsubl(x25, w21, w22, x16), "\x75\x6d\x73\x75\x62\x6c\x20\x78\x32\x35\x2c\x20\x77\x32\x31\x2c\x20\x77\x32\x32\x2c\x20\x78\x31\x36");

  CLEANUP();
}


TEST_(dp_1_source) {
  SET_UP();

  COMPARE(rbit(w0, w1), "\x72\x62\x69\x74\x20\x77\x30\x2c\x20\x77\x31");
  COMPARE(rbit(x2, x3), "\x72\x62\x69\x74\x20\x78\x32\x2c\x20\x78\x33");
  COMPARE(rev16(w4, w5), "\x72\x65\x76\x31\x36\x20\x77\x34\x2c\x20\x77\x35");
  COMPARE(rev16(x6, x7), "\x72\x65\x76\x31\x36\x20\x78\x36\x2c\x20\x78\x37");
  COMPARE(rev32(x8, x9), "\x72\x65\x76\x33\x32\x20\x78\x38\x2c\x20\x78\x39");
  COMPARE(rev(w10, w11), "\x72\x65\x76\x20\x77\x31\x30\x2c\x20\x77\x31\x31");
  COMPARE(rev(x12, x13), "\x72\x65\x76\x20\x78\x31\x32\x2c\x20\x78\x31\x33");
  COMPARE(clz(w14, w15), "\x63\x6c\x7a\x20\x77\x31\x34\x2c\x20\x77\x31\x35");
  COMPARE(clz(x16, x17), "\x63\x6c\x7a\x20\x78\x31\x36\x2c\x20\x78\x31\x37");
  COMPARE(cls(w18, w19), "\x63\x6c\x73\x20\x77\x31\x38\x2c\x20\x77\x31\x39");
  COMPARE(cls(x20, x21), "\x63\x6c\x73\x20\x78\x32\x30\x2c\x20\x78\x32\x31");

  CLEANUP();
}


TEST_(bitfield) {
  SET_UP();

  COMPARE(sxtb(w0, w1), "\x73\x78\x74\x62\x20\x77\x30\x2c\x20\x77\x31");
  COMPARE(sxtb(x2, x3), "\x73\x78\x74\x62\x20\x78\x32\x2c\x20\x77\x33");
  COMPARE(sxth(w4, w5), "\x73\x78\x74\x68\x20\x77\x34\x2c\x20\x77\x35");
  COMPARE(sxth(x6, x7), "\x73\x78\x74\x68\x20\x78\x36\x2c\x20\x77\x37");
  COMPARE(sxtw(x8, x9), "\x73\x78\x74\x77\x20\x78\x38\x2c\x20\x77\x39");
  COMPARE(sxtb(x0, w1), "\x73\x78\x74\x62\x20\x78\x30\x2c\x20\x77\x31");
  COMPARE(sxth(x2, w3), "\x73\x78\x74\x68\x20\x78\x32\x2c\x20\x77\x33");
  COMPARE(sxtw(x4, w5), "\x73\x78\x74\x77\x20\x78\x34\x2c\x20\x77\x35");

  COMPARE(uxtb(w10, w11), "\x75\x78\x74\x62\x20\x77\x31\x30\x2c\x20\x77\x31\x31");
  COMPARE(uxtb(x12, x13), "\x75\x78\x74\x62\x20\x78\x31\x32\x2c\x20\x77\x31\x33");
  COMPARE(uxth(w14, w15), "\x75\x78\x74\x68\x20\x77\x31\x34\x2c\x20\x77\x31\x35");
  COMPARE(uxth(x16, x17), "\x75\x78\x74\x68\x20\x78\x31\x36\x2c\x20\x77\x31\x37");
  COMPARE(uxtw(x18, x19), "\x75\x62\x66\x78\x20\x78\x31\x38\x2c\x20\x78\x31\x39\x2c\x20\x23\x30\x2c\x20\x23\x33\x32");

  COMPARE(asr(w20, w21, 10), "\x61\x73\x72\x20\x77\x32\x30\x2c\x20\x77\x32\x31\x2c\x20\x23\x31\x30");
  COMPARE(asr(x22, x23, 20), "\x61\x73\x72\x20\x78\x32\x32\x2c\x20\x78\x32\x33\x2c\x20\x23\x32\x30");
  COMPARE(lsr(w24, w25, 10), "\x6c\x73\x72\x20\x77\x32\x34\x2c\x20\x77\x32\x35\x2c\x20\x23\x31\x30");
  COMPARE(lsr(x26, cp, 20), "\x6c\x73\x72\x20\x78\x32\x36\x2c\x20\x63\x70\x2c\x20\x23\x32\x30");
  COMPARE(lsl(w28, w29, 10), "\x6c\x73\x6c\x20\x77\x32\x38\x2c\x20\x77\x32\x39\x2c\x20\x23\x31\x30");
  COMPARE(lsl(lr, x0, 20), "\x6c\x73\x6c\x20\x6c\x72\x2c\x20\x78\x30\x2c\x20\x23\x32\x30");

  COMPARE(sbfiz(w1, w2, 1, 20), "\x73\x62\x66\x69\x7a\x20\x77\x31\x2c\x20\x77\x32\x2c\x20\x23\x31\x2c\x20\x23\x32\x30");
  COMPARE(sbfiz(x3, x4, 2, 19), "\x73\x62\x66\x69\x7a\x20\x78\x33\x2c\x20\x78\x34\x2c\x20\x23\x32\x2c\x20\x23\x31\x39");
  COMPARE(sbfx(w5, w6, 3, 18), "\x73\x62\x66\x78\x20\x77\x35\x2c\x20\x77\x36\x2c\x20\x23\x33\x2c\x20\x23\x31\x38");
  COMPARE(sbfx(x7, x8, 4, 17), "\x73\x62\x66\x78\x20\x78\x37\x2c\x20\x78\x38\x2c\x20\x23\x34\x2c\x20\x23\x31\x37");
  COMPARE(bfi(w9, w10, 5, 16), "\x62\x66\x69\x20\x77\x39\x2c\x20\x77\x31\x30\x2c\x20\x23\x35\x2c\x20\x23\x31\x36");
  COMPARE(bfi(x11, x12, 6, 15), "\x62\x66\x69\x20\x78\x31\x31\x2c\x20\x78\x31\x32\x2c\x20\x23\x36\x2c\x20\x23\x31\x35");
  COMPARE(bfxil(w13, w14, 7, 14), "\x62\x66\x78\x69\x6c\x20\x77\x31\x33\x2c\x20\x77\x31\x34\x2c\x20\x23\x37\x2c\x20\x23\x31\x34");
  COMPARE(bfxil(x15, x16, 8, 13), "\x62\x66\x78\x69\x6c\x20\x78\x31\x35\x2c\x20\x78\x31\x36\x2c\x20\x23\x38\x2c\x20\x23\x31\x33");
  COMPARE(ubfiz(w17, w18, 9, 12), "\x75\x62\x66\x69\x7a\x20\x77\x31\x37\x2c\x20\x77\x31\x38\x2c\x20\x23\x39\x2c\x20\x23\x31\x32");
  COMPARE(ubfiz(x19, x20, 10, 11), "\x75\x62\x66\x69\x7a\x20\x78\x31\x39\x2c\x20\x78\x32\x30\x2c\x20\x23\x31\x30\x2c\x20\x23\x31\x31");
  COMPARE(ubfx(w21, w22, 11, 10), "\x75\x62\x66\x78\x20\x77\x32\x31\x2c\x20\x77\x32\x32\x2c\x20\x23\x31\x31\x2c\x20\x23\x31\x30");
  COMPARE(ubfx(x23, x24, 12, 9), "\x75\x62\x66\x78\x20\x78\x32\x33\x2c\x20\x78\x32\x34\x2c\x20\x23\x31\x32\x2c\x20\x23\x39");

  CLEANUP();
}


TEST_(extract) {
  SET_UP();

  COMPARE(extr(w0, w1, w2, 0), "\x65\x78\x74\x72\x20\x77\x30\x2c\x20\x77\x31\x2c\x20\x77\x32\x2c\x20\x23\x30");
  COMPARE(extr(x3, x4, x5, 1), "\x65\x78\x74\x72\x20\x78\x33\x2c\x20\x78\x34\x2c\x20\x78\x35\x2c\x20\x23\x31");
  COMPARE(extr(w6, w7, w8, 31), "\x65\x78\x74\x72\x20\x77\x36\x2c\x20\x77\x37\x2c\x20\x77\x38\x2c\x20\x23\x33\x31");
  COMPARE(extr(x9, x10, x11, 63), "\x65\x78\x74\x72\x20\x78\x39\x2c\x20\x78\x31\x30\x2c\x20\x78\x31\x31\x2c\x20\x23\x36\x33");
  COMPARE(extr(w12, w13, w13, 10), "\x72\x6f\x72\x20\x77\x31\x32\x2c\x20\x77\x31\x33\x2c\x20\x23\x31\x30");
  COMPARE(extr(x14, x15, x15, 42), "\x72\x6f\x72\x20\x78\x31\x34\x2c\x20\x78\x31\x35\x2c\x20\x23\x34\x32");

  CLEANUP();
}


TEST_(logical_immediate) {
  SET_UP();
  #define RESULT_SIZE (256)

  char result[RESULT_SIZE];

  // Test immediate encoding - 64-bit destination.
  // 64-bit patterns.
  uint64_t value = 0x7fffffff;
  for (int i = 0; i < 64; i++) {
    snprintf(result, RESULT_SIZE, "\x61\x6e\x64\x20\x78\x30\x2c\x20\x78\x30\x2c\x20\x23\x30\x78\x25" PRIx64, value);
    COMPARE(and_(x0, x0, Operand(value)), result);
    value = ((value & 1) << 63) | (value >> 1);  // Rotate right 1 bit.
  }

  // 32-bit patterns.
  value = 0x00003fff00003fffL;
  for (int i = 0; i < 32; i++) {
    snprintf(result, RESULT_SIZE, "\x61\x6e\x64\x20\x78\x30\x2c\x20\x78\x30\x2c\x20\x23\x30\x78\x25" PRIx64, value);
    COMPARE(and_(x0, x0, Operand(value)), result);
    value = ((value & 1) << 63) | (value >> 1);  // Rotate right 1 bit.
  }

  // 16-bit patterns.
  value = 0x001f001f001f001fL;
  for (int i = 0; i < 16; i++) {
    snprintf(result, RESULT_SIZE, "\x61\x6e\x64\x20\x78\x30\x2c\x20\x78\x30\x2c\x20\x23\x30\x78\x25" PRIx64, value);
    COMPARE(and_(x0, x0, Operand(value)), result);
    value = ((value & 1) << 63) | (value >> 1);  // Rotate right 1 bit.
  }

  // 8-bit patterns.
  value = 0x0e0e0e0e0e0e0e0eL;
  for (int i = 0; i < 8; i++) {
    snprintf(result, RESULT_SIZE, "\x61\x6e\x64\x20\x78\x30\x2c\x20\x78\x30\x2c\x20\x23\x30\x78\x25" PRIx64, value);
    COMPARE(and_(x0, x0, Operand(value)), result);
    value = ((value & 1) << 63) | (value >> 1);  // Rotate right 1 bit.
  }

  // 4-bit patterns.
  value = 0x6666666666666666L;
  for (int i = 0; i < 4; i++) {
    snprintf(result, RESULT_SIZE, "\x61\x6e\x64\x20\x78\x30\x2c\x20\x78\x30\x2c\x20\x23\x30\x78\x25" PRIx64, value);
    COMPARE(and_(x0, x0, Operand(value)), result);
    value = ((value & 1) << 63) | (value >> 1);  // Rotate right 1 bit.
  }

  // 2-bit patterns.
  COMPARE(and_(x0, x0, Operand(0x5555555555555555L)),
          "\x61\x6e\x64\x20\x78\x30\x2c\x20\x78\x30\x2c\x20\x23\x30\x78\x35\x35\x35\x35\x35\x35\x35\x35\x35\x35\x35\x35\x35\x35\x35\x35");
  COMPARE(and_(x0, x0, Operand(0xaaaaaaaaaaaaaaaaL)),
          "\x61\x6e\x64\x20\x78\x30\x2c\x20\x78\x30\x2c\x20\x23\x30\x78\x61\x61\x61\x61\x61\x61\x61\x61\x61\x61\x61\x61\x61\x61\x61\x61");

  // Test immediate encoding - 32-bit destination.
  COMPARE(and_(w0, w0, Operand(0xff8007ff)),
          "\x61\x6e\x64\x20\x77\x30\x2c\x20\x77\x30\x2c\x20\x23\x30\x78\x66\x66\x38\x30\x30\x37\x66\x66");  // 32-bit pattern.
  COMPARE(and_(w0, w0, Operand(0xf87ff87f)),
          "\x61\x6e\x64\x20\x77\x30\x2c\x20\x77\x30\x2c\x20\x23\x30\x78\x66\x38\x37\x66\x66\x38\x37\x66");  // 16-bit pattern.
  COMPARE(and_(w0, w0, Operand(0x87878787)),
          "\x61\x6e\x64\x20\x77\x30\x2c\x20\x77\x30\x2c\x20\x23\x30\x78\x38\x37\x38\x37\x38\x37\x38\x37");  // 8-bit pattern.
  COMPARE(and_(w0, w0, Operand(0x66666666)),
          "\x61\x6e\x64\x20\x77\x30\x2c\x20\x77\x30\x2c\x20\x23\x30\x78\x36\x36\x36\x36\x36\x36\x36\x36");  // 4-bit pattern.
  COMPARE(and_(w0, w0, Operand(0x55555555)),
          "\x61\x6e\x64\x20\x77\x30\x2c\x20\x77\x30\x2c\x20\x23\x30\x78\x35\x35\x35\x35\x35\x35\x35\x35");  // 2-bit pattern.

  // Test other instructions.
  COMPARE(tst(w1, Operand(0x11111111)),
          "\x74\x73\x74\x20\x77\x31\x2c\x20\x23\x30\x78\x31\x31\x31\x31\x31\x31\x31\x31");
  COMPARE(tst(x2, Operand(0x8888888888888888L)),
          "\x74\x73\x74\x20\x78\x32\x2c\x20\x23\x30\x78\x38\x38\x38\x38\x38\x38\x38\x38\x38\x38\x38\x38\x38\x38\x38\x38");
  COMPARE(orr(w7, w8, Operand(0xaaaaaaaa)),
          "\x6f\x72\x72\x20\x77\x37\x2c\x20\x77\x38\x2c\x20\x23\x30\x78\x61\x61\x61\x61\x61\x61\x61\x61");
  COMPARE(orr(x9, x10, Operand(0x5555555555555555L)),
          "\x6f\x72\x72\x20\x78\x39\x2c\x20\x78\x31\x30\x2c\x20\x23\x30\x78\x35\x35\x35\x35\x35\x35\x35\x35\x35\x35\x35\x35\x35\x35\x35\x35");
  COMPARE(eor(w15, w16, Operand(0x00000001)),
          "\x65\x6f\x72\x20\x77\x31\x35\x2c\x20\x77\x31\x36\x2c\x20\x23\x30\x78\x31");
  COMPARE(eor(x17, x18, Operand(0x0000000000000003L)),
          "\x65\x6f\x72\x20\x78\x31\x37\x2c\x20\x78\x31\x38\x2c\x20\x23\x30\x78\x33");
  COMPARE(ands(w23, w24, Operand(0x0000000f)), "\x61\x6e\x64\x73\x20\x77\x32\x33\x2c\x20\x77\x32\x34\x2c\x20\x23\x30\x78\x66");
  COMPARE(ands(x25, x26, Operand(0x800000000000000fL)),
          "\x61\x6e\x64\x73\x20\x78\x32\x35\x2c\x20\x78\x32\x36\x2c\x20\x23\x30\x78\x38\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x30\x66");

  // Test inverse.
  COMPARE(bic(w3, w4, Operand(0x20202020)),
          "\x61\x6e\x64\x20\x77\x33\x2c\x20\x77\x34\x2c\x20\x23\x30\x78\x64\x66\x64\x66\x64\x66\x64\x66");
  COMPARE(bic(x5, x6, Operand(0x4040404040404040L)),
          "\x61\x6e\x64\x20\x78\x35\x2c\x20\x78\x36\x2c\x20\x23\x30\x78\x62\x66\x62\x66\x62\x66\x62\x66\x62\x66\x62\x66\x62\x66\x62\x66");
  COMPARE(orn(w11, w12, Operand(0x40004000)),
          "\x6f\x72\x72\x20\x77\x31\x31\x2c\x20\x77\x31\x32\x2c\x20\x23\x30\x78\x62\x66\x66\x66\x62\x66\x66\x66");
  COMPARE(orn(x13, x14, Operand(0x8181818181818181L)),
          "\x6f\x72\x72\x20\x78\x31\x33\x2c\x20\x78\x31\x34\x2c\x20\x23\x30\x78\x37\x65\x37\x65\x37\x65\x37\x65\x37\x65\x37\x65\x37\x65\x37\x65");
  COMPARE(eon(w19, w20, Operand(0x80000001)),
          "\x65\x6f\x72\x20\x77\x31\x39\x2c\x20\x77\x32\x30\x2c\x20\x23\x30\x78\x37\x66\x66\x66\x66\x66\x66\x65");
  COMPARE(eon(x21, x22, Operand(0xc000000000000003L)),
          "\x65\x6f\x72\x20\x78\x32\x31\x2c\x20\x78\x32\x32\x2c\x20\x23\x30\x78\x33\x66\x66\x66\x66\x66\x66\x66\x66\x66\x66\x66\x66\x66\x66\x63");
  COMPARE(bics(w27, w28, Operand(0xfffffff7)), "\x61\x6e\x64\x73\x20\x77\x32\x37\x2c\x20\x77\x32\x38\x2c\x20\x23\x30\x78\x38");
  COMPARE(bics(fp, x0, Operand(0xfffffffeffffffffL)),
          "\x61\x6e\x64\x73\x20\x66\x70\x2c\x20\x78\x30\x2c\x20\x23\x30\x78\x31\x30\x30\x30\x30\x30\x30\x30\x30");

  // Test stack pointer.
  COMPARE(and_(wcsp, wzr, Operand(7)), "\x61\x6e\x64\x20\x77\x63\x73\x70\x2c\x20\x77\x7a\x72\x2c\x20\x23\x30\x78\x37");
  COMPARE(ands(xzr, xzr, Operand(7)), "\x74\x73\x74\x20\x78\x7a\x72\x2c\x20\x23\x30\x78\x37");
  COMPARE(orr(csp, xzr, Operand(15)), "\x6f\x72\x72\x20\x63\x73\x70\x2c\x20\x78\x7a\x72\x2c\x20\x23\x30\x78\x66");
  COMPARE(eor(wcsp, w0, Operand(31)), "\x65\x6f\x72\x20\x77\x63\x73\x70\x2c\x20\x77\x30\x2c\x20\x23\x30\x78\x31\x66");

  // Test move aliases.
  COMPARE(orr(w0, wzr, Operand(0x00000780)), "\x6f\x72\x72\x20\x77\x30\x2c\x20\x77\x7a\x72\x2c\x20\x23\x30\x78\x37\x38\x30");
  COMPARE(orr(w1, wzr, Operand(0x00007800)), "\x6f\x72\x72\x20\x77\x31\x2c\x20\x77\x7a\x72\x2c\x20\x23\x30\x78\x37\x38\x30\x30");
  COMPARE(orr(w2, wzr, Operand(0x00078000)), "\x6d\x6f\x76\x20\x77\x32\x2c\x20\x23\x30\x78\x37\x38\x30\x30\x30");
  COMPARE(orr(w3, wzr, Operand(0x00780000)), "\x6f\x72\x72\x20\x77\x33\x2c\x20\x77\x7a\x72\x2c\x20\x23\x30\x78\x37\x38\x30\x30\x30\x30");
  COMPARE(orr(w4, wzr, Operand(0x07800000)), "\x6f\x72\x72\x20\x77\x34\x2c\x20\x77\x7a\x72\x2c\x20\x23\x30\x78\x37\x38\x30\x30\x30\x30\x30");
  COMPARE(orr(x5, xzr, Operand(0xffffffffffffc001UL)),
          "\x6f\x72\x72\x20\x78\x35\x2c\x20\x78\x7a\x72\x2c\x20\x23\x30\x78\x66\x66\x66\x66\x66\x66\x66\x66\x66\x66\x66\x66\x63\x30\x30\x31");
  COMPARE(orr(x6, xzr, Operand(0xfffffffffffc001fUL)),
          "\x6d\x6f\x76\x20\x78\x36\x2c\x20\x23\x30\x78\x66\x66\x66\x66\x66\x66\x66\x66\x66\x66\x66\x63\x30\x30\x31\x66");
  COMPARE(orr(x7, xzr, Operand(0xffffffffffc001ffUL)),
          "\x6d\x6f\x76\x20\x78\x37\x2c\x20\x23\x30\x78\x66\x66\x66\x66\x66\x66\x66\x66\x66\x66\x63\x30\x30\x31\x66\x66");
  COMPARE(orr(x8, xzr, Operand(0xfffffffffc001fffUL)),
          "\x6d\x6f\x76\x20\x78\x38\x2c\x20\x23\x30\x78\x66\x66\x66\x66\x66\x66\x66\x66\x66\x63\x30\x30\x31\x66\x66\x66");
  COMPARE(orr(x9, xzr, Operand(0xffffffffc001ffffUL)),
          "\x6f\x72\x72\x20\x78\x39\x2c\x20\x78\x7a\x72\x2c\x20\x23\x30\x78\x66\x66\x66\x66\x66\x66\x66\x66\x63\x30\x30\x31\x66\x66\x66\x66");

  CLEANUP();
}


TEST_(logical_shifted) {
  SET_UP();

  COMPARE(and_(w0, w1, Operand(w2)), "\x61\x6e\x64\x20\x77\x30\x2c\x20\x77\x31\x2c\x20\x77\x32");
  COMPARE(and_(x3, x4, Operand(x5, LSL, 1)), "\x61\x6e\x64\x20\x78\x33\x2c\x20\x78\x34\x2c\x20\x78\x35\x2c\x20\x6c\x73\x6c\x20\x23\x31");
  COMPARE(and_(w6, w7, Operand(w8, LSR, 2)), "\x61\x6e\x64\x20\x77\x36\x2c\x20\x77\x37\x2c\x20\x77\x38\x2c\x20\x6c\x73\x72\x20\x23\x32");
  COMPARE(and_(x9, x10, Operand(x11, ASR, 3)), "\x61\x6e\x64\x20\x78\x39\x2c\x20\x78\x31\x30\x2c\x20\x78\x31\x31\x2c\x20\x61\x73\x72\x20\x23\x33");
  COMPARE(and_(w12, w13, Operand(w14, ROR, 4)), "\x61\x6e\x64\x20\x77\x31\x32\x2c\x20\x77\x31\x33\x2c\x20\x77\x31\x34\x2c\x20\x72\x6f\x72\x20\x23\x34");

  COMPARE(bic(w15, w16, Operand(w17)), "\x62\x69\x63\x20\x77\x31\x35\x2c\x20\x77\x31\x36\x2c\x20\x77\x31\x37");
  COMPARE(bic(x18, x19, Operand(x20, LSL, 5)), "\x62\x69\x63\x20\x78\x31\x38\x2c\x20\x78\x31\x39\x2c\x20\x78\x32\x30\x2c\x20\x6c\x73\x6c\x20\x23\x35");
  COMPARE(bic(w21, w22, Operand(w23, LSR, 6)), "\x62\x69\x63\x20\x77\x32\x31\x2c\x20\x77\x32\x32\x2c\x20\x77\x32\x33\x2c\x20\x6c\x73\x72\x20\x23\x36");
  COMPARE(bic(x24, x25, Operand(x26, ASR, 7)), "\x62\x69\x63\x20\x78\x32\x34\x2c\x20\x78\x32\x35\x2c\x20\x78\x32\x36\x2c\x20\x61\x73\x72\x20\x23\x37");
  COMPARE(bic(w27, w28, Operand(w29, ROR, 8)), "\x62\x69\x63\x20\x77\x32\x37\x2c\x20\x77\x32\x38\x2c\x20\x77\x32\x39\x2c\x20\x72\x6f\x72\x20\x23\x38");

  COMPARE(orr(w0, w1, Operand(w2)), "\x6f\x72\x72\x20\x77\x30\x2c\x20\x77\x31\x2c\x20\x77\x32");
  COMPARE(orr(x3, x4, Operand(x5, LSL, 9)), "\x6f\x72\x72\x20\x78\x33\x2c\x20\x78\x34\x2c\x20\x78\x35\x2c\x20\x6c\x73\x6c\x20\x23\x39");
  COMPARE(orr(w6, w7, Operand(w8, LSR, 10)), "\x6f\x72\x72\x20\x77\x36\x2c\x20\x77\x37\x2c\x20\x77\x38\x2c\x20\x6c\x73\x72\x20\x23\x31\x30");
  COMPARE(orr(x9, x10, Operand(x11, ASR, 11)), "\x6f\x72\x72\x20\x78\x39\x2c\x20\x78\x31\x30\x2c\x20\x78\x31\x31\x2c\x20\x61\x73\x72\x20\x23\x31\x31");
  COMPARE(orr(w12, w13, Operand(w14, ROR, 12)), "\x6f\x72\x72\x20\x77\x31\x32\x2c\x20\x77\x31\x33\x2c\x20\x77\x31\x34\x2c\x20\x72\x6f\x72\x20\x23\x31\x32");

  COMPARE(orn(w15, w16, Operand(w17)), "\x6f\x72\x6e\x20\x77\x31\x35\x2c\x20\x77\x31\x36\x2c\x20\x77\x31\x37");
  COMPARE(orn(x18, x19, Operand(x20, LSL, 13)), "\x6f\x72\x6e\x20\x78\x31\x38\x2c\x20\x78\x31\x39\x2c\x20\x78\x32\x30\x2c\x20\x6c\x73\x6c\x20\x23\x31\x33");
  COMPARE(orn(w21, w22, Operand(w23, LSR, 14)), "\x6f\x72\x6e\x20\x77\x32\x31\x2c\x20\x77\x32\x32\x2c\x20\x77\x32\x33\x2c\x20\x6c\x73\x72\x20\x23\x31\x34");
  COMPARE(orn(x24, x25, Operand(x26, ASR, 15)), "\x6f\x72\x6e\x20\x78\x32\x34\x2c\x20\x78\x32\x35\x2c\x20\x78\x32\x36\x2c\x20\x61\x73\x72\x20\x23\x31\x35");
  COMPARE(orn(w27, w28, Operand(w29, ROR, 16)), "\x6f\x72\x6e\x20\x77\x32\x37\x2c\x20\x77\x32\x38\x2c\x20\x77\x32\x39\x2c\x20\x72\x6f\x72\x20\x23\x31\x36");

  COMPARE(eor(w0, w1, Operand(w2)), "\x65\x6f\x72\x20\x77\x30\x2c\x20\x77\x31\x2c\x20\x77\x32");
  COMPARE(eor(x3, x4, Operand(x5, LSL, 17)), "\x65\x6f\x72\x20\x78\x33\x2c\x20\x78\x34\x2c\x20\x78\x35\x2c\x20\x6c\x73\x6c\x20\x23\x31\x37");
  COMPARE(eor(w6, w7, Operand(w8, LSR, 18)), "\x65\x6f\x72\x20\x77\x36\x2c\x20\x77\x37\x2c\x20\x77\x38\x2c\x20\x6c\x73\x72\x20\x23\x31\x38");
  COMPARE(eor(x9, x10, Operand(x11, ASR, 19)), "\x65\x6f\x72\x20\x78\x39\x2c\x20\x78\x31\x30\x2c\x20\x78\x31\x31\x2c\x20\x61\x73\x72\x20\x23\x31\x39");
  COMPARE(eor(w12, w13, Operand(w14, ROR, 20)), "\x65\x6f\x72\x20\x77\x31\x32\x2c\x20\x77\x31\x33\x2c\x20\x77\x31\x34\x2c\x20\x72\x6f\x72\x20\x23\x32\x30");

  COMPARE(eon(w15, w16, Operand(w17)), "\x65\x6f\x6e\x20\x77\x31\x35\x2c\x20\x77\x31\x36\x2c\x20\x77\x31\x37");
  COMPARE(eon(x18, x19, Operand(x20, LSL, 21)), "\x65\x6f\x6e\x20\x78\x31\x38\x2c\x20\x78\x31\x39\x2c\x20\x78\x32\x30\x2c\x20\x6c\x73\x6c\x20\x23\x32\x31");
  COMPARE(eon(w21, w22, Operand(w23, LSR, 22)), "\x65\x6f\x6e\x20\x77\x32\x31\x2c\x20\x77\x32\x32\x2c\x20\x77\x32\x33\x2c\x20\x6c\x73\x72\x20\x23\x32\x32");
  COMPARE(eon(x24, x25, Operand(x26, ASR, 23)), "\x65\x6f\x6e\x20\x78\x32\x34\x2c\x20\x78\x32\x35\x2c\x20\x78\x32\x36\x2c\x20\x61\x73\x72\x20\x23\x32\x33");
  COMPARE(eon(w27, w28, Operand(w29, ROR, 24)), "\x65\x6f\x6e\x20\x77\x32\x37\x2c\x20\x77\x32\x38\x2c\x20\x77\x32\x39\x2c\x20\x72\x6f\x72\x20\x23\x32\x34");

  COMPARE(ands(w0, w1, Operand(w2)), "\x61\x6e\x64\x73\x20\x77\x30\x2c\x20\x77\x31\x2c\x20\x77\x32");
  COMPARE(ands(x3, x4, Operand(x5, LSL, 1)), "\x61\x6e\x64\x73\x20\x78\x33\x2c\x20\x78\x34\x2c\x20\x78\x35\x2c\x20\x6c\x73\x6c\x20\x23\x31");
  COMPARE(ands(w6, w7, Operand(w8, LSR, 2)), "\x61\x6e\x64\x73\x20\x77\x36\x2c\x20\x77\x37\x2c\x20\x77\x38\x2c\x20\x6c\x73\x72\x20\x23\x32");
  COMPARE(ands(x9, x10, Operand(x11, ASR, 3)), "\x61\x6e\x64\x73\x20\x78\x39\x2c\x20\x78\x31\x30\x2c\x20\x78\x31\x31\x2c\x20\x61\x73\x72\x20\x23\x33");
  COMPARE(ands(w12, w13, Operand(w14, ROR, 4)), "\x61\x6e\x64\x73\x20\x77\x31\x32\x2c\x20\x77\x31\x33\x2c\x20\x77\x31\x34\x2c\x20\x72\x6f\x72\x20\x23\x34");

  COMPARE(bics(w15, w16, Operand(w17)), "\x62\x69\x63\x73\x20\x77\x31\x35\x2c\x20\x77\x31\x36\x2c\x20\x77\x31\x37");
  COMPARE(bics(x18, x19, Operand(x20, LSL, 5)), "\x62\x69\x63\x73\x20\x78\x31\x38\x2c\x20\x78\x31\x39\x2c\x20\x78\x32\x30\x2c\x20\x6c\x73\x6c\x20\x23\x35");
  COMPARE(bics(w21, w22, Operand(w23, LSR, 6)), "\x62\x69\x63\x73\x20\x77\x32\x31\x2c\x20\x77\x32\x32\x2c\x20\x77\x32\x33\x2c\x20\x6c\x73\x72\x20\x23\x36");
  COMPARE(bics(x24, x25, Operand(x26, ASR, 7)), "\x62\x69\x63\x73\x20\x78\x32\x34\x2c\x20\x78\x32\x35\x2c\x20\x78\x32\x36\x2c\x20\x61\x73\x72\x20\x23\x37");
  COMPARE(bics(w27, w28, Operand(w29, ROR, 8)), "\x62\x69\x63\x73\x20\x77\x32\x37\x2c\x20\x77\x32\x38\x2c\x20\x77\x32\x39\x2c\x20\x72\x6f\x72\x20\x23\x38");

  COMPARE(tst(w0, Operand(w1)), "\x74\x73\x74\x20\x77\x30\x2c\x20\x77\x31");
  COMPARE(tst(w2, Operand(w3, ROR, 10)), "\x74\x73\x74\x20\x77\x32\x2c\x20\x77\x33\x2c\x20\x72\x6f\x72\x20\x23\x31\x30");
  COMPARE(tst(x0, Operand(x1)), "\x74\x73\x74\x20\x78\x30\x2c\x20\x78\x31");
  COMPARE(tst(x2, Operand(x3, ROR, 42)), "\x74\x73\x74\x20\x78\x32\x2c\x20\x78\x33\x2c\x20\x72\x6f\x72\x20\x23\x34\x32");

  COMPARE(orn(w0, wzr, Operand(w1)), "\x6d\x76\x6e\x20\x77\x30\x2c\x20\x77\x31");
  COMPARE(orn(w2, wzr, Operand(w3, ASR, 5)), "\x6d\x76\x6e\x20\x77\x32\x2c\x20\x77\x33\x2c\x20\x61\x73\x72\x20\x23\x35");
  COMPARE(orn(x0, xzr, Operand(x1)), "\x6d\x76\x6e\x20\x78\x30\x2c\x20\x78\x31");
  COMPARE(orn(x2, xzr, Operand(x3, ASR, 42)), "\x6d\x76\x6e\x20\x78\x32\x2c\x20\x78\x33\x2c\x20\x61\x73\x72\x20\x23\x34\x32");

  COMPARE(orr(w0, wzr, Operand(w1)), "\x6d\x6f\x76\x20\x77\x30\x2c\x20\x77\x31");
  COMPARE(orr(x0, xzr, Operand(x1)), "\x6d\x6f\x76\x20\x78\x30\x2c\x20\x78\x31");
  COMPARE(orr(w16, wzr, Operand(w17, LSL, 1)), "\x6f\x72\x72\x20\x77\x31\x36\x2c\x20\x77\x7a\x72\x2c\x20\x77\x31\x37\x2c\x20\x6c\x73\x6c\x20\x23\x31");
  COMPARE(orr(x16, xzr, Operand(x17, ASR, 2)), "\x6f\x72\x72\x20\x78\x31\x36\x2c\x20\x78\x7a\x72\x2c\x20\x78\x31\x37\x2c\x20\x61\x73\x72\x20\x23\x32");

  CLEANUP();
}


TEST_(dp_2_source) {
  SET_UP();

  COMPARE(lslv(w0, w1, w2), "\x6c\x73\x6c\x20\x77\x30\x2c\x20\x77\x31\x2c\x20\x77\x32");
  COMPARE(lslv(x3, x4, x5), "\x6c\x73\x6c\x20\x78\x33\x2c\x20\x78\x34\x2c\x20\x78\x35");
  COMPARE(lsrv(w6, w7, w8), "\x6c\x73\x72\x20\x77\x36\x2c\x20\x77\x37\x2c\x20\x77\x38");
  COMPARE(lsrv(x9, x10, x11), "\x6c\x73\x72\x20\x78\x39\x2c\x20\x78\x31\x30\x2c\x20\x78\x31\x31");
  COMPARE(asrv(w12, w13, w14), "\x61\x73\x72\x20\x77\x31\x32\x2c\x20\x77\x31\x33\x2c\x20\x77\x31\x34");
  COMPARE(asrv(x15, x16, x17), "\x61\x73\x72\x20\x78\x31\x35\x2c\x20\x78\x31\x36\x2c\x20\x78\x31\x37");
  COMPARE(rorv(w18, w19, w20), "\x72\x6f\x72\x20\x77\x31\x38\x2c\x20\x77\x31\x39\x2c\x20\x77\x32\x30");
  COMPARE(rorv(x21, x22, x23), "\x72\x6f\x72\x20\x78\x32\x31\x2c\x20\x78\x32\x32\x2c\x20\x78\x32\x33");

  CLEANUP();
}


TEST_(adr) {
  SET_UP();

  COMPARE_PREFIX(adr(x0, 0), "\x61\x64\x72\x20\x78\x30\x2c\x20\x23\x2b\x30\x78\x30");
  COMPARE_PREFIX(adr(x1, 1), "\x61\x64\x72\x20\x78\x31\x2c\x20\x23\x2b\x30\x78\x31");
  COMPARE_PREFIX(adr(x2, -1), "\x61\x64\x72\x20\x78\x32\x2c\x20\x23\x2d\x30\x78\x31");
  COMPARE_PREFIX(adr(x3, 4), "\x61\x64\x72\x20\x78\x33\x2c\x20\x23\x2b\x30\x78\x34");
  COMPARE_PREFIX(adr(x4, -4), "\x61\x64\x72\x20\x78\x34\x2c\x20\x23\x2d\x30\x78\x34");
  COMPARE_PREFIX(adr(x5, 0x000fffff), "\x61\x64\x72\x20\x78\x35\x2c\x20\x23\x2b\x30\x78\x66\x66\x66\x66\x66");
  COMPARE_PREFIX(adr(x6, -0x00100000), "\x61\x64\x72\x20\x78\x36\x2c\x20\x23\x2d\x30\x78\x31\x30\x30\x30\x30\x30");
  COMPARE_PREFIX(adr(xzr, 0), "\x61\x64\x72\x20\x78\x7a\x72\x2c\x20\x23\x2b\x30\x78\x30");

  CLEANUP();
}


TEST_(branch) {
  SET_UP();

  #define INST_OFF(x) ((x) >> kInstructionSizeLog2)
  COMPARE_PREFIX(b(INST_OFF(0x4)), "\x62\x20\x23\x2b\x30\x78\x34");
  COMPARE_PREFIX(b(INST_OFF(-0x4)), "\x62\x20\x23\x2d\x30\x78\x34");
  COMPARE_PREFIX(b(INST_OFF(0x7fffffc)), "\x62\x20\x23\x2b\x30\x78\x37\x66\x66\x66\x66\x66\x63");
  COMPARE_PREFIX(b(INST_OFF(-0x8000000)), "\x62\x20\x23\x2d\x30\x78\x38\x30\x30\x30\x30\x30\x30");
  COMPARE_PREFIX(b(INST_OFF(0xffffc), eq), "\x62\x2e\x65\x71\x20\x23\x2b\x30\x78\x66\x66\x66\x66\x63");
  COMPARE_PREFIX(b(INST_OFF(-0x100000), mi), "\x62\x2e\x6d\x69\x20\x23\x2d\x30\x78\x31\x30\x30\x30\x30\x30");
  COMPARE_PREFIX(bl(INST_OFF(0x4)), "\x62\x6c\x20\x23\x2b\x30\x78\x34");
  COMPARE_PREFIX(bl(INST_OFF(-0x4)), "\x62\x6c\x20\x23\x2d\x30\x78\x34");
  COMPARE_PREFIX(bl(INST_OFF(0xffffc)), "\x62\x6c\x20\x23\x2b\x30\x78\x66\x66\x66\x66\x63");
  COMPARE_PREFIX(bl(INST_OFF(-0x100000)), "\x62\x6c\x20\x23\x2d\x30\x78\x31\x30\x30\x30\x30\x30");
  COMPARE_PREFIX(cbz(w0, INST_OFF(0xffffc)), "\x63\x62\x7a\x20\x77\x30\x2c\x20\x23\x2b\x30\x78\x66\x66\x66\x66\x63");
  COMPARE_PREFIX(cbz(x1, INST_OFF(-0x100000)), "\x63\x62\x7a\x20\x78\x31\x2c\x20\x23\x2d\x30\x78\x31\x30\x30\x30\x30\x30");
  COMPARE_PREFIX(cbnz(w2, INST_OFF(0xffffc)), "\x63\x62\x6e\x7a\x20\x77\x32\x2c\x20\x23\x2b\x30\x78\x66\x66\x66\x66\x63");
  COMPARE_PREFIX(cbnz(x3, INST_OFF(-0x100000)), "\x63\x62\x6e\x7a\x20\x78\x33\x2c\x20\x23\x2d\x30\x78\x31\x30\x30\x30\x30\x30");
  COMPARE_PREFIX(tbz(w4, 0, INST_OFF(0x7ffc)), "\x74\x62\x7a\x20\x77\x34\x2c\x20\x23\x30\x2c\x20\x23\x2b\x30\x78\x37\x66\x66\x63");
  COMPARE_PREFIX(tbz(x5, 63, INST_OFF(-0x8000)), "\x74\x62\x7a\x20\x78\x35\x2c\x20\x23\x36\x33\x2c\x20\x23\x2d\x30\x78\x38\x30\x30\x30");
  COMPARE_PREFIX(tbz(w6, 31, INST_OFF(0)), "\x74\x62\x7a\x20\x77\x36\x2c\x20\x23\x33\x31\x2c\x20\x23\x2b\x30\x78\x30");
  COMPARE_PREFIX(tbz(x7, 31, INST_OFF(0x4)), "\x74\x62\x7a\x20\x77\x37\x2c\x20\x23\x33\x31\x2c\x20\x23\x2b\x30\x78\x34");
  COMPARE_PREFIX(tbz(x8, 32, INST_OFF(0x8)), "\x74\x62\x7a\x20\x78\x38\x2c\x20\x23\x33\x32\x2c\x20\x23\x2b\x30\x78\x38");
  COMPARE_PREFIX(tbnz(w8, 0, INST_OFF(0x7ffc)), "\x74\x62\x6e\x7a\x20\x77\x38\x2c\x20\x23\x30\x2c\x20\x23\x2b\x30\x78\x37\x66\x66\x63");
  COMPARE_PREFIX(tbnz(x9, 63, INST_OFF(-0x8000)), "\x74\x62\x6e\x7a\x20\x78\x39\x2c\x20\x23\x36\x33\x2c\x20\x23\x2d\x30\x78\x38\x30\x30\x30");
  COMPARE_PREFIX(tbnz(w10, 31, INST_OFF(0)), "\x74\x62\x6e\x7a\x20\x77\x31\x30\x2c\x20\x23\x33\x31\x2c\x20\x23\x2b\x30\x78\x30");
  COMPARE_PREFIX(tbnz(x11, 31, INST_OFF(0x4)), "\x74\x62\x6e\x7a\x20\x77\x31\x31\x2c\x20\x23\x33\x31\x2c\x20\x23\x2b\x30\x78\x34");
  COMPARE_PREFIX(tbnz(x12, 32, INST_OFF(0x8)), "\x74\x62\x6e\x7a\x20\x78\x31\x32\x2c\x20\x23\x33\x32\x2c\x20\x23\x2b\x30\x78\x38");
  COMPARE(br(x0), "\x62\x72\x20\x78\x30");
  COMPARE(blr(x1), "\x62\x6c\x72\x20\x78\x31");
  COMPARE(ret(x2), "\x72\x65\x74\x20\x78\x32");
  COMPARE(ret(lr), "\x72\x65\x74")

  CLEANUP();
}


TEST_(load_store) {
  SET_UP();

  COMPARE(ldr(w0, MemOperand(x1)), "\x6c\x64\x72\x20\x77\x30\x2c\x20\x5b\x78\x31\x5d");
  COMPARE(ldr(w2, MemOperand(x3, 4)), "\x6c\x64\x72\x20\x77\x32\x2c\x20\x5b\x78\x33\x2c\x20\x23\x34\x5d");
  COMPARE(ldr(w4, MemOperand(x5, 16380)), "\x6c\x64\x72\x20\x77\x34\x2c\x20\x5b\x78\x35\x2c\x20\x23\x31\x36\x33\x38\x30\x5d");
  COMPARE(ldr(x6, MemOperand(x7)), "\x6c\x64\x72\x20\x78\x36\x2c\x20\x5b\x78\x37\x5d");
  COMPARE(ldr(x8, MemOperand(x9, 8)), "\x6c\x64\x72\x20\x78\x38\x2c\x20\x5b\x78\x39\x2c\x20\x23\x38\x5d");
  COMPARE(ldr(x10, MemOperand(x11, 32760)), "\x6c\x64\x72\x20\x78\x31\x30\x2c\x20\x5b\x78\x31\x31\x2c\x20\x23\x33\x32\x37\x36\x30\x5d");
  COMPARE(str(w12, MemOperand(x13)), "\x73\x74\x72\x20\x77\x31\x32\x2c\x20\x5b\x78\x31\x33\x5d");
  COMPARE(str(w14, MemOperand(x15, 4)), "\x73\x74\x72\x20\x77\x31\x34\x2c\x20\x5b\x78\x31\x35\x2c\x20\x23\x34\x5d");
  COMPARE(str(w16, MemOperand(x17, 16380)), "\x73\x74\x72\x20\x77\x31\x36\x2c\x20\x5b\x78\x31\x37\x2c\x20\x23\x31\x36\x33\x38\x30\x5d");
  COMPARE(str(x18, MemOperand(x19)), "\x73\x74\x72\x20\x78\x31\x38\x2c\x20\x5b\x78\x31\x39\x5d");
  COMPARE(str(x20, MemOperand(x21, 8)), "\x73\x74\x72\x20\x78\x32\x30\x2c\x20\x5b\x78\x32\x31\x2c\x20\x23\x38\x5d");
  COMPARE(str(x22, MemOperand(x23, 32760)), "\x73\x74\x72\x20\x78\x32\x32\x2c\x20\x5b\x78\x32\x33\x2c\x20\x23\x33\x32\x37\x36\x30\x5d");

  COMPARE(ldr(w0, MemOperand(x1, 4, PreIndex)), "\x6c\x64\x72\x20\x77\x30\x2c\x20\x5b\x78\x31\x2c\x20\x23\x34\x5d\x21");
  COMPARE(ldr(w2, MemOperand(x3, 255, PreIndex)), "\x6c\x64\x72\x20\x77\x32\x2c\x20\x5b\x78\x33\x2c\x20\x23\x32\x35\x35\x5d\x21");
  COMPARE(ldr(w4, MemOperand(x5, -256, PreIndex)), "\x6c\x64\x72\x20\x77\x34\x2c\x20\x5b\x78\x35\x2c\x20\x23\x2d\x32\x35\x36\x5d\x21");
  COMPARE(ldr(x6, MemOperand(x7, 8, PreIndex)), "\x6c\x64\x72\x20\x78\x36\x2c\x20\x5b\x78\x37\x2c\x20\x23\x38\x5d\x21");
  COMPARE(ldr(x8, MemOperand(x9, 255, PreIndex)), "\x6c\x64\x72\x20\x78\x38\x2c\x20\x5b\x78\x39\x2c\x20\x23\x32\x35\x35\x5d\x21");
  COMPARE(ldr(x10, MemOperand(x11, -256, PreIndex)), "\x6c\x64\x72\x20\x78\x31\x30\x2c\x20\x5b\x78\x31\x31\x2c\x20\x23\x2d\x32\x35\x36\x5d\x21");
  COMPARE(str(w12, MemOperand(x13, 4, PreIndex)), "\x73\x74\x72\x20\x77\x31\x32\x2c\x20\x5b\x78\x31\x33\x2c\x20\x23\x34\x5d\x21");
  COMPARE(str(w14, MemOperand(x15, 255, PreIndex)), "\x73\x74\x72\x20\x77\x31\x34\x2c\x20\x5b\x78\x31\x35\x2c\x20\x23\x32\x35\x35\x5d\x21");
  COMPARE(str(w16, MemOperand(x17, -256, PreIndex)), "\x73\x74\x72\x20\x77\x31\x36\x2c\x20\x5b\x78\x31\x37\x2c\x20\x23\x2d\x32\x35\x36\x5d\x21");
  COMPARE(str(x18, MemOperand(x19, 8, PreIndex)), "\x73\x74\x72\x20\x78\x31\x38\x2c\x20\x5b\x78\x31\x39\x2c\x20\x23\x38\x5d\x21");
  COMPARE(str(x20, MemOperand(x21, 255, PreIndex)), "\x73\x74\x72\x20\x78\x32\x30\x2c\x20\x5b\x78\x32\x31\x2c\x20\x23\x32\x35\x35\x5d\x21");
  COMPARE(str(x22, MemOperand(x23, -256, PreIndex)), "\x73\x74\x72\x20\x78\x32\x32\x2c\x20\x5b\x78\x32\x33\x2c\x20\x23\x2d\x32\x35\x36\x5d\x21");

  COMPARE(ldr(w0, MemOperand(x1, 4, PostIndex)), "\x6c\x64\x72\x20\x77\x30\x2c\x20\x5b\x78\x31\x5d\x2c\x20\x23\x34");
  COMPARE(ldr(w2, MemOperand(x3, 255, PostIndex)), "\x6c\x64\x72\x20\x77\x32\x2c\x20\x5b\x78\x33\x5d\x2c\x20\x23\x32\x35\x35");
  COMPARE(ldr(w4, MemOperand(x5, -256, PostIndex)), "\x6c\x64\x72\x20\x77\x34\x2c\x20\x5b\x78\x35\x5d\x2c\x20\x23\x2d\x32\x35\x36");
  COMPARE(ldr(x6, MemOperand(x7, 8, PostIndex)), "\x6c\x64\x72\x20\x78\x36\x2c\x20\x5b\x78\x37\x5d\x2c\x20\x23\x38");
  COMPARE(ldr(x8, MemOperand(x9, 255, PostIndex)), "\x6c\x64\x72\x20\x78\x38\x2c\x20\x5b\x78\x39\x5d\x2c\x20\x23\x32\x35\x35");
  COMPARE(ldr(x10, MemOperand(x11, -256, PostIndex)), "\x6c\x64\x72\x20\x78\x31\x30\x2c\x20\x5b\x78\x31\x31\x5d\x2c\x20\x23\x2d\x32\x35\x36");
  COMPARE(str(w12, MemOperand(x13, 4, PostIndex)), "\x73\x74\x72\x20\x77\x31\x32\x2c\x20\x5b\x78\x31\x33\x5d\x2c\x20\x23\x34");
  COMPARE(str(w14, MemOperand(x15, 255, PostIndex)), "\x73\x74\x72\x20\x77\x31\x34\x2c\x20\x5b\x78\x31\x35\x5d\x2c\x20\x23\x32\x35\x35");
  COMPARE(str(w16, MemOperand(x17, -256, PostIndex)), "\x73\x74\x72\x20\x77\x31\x36\x2c\x20\x5b\x78\x31\x37\x5d\x2c\x20\x23\x2d\x32\x35\x36");
  COMPARE(str(x18, MemOperand(x19, 8, PostIndex)), "\x73\x74\x72\x20\x78\x31\x38\x2c\x20\x5b\x78\x31\x39\x5d\x2c\x20\x23\x38");
  COMPARE(str(x20, MemOperand(x21, 255, PostIndex)), "\x73\x74\x72\x20\x78\x32\x30\x2c\x20\x5b\x78\x32\x31\x5d\x2c\x20\x23\x32\x35\x35");
  COMPARE(str(x22, MemOperand(x23, -256, PostIndex)), "\x73\x74\x72\x20\x78\x32\x32\x2c\x20\x5b\x78\x32\x33\x5d\x2c\x20\x23\x2d\x32\x35\x36");

  // TODO(all): Fix this for jssp.
  COMPARE(ldr(w24, MemOperand(jssp)), "\x6c\x64\x72\x20\x77\x32\x34\x2c\x20\x5b\x6a\x73\x73\x70\x5d");
  COMPARE(ldr(x25, MemOperand(jssp, 8)), "\x6c\x64\x72\x20\x78\x32\x35\x2c\x20\x5b\x6a\x73\x73\x70\x2c\x20\x23\x38\x5d");
  COMPARE(str(w26, MemOperand(jssp, 4, PreIndex)), "\x73\x74\x72\x20\x77\x32\x36\x2c\x20\x5b\x6a\x73\x73\x70\x2c\x20\x23\x34\x5d\x21");
  COMPARE(str(cp, MemOperand(jssp, -8, PostIndex)), "\x73\x74\x72\x20\x63\x70\x2c\x20\x5b\x6a\x73\x73\x70\x5d\x2c\x20\x23\x2d\x38");

  COMPARE(ldrsw(x0, MemOperand(x1)), "\x6c\x64\x72\x73\x77\x20\x78\x30\x2c\x20\x5b\x78\x31\x5d");
  COMPARE(ldrsw(x2, MemOperand(x3, 8)), "\x6c\x64\x72\x73\x77\x20\x78\x32\x2c\x20\x5b\x78\x33\x2c\x20\x23\x38\x5d");
  COMPARE(ldrsw(x4, MemOperand(x5, 42, PreIndex)), "\x6c\x64\x72\x73\x77\x20\x78\x34\x2c\x20\x5b\x78\x35\x2c\x20\x23\x34\x32\x5d\x21");
  COMPARE(ldrsw(x6, MemOperand(x7, -11, PostIndex)), "\x6c\x64\x72\x73\x77\x20\x78\x36\x2c\x20\x5b\x78\x37\x5d\x2c\x20\x23\x2d\x31\x31");

  CLEANUP();
}


TEST_(load_store_regoffset) {
  SET_UP();

  COMPARE(ldr(w0, MemOperand(x1, w2, UXTW)), "\x6c\x64\x72\x20\x77\x30\x2c\x20\x5b\x78\x31\x2c\x20\x77\x32\x2c\x20\x75\x78\x74\x77\x5d");
  COMPARE(ldr(w3, MemOperand(x4, w5, UXTW, 2)), "\x6c\x64\x72\x20\x77\x33\x2c\x20\x5b\x78\x34\x2c\x20\x77\x35\x2c\x20\x75\x78\x74\x77\x20\x23\x32\x5d");
  COMPARE(ldr(w6, MemOperand(x7, x8)), "\x6c\x64\x72\x20\x77\x36\x2c\x20\x5b\x78\x37\x2c\x20\x78\x38\x5d");
  COMPARE(ldr(w9, MemOperand(x10, x11, LSL, 2)), "\x6c\x64\x72\x20\x77\x39\x2c\x20\x5b\x78\x31\x30\x2c\x20\x78\x31\x31\x2c\x20\x6c\x73\x6c\x20\x23\x32\x5d");
  COMPARE(ldr(w12, MemOperand(x13, w14, SXTW)), "\x6c\x64\x72\x20\x77\x31\x32\x2c\x20\x5b\x78\x31\x33\x2c\x20\x77\x31\x34\x2c\x20\x73\x78\x74\x77\x5d");
  COMPARE(ldr(w15, MemOperand(x16, w17, SXTW, 2)),
          "\x6c\x64\x72\x20\x77\x31\x35\x2c\x20\x5b\x78\x31\x36\x2c\x20\x77\x31\x37\x2c\x20\x73\x78\x74\x77\x20\x23\x32\x5d");
  COMPARE(ldr(w18, MemOperand(x19, x20, SXTX)), "\x6c\x64\x72\x20\x77\x31\x38\x2c\x20\x5b\x78\x31\x39\x2c\x20\x78\x32\x30\x2c\x20\x73\x78\x74\x78\x5d");
  COMPARE(ldr(w21, MemOperand(x22, x23, SXTX, 2)),
          "\x6c\x64\x72\x20\x77\x32\x31\x2c\x20\x5b\x78\x32\x32\x2c\x20\x78\x32\x33\x2c\x20\x73\x78\x74\x78\x20\x23\x32\x5d");
  COMPARE(ldr(x0, MemOperand(x1, w2, UXTW)), "\x6c\x64\x72\x20\x78\x30\x2c\x20\x5b\x78\x31\x2c\x20\x77\x32\x2c\x20\x75\x78\x74\x77\x5d");
  COMPARE(ldr(x3, MemOperand(x4, w5, UXTW, 3)), "\x6c\x64\x72\x20\x78\x33\x2c\x20\x5b\x78\x34\x2c\x20\x77\x35\x2c\x20\x75\x78\x74\x77\x20\x23\x33\x5d");
  COMPARE(ldr(x6, MemOperand(x7, x8)), "\x6c\x64\x72\x20\x78\x36\x2c\x20\x5b\x78\x37\x2c\x20\x78\x38\x5d");
  COMPARE(ldr(x9, MemOperand(x10, x11, LSL, 3)), "\x6c\x64\x72\x20\x78\x39\x2c\x20\x5b\x78\x31\x30\x2c\x20\x78\x31\x31\x2c\x20\x6c\x73\x6c\x20\x23\x33\x5d");
  COMPARE(ldr(x12, MemOperand(x13, w14, SXTW)), "\x6c\x64\x72\x20\x78\x31\x32\x2c\x20\x5b\x78\x31\x33\x2c\x20\x77\x31\x34\x2c\x20\x73\x78\x74\x77\x5d");
  COMPARE(ldr(x15, MemOperand(x16, w17, SXTW, 3)),
          "\x6c\x64\x72\x20\x78\x31\x35\x2c\x20\x5b\x78\x31\x36\x2c\x20\x77\x31\x37\x2c\x20\x73\x78\x74\x77\x20\x23\x33\x5d");
  COMPARE(ldr(x18, MemOperand(x19, x20, SXTX)), "\x6c\x64\x72\x20\x78\x31\x38\x2c\x20\x5b\x78\x31\x39\x2c\x20\x78\x32\x30\x2c\x20\x73\x78\x74\x78\x5d");
  COMPARE(ldr(x21, MemOperand(x22, x23, SXTX, 3)),
          "\x6c\x64\x72\x20\x78\x32\x31\x2c\x20\x5b\x78\x32\x32\x2c\x20\x78\x32\x33\x2c\x20\x73\x78\x74\x78\x20\x23\x33\x5d");

  COMPARE(str(w0, MemOperand(x1, w2, UXTW)), "\x73\x74\x72\x20\x77\x30\x2c\x20\x5b\x78\x31\x2c\x20\x77\x32\x2c\x20\x75\x78\x74\x77\x5d");
  COMPARE(str(w3, MemOperand(x4, w5, UXTW, 2)), "\x73\x74\x72\x20\x77\x33\x2c\x20\x5b\x78\x34\x2c\x20\x77\x35\x2c\x20\x75\x78\x74\x77\x20\x23\x32\x5d");
  COMPARE(str(w6, MemOperand(x7, x8)), "\x73\x74\x72\x20\x77\x36\x2c\x20\x5b\x78\x37\x2c\x20\x78\x38\x5d");
  COMPARE(str(w9, MemOperand(x10, x11, LSL, 2)), "\x73\x74\x72\x20\x77\x39\x2c\x20\x5b\x78\x31\x30\x2c\x20\x78\x31\x31\x2c\x20\x6c\x73\x6c\x20\x23\x32\x5d");
  COMPARE(str(w12, MemOperand(x13, w14, SXTW)), "\x73\x74\x72\x20\x77\x31\x32\x2c\x20\x5b\x78\x31\x33\x2c\x20\x77\x31\x34\x2c\x20\x73\x78\x74\x77\x5d");
  COMPARE(str(w15, MemOperand(x16, w17, SXTW, 2)),
          "\x73\x74\x72\x20\x77\x31\x35\x2c\x20\x5b\x78\x31\x36\x2c\x20\x77\x31\x37\x2c\x20\x73\x78\x74\x77\x20\x23\x32\x5d");
  COMPARE(str(w18, MemOperand(x19, x20, SXTX)), "\x73\x74\x72\x20\x77\x31\x38\x2c\x20\x5b\x78\x31\x39\x2c\x20\x78\x32\x30\x2c\x20\x73\x78\x74\x78\x5d");
  COMPARE(str(w21, MemOperand(x22, x23, SXTX, 2)),
          "\x73\x74\x72\x20\x77\x32\x31\x2c\x20\x5b\x78\x32\x32\x2c\x20\x78\x32\x33\x2c\x20\x73\x78\x74\x78\x20\x23\x32\x5d");
  COMPARE(str(x0, MemOperand(x1, w2, UXTW)), "\x73\x74\x72\x20\x78\x30\x2c\x20\x5b\x78\x31\x2c\x20\x77\x32\x2c\x20\x75\x78\x74\x77\x5d");
  COMPARE(str(x3, MemOperand(x4, w5, UXTW, 3)), "\x73\x74\x72\x20\x78\x33\x2c\x20\x5b\x78\x34\x2c\x20\x77\x35\x2c\x20\x75\x78\x74\x77\x20\x23\x33\x5d");
  COMPARE(str(x6, MemOperand(x7, x8)), "\x73\x74\x72\x20\x78\x36\x2c\x20\x5b\x78\x37\x2c\x20\x78\x38\x5d");
  COMPARE(str(x9, MemOperand(x10, x11, LSL, 3)), "\x73\x74\x72\x20\x78\x39\x2c\x20\x5b\x78\x31\x30\x2c\x20\x78\x31\x31\x2c\x20\x6c\x73\x6c\x20\x23\x33\x5d");
  COMPARE(str(x12, MemOperand(x13, w14, SXTW)), "\x73\x74\x72\x20\x78\x31\x32\x2c\x20\x5b\x78\x31\x33\x2c\x20\x77\x31\x34\x2c\x20\x73\x78\x74\x77\x5d");
  COMPARE(str(x15, MemOperand(x16, w17, SXTW, 3)),
          "\x73\x74\x72\x20\x78\x31\x35\x2c\x20\x5b\x78\x31\x36\x2c\x20\x77\x31\x37\x2c\x20\x73\x78\x74\x77\x20\x23\x33\x5d");
  COMPARE(str(x18, MemOperand(x19, x20, SXTX)), "\x73\x74\x72\x20\x78\x31\x38\x2c\x20\x5b\x78\x31\x39\x2c\x20\x78\x32\x30\x2c\x20\x73\x78\x74\x78\x5d");
  COMPARE(str(x21, MemOperand(x22, x23, SXTX, 3)),
          "\x73\x74\x72\x20\x78\x32\x31\x2c\x20\x5b\x78\x32\x32\x2c\x20\x78\x32\x33\x2c\x20\x73\x78\x74\x78\x20\x23\x33\x5d");

  COMPARE(ldrb(w0, MemOperand(x1, w2, UXTW)), "\x6c\x64\x72\x62\x20\x77\x30\x2c\x20\x5b\x78\x31\x2c\x20\x77\x32\x2c\x20\x75\x78\x74\x77\x5d");
  COMPARE(ldrb(w6, MemOperand(x7, x8)), "\x6c\x64\x72\x62\x20\x77\x36\x2c\x20\x5b\x78\x37\x2c\x20\x78\x38\x5d");
  COMPARE(ldrb(w12, MemOperand(x13, w14, SXTW)), "\x6c\x64\x72\x62\x20\x77\x31\x32\x2c\x20\x5b\x78\x31\x33\x2c\x20\x77\x31\x34\x2c\x20\x73\x78\x74\x77\x5d");
  COMPARE(ldrb(w18, MemOperand(x19, x20, SXTX)), "\x6c\x64\x72\x62\x20\x77\x31\x38\x2c\x20\x5b\x78\x31\x39\x2c\x20\x78\x32\x30\x2c\x20\x73\x78\x74\x78\x5d");
  COMPARE(strb(w0, MemOperand(x1, w2, UXTW)), "\x73\x74\x72\x62\x20\x77\x30\x2c\x20\x5b\x78\x31\x2c\x20\x77\x32\x2c\x20\x75\x78\x74\x77\x5d");
  COMPARE(strb(w6, MemOperand(x7, x8)), "\x73\x74\x72\x62\x20\x77\x36\x2c\x20\x5b\x78\x37\x2c\x20\x78\x38\x5d");
  COMPARE(strb(w12, MemOperand(x13, w14, SXTW)), "\x73\x74\x72\x62\x20\x77\x31\x32\x2c\x20\x5b\x78\x31\x33\x2c\x20\x77\x31\x34\x2c\x20\x73\x78\x74\x77\x5d");
  COMPARE(strb(w18, MemOperand(x19, x20, SXTX)), "\x73\x74\x72\x62\x20\x77\x31\x38\x2c\x20\x5b\x78\x31\x39\x2c\x20\x78\x32\x30\x2c\x20\x73\x78\x74\x78\x5d");

  COMPARE(ldrh(w0, MemOperand(x1, w2, UXTW)), "\x6c\x64\x72\x68\x20\x77\x30\x2c\x20\x5b\x78\x31\x2c\x20\x77\x32\x2c\x20\x75\x78\x74\x77\x5d");
  COMPARE(ldrh(w3, MemOperand(x4, w5, UXTW, 1)), "\x6c\x64\x72\x68\x20\x77\x33\x2c\x20\x5b\x78\x34\x2c\x20\x77\x35\x2c\x20\x75\x78\x74\x77\x20\x23\x31\x5d");
  COMPARE(ldrh(w6, MemOperand(x7, x8)), "\x6c\x64\x72\x68\x20\x77\x36\x2c\x20\x5b\x78\x37\x2c\x20\x78\x38\x5d");
  COMPARE(ldrh(w9, MemOperand(x10, x11, LSL, 1)),
          "\x6c\x64\x72\x68\x20\x77\x39\x2c\x20\x5b\x78\x31\x30\x2c\x20\x78\x31\x31\x2c\x20\x6c\x73\x6c\x20\x23\x31\x5d");
  COMPARE(ldrh(w12, MemOperand(x13, w14, SXTW)), "\x6c\x64\x72\x68\x20\x77\x31\x32\x2c\x20\x5b\x78\x31\x33\x2c\x20\x77\x31\x34\x2c\x20\x73\x78\x74\x77\x5d");
  COMPARE(ldrh(w15, MemOperand(x16, w17, SXTW, 1)),
          "\x6c\x64\x72\x68\x20\x77\x31\x35\x2c\x20\x5b\x78\x31\x36\x2c\x20\x77\x31\x37\x2c\x20\x73\x78\x74\x77\x20\x23\x31\x5d");
  COMPARE(ldrh(w18, MemOperand(x19, x20, SXTX)), "\x6c\x64\x72\x68\x20\x77\x31\x38\x2c\x20\x5b\x78\x31\x39\x2c\x20\x78\x32\x30\x2c\x20\x73\x78\x74\x78\x5d");
  COMPARE(ldrh(w21, MemOperand(x22, x23, SXTX, 1)),
          "\x6c\x64\x72\x68\x20\x77\x32\x31\x2c\x20\x5b\x78\x32\x32\x2c\x20\x78\x32\x33\x2c\x20\x73\x78\x74\x78\x20\x23\x31\x5d");
  COMPARE(strh(w0, MemOperand(x1, w2, UXTW)), "\x73\x74\x72\x68\x20\x77\x30\x2c\x20\x5b\x78\x31\x2c\x20\x77\x32\x2c\x20\x75\x78\x74\x77\x5d");
  COMPARE(strh(w3, MemOperand(x4, w5, UXTW, 1)), "\x73\x74\x72\x68\x20\x77\x33\x2c\x20\x5b\x78\x34\x2c\x20\x77\x35\x2c\x20\x75\x78\x74\x77\x20\x23\x31\x5d");
  COMPARE(strh(w6, MemOperand(x7, x8)), "\x73\x74\x72\x68\x20\x77\x36\x2c\x20\x5b\x78\x37\x2c\x20\x78\x38\x5d");
  COMPARE(strh(w9, MemOperand(x10, x11, LSL, 1)),
          "\x73\x74\x72\x68\x20\x77\x39\x2c\x20\x5b\x78\x31\x30\x2c\x20\x78\x31\x31\x2c\x20\x6c\x73\x6c\x20\x23\x31\x5d");
  COMPARE(strh(w12, MemOperand(x13, w14, SXTW)), "\x73\x74\x72\x68\x20\x77\x31\x32\x2c\x20\x5b\x78\x31\x33\x2c\x20\x77\x31\x34\x2c\x20\x73\x78\x74\x77\x5d");
  COMPARE(strh(w15, MemOperand(x16, w17, SXTW, 1)),
          "\x73\x74\x72\x68\x20\x77\x31\x35\x2c\x20\x5b\x78\x31\x36\x2c\x20\x77\x31\x37\x2c\x20\x73\x78\x74\x77\x20\x23\x31\x5d");
  COMPARE(strh(w18, MemOperand(x19, x20, SXTX)), "\x73\x74\x72\x68\x20\x77\x31\x38\x2c\x20\x5b\x78\x31\x39\x2c\x20\x78\x32\x30\x2c\x20\x73\x78\x74\x78\x5d");
  COMPARE(strh(w21, MemOperand(x22, x23, SXTX, 1)),
          "\x73\x74\x72\x68\x20\x77\x32\x31\x2c\x20\x5b\x78\x32\x32\x2c\x20\x78\x32\x33\x2c\x20\x73\x78\x74\x78\x20\x23\x31\x5d");

  // TODO(all): Fix this for jssp.
  COMPARE(ldr(x0, MemOperand(jssp, wzr, SXTW)), "\x6c\x64\x72\x20\x78\x30\x2c\x20\x5b\x6a\x73\x73\x70\x2c\x20\x77\x7a\x72\x2c\x20\x73\x78\x74\x77\x5d");
  COMPARE(str(x1, MemOperand(jssp, xzr)), "\x73\x74\x72\x20\x78\x31\x2c\x20\x5b\x6a\x73\x73\x70\x2c\x20\x78\x7a\x72\x5d");

  CLEANUP();
}


TEST_(load_store_byte) {
  SET_UP();

  COMPARE(ldrb(w0, MemOperand(x1)), "\x6c\x64\x72\x62\x20\x77\x30\x2c\x20\x5b\x78\x31\x5d");
  COMPARE(ldrb(x2, MemOperand(x3)), "\x6c\x64\x72\x62\x20\x77\x32\x2c\x20\x5b\x78\x33\x5d");
  COMPARE(ldrb(w4, MemOperand(x5, 4095)), "\x6c\x64\x72\x62\x20\x77\x34\x2c\x20\x5b\x78\x35\x2c\x20\x23\x34\x30\x39\x35\x5d");
  COMPARE(ldrb(w6, MemOperand(x7, 255, PreIndex)), "\x6c\x64\x72\x62\x20\x77\x36\x2c\x20\x5b\x78\x37\x2c\x20\x23\x32\x35\x35\x5d\x21");
  COMPARE(ldrb(w8, MemOperand(x9, -256, PreIndex)), "\x6c\x64\x72\x62\x20\x77\x38\x2c\x20\x5b\x78\x39\x2c\x20\x23\x2d\x32\x35\x36\x5d\x21");
  COMPARE(ldrb(w10, MemOperand(x11, 255, PostIndex)), "\x6c\x64\x72\x62\x20\x77\x31\x30\x2c\x20\x5b\x78\x31\x31\x5d\x2c\x20\x23\x32\x35\x35");
  COMPARE(ldrb(w12, MemOperand(x13, -256, PostIndex)),
          "\x6c\x64\x72\x62\x20\x77\x31\x32\x2c\x20\x5b\x78\x31\x33\x5d\x2c\x20\x23\x2d\x32\x35\x36");
  COMPARE(strb(w14, MemOperand(x15)), "\x73\x74\x72\x62\x20\x77\x31\x34\x2c\x20\x5b\x78\x31\x35\x5d");
  COMPARE(strb(x16, MemOperand(x17)), "\x73\x74\x72\x62\x20\x77\x31\x36\x2c\x20\x5b\x78\x31\x37\x5d");
  COMPARE(strb(w18, MemOperand(x19, 4095)), "\x73\x74\x72\x62\x20\x77\x31\x38\x2c\x20\x5b\x78\x31\x39\x2c\x20\x23\x34\x30\x39\x35\x5d");
  COMPARE(strb(w20, MemOperand(x21, 255, PreIndex)), "\x73\x74\x72\x62\x20\x77\x32\x30\x2c\x20\x5b\x78\x32\x31\x2c\x20\x23\x32\x35\x35\x5d\x21");
  COMPARE(strb(w22, MemOperand(x23, -256, PreIndex)),
          "\x73\x74\x72\x62\x20\x77\x32\x32\x2c\x20\x5b\x78\x32\x33\x2c\x20\x23\x2d\x32\x35\x36\x5d\x21");
  COMPARE(strb(w24, MemOperand(x25, 255, PostIndex)), "\x73\x74\x72\x62\x20\x77\x32\x34\x2c\x20\x5b\x78\x32\x35\x5d\x2c\x20\x23\x32\x35\x35");
  COMPARE(strb(w26, MemOperand(cp, -256, PostIndex)),
          "\x73\x74\x72\x62\x20\x77\x32\x36\x2c\x20\x5b\x63\x70\x5d\x2c\x20\x23\x2d\x32\x35\x36");
  // TODO(all): Fix this for jssp.
  COMPARE(ldrb(w28, MemOperand(jssp, 3, PostIndex)), "\x6c\x64\x72\x62\x20\x77\x32\x38\x2c\x20\x5b\x6a\x73\x73\x70\x5d\x2c\x20\x23\x33");
  COMPARE(strb(fp, MemOperand(jssp, -42, PreIndex)), "\x73\x74\x72\x62\x20\x77\x32\x39\x2c\x20\x5b\x6a\x73\x73\x70\x2c\x20\x23\x2d\x34\x32\x5d\x21");
  COMPARE(ldrsb(w0, MemOperand(x1)), "\x6c\x64\x72\x73\x62\x20\x77\x30\x2c\x20\x5b\x78\x31\x5d");
  COMPARE(ldrsb(x2, MemOperand(x3, 8)), "\x6c\x64\x72\x73\x62\x20\x78\x32\x2c\x20\x5b\x78\x33\x2c\x20\x23\x38\x5d");
  COMPARE(ldrsb(w4, MemOperand(x5, 42, PreIndex)), "\x6c\x64\x72\x73\x62\x20\x77\x34\x2c\x20\x5b\x78\x35\x2c\x20\x23\x34\x32\x5d\x21");
  COMPARE(ldrsb(x6, MemOperand(x7, -11, PostIndex)), "\x6c\x64\x72\x73\x62\x20\x78\x36\x2c\x20\x5b\x78\x37\x5d\x2c\x20\x23\x2d\x31\x31");

  CLEANUP();
}


TEST_(load_store_half) {
  SET_UP();

  COMPARE(ldrh(w0, MemOperand(x1)), "\x6c\x64\x72\x68\x20\x77\x30\x2c\x20\x5b\x78\x31\x5d");
  COMPARE(ldrh(x2, MemOperand(x3)), "\x6c\x64\x72\x68\x20\x77\x32\x2c\x20\x5b\x78\x33\x5d");
  COMPARE(ldrh(w4, MemOperand(x5, 8190)), "\x6c\x64\x72\x68\x20\x77\x34\x2c\x20\x5b\x78\x35\x2c\x20\x23\x38\x31\x39\x30\x5d");
  COMPARE(ldrh(w6, MemOperand(x7, 255, PreIndex)), "\x6c\x64\x72\x68\x20\x77\x36\x2c\x20\x5b\x78\x37\x2c\x20\x23\x32\x35\x35\x5d\x21");
  COMPARE(ldrh(w8, MemOperand(x9, -256, PreIndex)), "\x6c\x64\x72\x68\x20\x77\x38\x2c\x20\x5b\x78\x39\x2c\x20\x23\x2d\x32\x35\x36\x5d\x21");
  COMPARE(ldrh(w10, MemOperand(x11, 255, PostIndex)), "\x6c\x64\x72\x68\x20\x77\x31\x30\x2c\x20\x5b\x78\x31\x31\x5d\x2c\x20\x23\x32\x35\x35");
  COMPARE(ldrh(w12, MemOperand(x13, -256, PostIndex)),
          "\x6c\x64\x72\x68\x20\x77\x31\x32\x2c\x20\x5b\x78\x31\x33\x5d\x2c\x20\x23\x2d\x32\x35\x36");
  COMPARE(strh(w14, MemOperand(x15)), "\x73\x74\x72\x68\x20\x77\x31\x34\x2c\x20\x5b\x78\x31\x35\x5d");
  COMPARE(strh(x16, MemOperand(x17)), "\x73\x74\x72\x68\x20\x77\x31\x36\x2c\x20\x5b\x78\x31\x37\x5d");
  COMPARE(strh(w18, MemOperand(x19, 8190)), "\x73\x74\x72\x68\x20\x77\x31\x38\x2c\x20\x5b\x78\x31\x39\x2c\x20\x23\x38\x31\x39\x30\x5d");
  COMPARE(strh(w20, MemOperand(x21, 255, PreIndex)), "\x73\x74\x72\x68\x20\x77\x32\x30\x2c\x20\x5b\x78\x32\x31\x2c\x20\x23\x32\x35\x35\x5d\x21");
  COMPARE(strh(w22, MemOperand(x23, -256, PreIndex)),
          "\x73\x74\x72\x68\x20\x77\x32\x32\x2c\x20\x5b\x78\x32\x33\x2c\x20\x23\x2d\x32\x35\x36\x5d\x21");
  COMPARE(strh(w24, MemOperand(x25, 255, PostIndex)), "\x73\x74\x72\x68\x20\x77\x32\x34\x2c\x20\x5b\x78\x32\x35\x5d\x2c\x20\x23\x32\x35\x35");
  COMPARE(strh(w26, MemOperand(cp, -256, PostIndex)),
          "\x73\x74\x72\x68\x20\x77\x32\x36\x2c\x20\x5b\x63\x70\x5d\x2c\x20\x23\x2d\x32\x35\x36");
  // TODO(all): Fix this for jssp.
  COMPARE(ldrh(w28, MemOperand(jssp, 3, PostIndex)), "\x6c\x64\x72\x68\x20\x77\x32\x38\x2c\x20\x5b\x6a\x73\x73\x70\x5d\x2c\x20\x23\x33");
  COMPARE(strh(fp, MemOperand(jssp, -42, PreIndex)), "\x73\x74\x72\x68\x20\x77\x32\x39\x2c\x20\x5b\x6a\x73\x73\x70\x2c\x20\x23\x2d\x34\x32\x5d\x21");
  COMPARE(ldrh(w30, MemOperand(x0, 255)), "\x6c\x64\x75\x72\x68\x20\x77\x33\x30\x2c\x20\x5b\x78\x30\x2c\x20\x23\x32\x35\x35\x5d");
  COMPARE(ldrh(x1, MemOperand(x2, -256)), "\x6c\x64\x75\x72\x68\x20\x77\x31\x2c\x20\x5b\x78\x32\x2c\x20\x23\x2d\x32\x35\x36\x5d");
  COMPARE(strh(w3, MemOperand(x4, 255)), "\x73\x74\x75\x72\x68\x20\x77\x33\x2c\x20\x5b\x78\x34\x2c\x20\x23\x32\x35\x35\x5d");
  COMPARE(strh(x5, MemOperand(x6, -256)), "\x73\x74\x75\x72\x68\x20\x77\x35\x2c\x20\x5b\x78\x36\x2c\x20\x23\x2d\x32\x35\x36\x5d");
  COMPARE(ldrsh(w0, MemOperand(x1)), "\x6c\x64\x72\x73\x68\x20\x77\x30\x2c\x20\x5b\x78\x31\x5d");
  COMPARE(ldrsh(w2, MemOperand(x3, 8)), "\x6c\x64\x72\x73\x68\x20\x77\x32\x2c\x20\x5b\x78\x33\x2c\x20\x23\x38\x5d");
  COMPARE(ldrsh(w4, MemOperand(x5, 42, PreIndex)), "\x6c\x64\x72\x73\x68\x20\x77\x34\x2c\x20\x5b\x78\x35\x2c\x20\x23\x34\x32\x5d\x21");
  COMPARE(ldrsh(x6, MemOperand(x7, -11, PostIndex)), "\x6c\x64\x72\x73\x68\x20\x78\x36\x2c\x20\x5b\x78\x37\x5d\x2c\x20\x23\x2d\x31\x31");

  CLEANUP();
}


TEST_(load_store_fp) {
  SET_UP();

  COMPARE(ldr(s0, MemOperand(x1)), "\x6c\x64\x72\x20\x73\x30\x2c\x20\x5b\x78\x31\x5d");
  COMPARE(ldr(s2, MemOperand(x3, 4)), "\x6c\x64\x72\x20\x73\x32\x2c\x20\x5b\x78\x33\x2c\x20\x23\x34\x5d");
  COMPARE(ldr(s4, MemOperand(x5, 16380)), "\x6c\x64\x72\x20\x73\x34\x2c\x20\x5b\x78\x35\x2c\x20\x23\x31\x36\x33\x38\x30\x5d");
  COMPARE(ldr(d6, MemOperand(x7)), "\x6c\x64\x72\x20\x64\x36\x2c\x20\x5b\x78\x37\x5d");
  COMPARE(ldr(d8, MemOperand(x9, 8)), "\x6c\x64\x72\x20\x64\x38\x2c\x20\x5b\x78\x39\x2c\x20\x23\x38\x5d");
  COMPARE(ldr(d10, MemOperand(x11, 32760)), "\x6c\x64\x72\x20\x64\x31\x30\x2c\x20\x5b\x78\x31\x31\x2c\x20\x23\x33\x32\x37\x36\x30\x5d");
  COMPARE(str(s12, MemOperand(x13)), "\x73\x74\x72\x20\x73\x31\x32\x2c\x20\x5b\x78\x31\x33\x5d");
  COMPARE(str(s14, MemOperand(x15, 4)), "\x73\x74\x72\x20\x73\x31\x34\x2c\x20\x5b\x78\x31\x35\x2c\x20\x23\x34\x5d");
  COMPARE(str(s16, MemOperand(x17, 16380)), "\x73\x74\x72\x20\x73\x31\x36\x2c\x20\x5b\x78\x31\x37\x2c\x20\x23\x31\x36\x33\x38\x30\x5d");
  COMPARE(str(d18, MemOperand(x19)), "\x73\x74\x72\x20\x64\x31\x38\x2c\x20\x5b\x78\x31\x39\x5d");
  COMPARE(str(d20, MemOperand(x21, 8)), "\x73\x74\x72\x20\x64\x32\x30\x2c\x20\x5b\x78\x32\x31\x2c\x20\x23\x38\x5d");
  COMPARE(str(d22, MemOperand(x23, 32760)), "\x73\x74\x72\x20\x64\x32\x32\x2c\x20\x5b\x78\x32\x33\x2c\x20\x23\x33\x32\x37\x36\x30\x5d");

  COMPARE(ldr(s0, MemOperand(x1, 4, PreIndex)), "\x6c\x64\x72\x20\x73\x30\x2c\x20\x5b\x78\x31\x2c\x20\x23\x34\x5d\x21");
  COMPARE(ldr(s2, MemOperand(x3, 255, PreIndex)), "\x6c\x64\x72\x20\x73\x32\x2c\x20\x5b\x78\x33\x2c\x20\x23\x32\x35\x35\x5d\x21");
  COMPARE(ldr(s4, MemOperand(x5, -256, PreIndex)), "\x6c\x64\x72\x20\x73\x34\x2c\x20\x5b\x78\x35\x2c\x20\x23\x2d\x32\x35\x36\x5d\x21");
  COMPARE(ldr(d6, MemOperand(x7, 8, PreIndex)), "\x6c\x64\x72\x20\x64\x36\x2c\x20\x5b\x78\x37\x2c\x20\x23\x38\x5d\x21");
  COMPARE(ldr(d8, MemOperand(x9, 255, PreIndex)), "\x6c\x64\x72\x20\x64\x38\x2c\x20\x5b\x78\x39\x2c\x20\x23\x32\x35\x35\x5d\x21");
  COMPARE(ldr(d10, MemOperand(x11, -256, PreIndex)), "\x6c\x64\x72\x20\x64\x31\x30\x2c\x20\x5b\x78\x31\x31\x2c\x20\x23\x2d\x32\x35\x36\x5d\x21");
  COMPARE(str(s12, MemOperand(x13, 4, PreIndex)), "\x73\x74\x72\x20\x73\x31\x32\x2c\x20\x5b\x78\x31\x33\x2c\x20\x23\x34\x5d\x21");
  COMPARE(str(s14, MemOperand(x15, 255, PreIndex)), "\x73\x74\x72\x20\x73\x31\x34\x2c\x20\x5b\x78\x31\x35\x2c\x20\x23\x32\x35\x35\x5d\x21");
  COMPARE(str(s16, MemOperand(x17, -256, PreIndex)), "\x73\x74\x72\x20\x73\x31\x36\x2c\x20\x5b\x78\x31\x37\x2c\x20\x23\x2d\x32\x35\x36\x5d\x21");
  COMPARE(str(d18, MemOperand(x19, 8, PreIndex)), "\x73\x74\x72\x20\x64\x31\x38\x2c\x20\x5b\x78\x31\x39\x2c\x20\x23\x38\x5d\x21");
  COMPARE(str(d20, MemOperand(x21, 255, PreIndex)), "\x73\x74\x72\x20\x64\x32\x30\x2c\x20\x5b\x78\x32\x31\x2c\x20\x23\x32\x35\x35\x5d\x21");
  COMPARE(str(d22, MemOperand(x23, -256, PreIndex)), "\x73\x74\x72\x20\x64\x32\x32\x2c\x20\x5b\x78\x32\x33\x2c\x20\x23\x2d\x32\x35\x36\x5d\x21");

  COMPARE(ldr(s0, MemOperand(x1, 4, PostIndex)), "\x6c\x64\x72\x20\x73\x30\x2c\x20\x5b\x78\x31\x5d\x2c\x20\x23\x34");
  COMPARE(ldr(s2, MemOperand(x3, 255, PostIndex)), "\x6c\x64\x72\x20\x73\x32\x2c\x20\x5b\x78\x33\x5d\x2c\x20\x23\x32\x35\x35");
  COMPARE(ldr(s4, MemOperand(x5, -256, PostIndex)), "\x6c\x64\x72\x20\x73\x34\x2c\x20\x5b\x78\x35\x5d\x2c\x20\x23\x2d\x32\x35\x36");
  COMPARE(ldr(d6, MemOperand(x7, 8, PostIndex)), "\x6c\x64\x72\x20\x64\x36\x2c\x20\x5b\x78\x37\x5d\x2c\x20\x23\x38");
  COMPARE(ldr(d8, MemOperand(x9, 255, PostIndex)), "\x6c\x64\x72\x20\x64\x38\x2c\x20\x5b\x78\x39\x5d\x2c\x20\x23\x32\x35\x35");
  COMPARE(ldr(d10, MemOperand(x11, -256, PostIndex)), "\x6c\x64\x72\x20\x64\x31\x30\x2c\x20\x5b\x78\x31\x31\x5d\x2c\x20\x23\x2d\x32\x35\x36");
  COMPARE(str(s12, MemOperand(x13, 4, PostIndex)), "\x73\x74\x72\x20\x73\x31\x32\x2c\x20\x5b\x78\x31\x33\x5d\x2c\x20\x23\x34");
  COMPARE(str(s14, MemOperand(x15, 255, PostIndex)), "\x73\x74\x72\x20\x73\x31\x34\x2c\x20\x5b\x78\x31\x35\x5d\x2c\x20\x23\x32\x35\x35");
  COMPARE(str(s16, MemOperand(x17, -256, PostIndex)), "\x73\x74\x72\x20\x73\x31\x36\x2c\x20\x5b\x78\x31\x37\x5d\x2c\x20\x23\x2d\x32\x35\x36");
  COMPARE(str(d18, MemOperand(x19, 8, PostIndex)), "\x73\x74\x72\x20\x64\x31\x38\x2c\x20\x5b\x78\x31\x39\x5d\x2c\x20\x23\x38");
  COMPARE(str(d20, MemOperand(x21, 255, PostIndex)), "\x73\x74\x72\x20\x64\x32\x30\x2c\x20\x5b\x78\x32\x31\x5d\x2c\x20\x23\x32\x35\x35");
  COMPARE(str(d22, MemOperand(x23, -256, PostIndex)), "\x73\x74\x72\x20\x64\x32\x32\x2c\x20\x5b\x78\x32\x33\x5d\x2c\x20\x23\x2d\x32\x35\x36");

  // TODO(all): Fix this for jssp.
  COMPARE(ldr(s24, MemOperand(jssp)), "\x6c\x64\x72\x20\x73\x32\x34\x2c\x20\x5b\x6a\x73\x73\x70\x5d");
  COMPARE(ldr(d25, MemOperand(jssp, 8)), "\x6c\x64\x72\x20\x64\x32\x35\x2c\x20\x5b\x6a\x73\x73\x70\x2c\x20\x23\x38\x5d");
  COMPARE(str(s26, MemOperand(jssp, 4, PreIndex)), "\x73\x74\x72\x20\x73\x32\x36\x2c\x20\x5b\x6a\x73\x73\x70\x2c\x20\x23\x34\x5d\x21");
  COMPARE(str(d27, MemOperand(jssp, -8, PostIndex)), "\x73\x74\x72\x20\x64\x32\x37\x2c\x20\x5b\x6a\x73\x73\x70\x5d\x2c\x20\x23\x2d\x38");

  CLEANUP();
}


TEST_(load_store_unscaled) {
  SET_UP();

  COMPARE(ldr(w0, MemOperand(x1, 1)), "\x6c\x64\x75\x72\x20\x77\x30\x2c\x20\x5b\x78\x31\x2c\x20\x23\x31\x5d");
  COMPARE(ldr(w2, MemOperand(x3, -1)), "\x6c\x64\x75\x72\x20\x77\x32\x2c\x20\x5b\x78\x33\x2c\x20\x23\x2d\x31\x5d");
  COMPARE(ldr(w4, MemOperand(x5, 255)), "\x6c\x64\x75\x72\x20\x77\x34\x2c\x20\x5b\x78\x35\x2c\x20\x23\x32\x35\x35\x5d");
  COMPARE(ldr(w6, MemOperand(x7, -256)), "\x6c\x64\x75\x72\x20\x77\x36\x2c\x20\x5b\x78\x37\x2c\x20\x23\x2d\x32\x35\x36\x5d");
  COMPARE(ldr(x8, MemOperand(x9, 1)), "\x6c\x64\x75\x72\x20\x78\x38\x2c\x20\x5b\x78\x39\x2c\x20\x23\x31\x5d");
  COMPARE(ldr(x10, MemOperand(x11, -1)), "\x6c\x64\x75\x72\x20\x78\x31\x30\x2c\x20\x5b\x78\x31\x31\x2c\x20\x23\x2d\x31\x5d");
  COMPARE(ldr(x12, MemOperand(x13, 255)), "\x6c\x64\x75\x72\x20\x78\x31\x32\x2c\x20\x5b\x78\x31\x33\x2c\x20\x23\x32\x35\x35\x5d");
  COMPARE(ldr(x14, MemOperand(x15, -256)), "\x6c\x64\x75\x72\x20\x78\x31\x34\x2c\x20\x5b\x78\x31\x35\x2c\x20\x23\x2d\x32\x35\x36\x5d");
  COMPARE(str(w16, MemOperand(x17, 1)), "\x73\x74\x75\x72\x20\x77\x31\x36\x2c\x20\x5b\x78\x31\x37\x2c\x20\x23\x31\x5d");
  COMPARE(str(w18, MemOperand(x19, -1)), "\x73\x74\x75\x72\x20\x77\x31\x38\x2c\x20\x5b\x78\x31\x39\x2c\x20\x23\x2d\x31\x5d");
  COMPARE(str(w20, MemOperand(x21, 255)), "\x73\x74\x75\x72\x20\x77\x32\x30\x2c\x20\x5b\x78\x32\x31\x2c\x20\x23\x32\x35\x35\x5d");
  COMPARE(str(w22, MemOperand(x23, -256)), "\x73\x74\x75\x72\x20\x77\x32\x32\x2c\x20\x5b\x78\x32\x33\x2c\x20\x23\x2d\x32\x35\x36\x5d");
  COMPARE(str(x24, MemOperand(x25, 1)), "\x73\x74\x75\x72\x20\x78\x32\x34\x2c\x20\x5b\x78\x32\x35\x2c\x20\x23\x31\x5d");
  COMPARE(str(x26, MemOperand(cp, -1)), "\x73\x74\x75\x72\x20\x78\x32\x36\x2c\x20\x5b\x63\x70\x2c\x20\x23\x2d\x31\x5d");
  COMPARE(str(jssp, MemOperand(fp, 255)), "\x73\x74\x75\x72\x20\x6a\x73\x73\x70\x2c\x20\x5b\x66\x70\x2c\x20\x23\x32\x35\x35\x5d");
  COMPARE(str(lr, MemOperand(x0, -256)), "\x73\x74\x75\x72\x20\x6c\x72\x2c\x20\x5b\x78\x30\x2c\x20\x23\x2d\x32\x35\x36\x5d");
  COMPARE(ldr(w0, MemOperand(csp, 1)), "\x6c\x64\x75\x72\x20\x77\x30\x2c\x20\x5b\x63\x73\x70\x2c\x20\x23\x31\x5d");
  COMPARE(str(x1, MemOperand(csp, -1)), "\x73\x74\x75\x72\x20\x78\x31\x2c\x20\x5b\x63\x73\x70\x2c\x20\x23\x2d\x31\x5d");
  COMPARE(ldrb(w2, MemOperand(x3, -2)), "\x6c\x64\x75\x72\x62\x20\x77\x32\x2c\x20\x5b\x78\x33\x2c\x20\x23\x2d\x32\x5d");
  COMPARE(ldrsb(w4, MemOperand(x5, -3)), "\x6c\x64\x75\x72\x73\x62\x20\x77\x34\x2c\x20\x5b\x78\x35\x2c\x20\x23\x2d\x33\x5d");
  COMPARE(ldrsb(x6, MemOperand(x7, -4)), "\x6c\x64\x75\x72\x73\x62\x20\x78\x36\x2c\x20\x5b\x78\x37\x2c\x20\x23\x2d\x34\x5d");
  COMPARE(ldrh(w8, MemOperand(x9, -5)), "\x6c\x64\x75\x72\x68\x20\x77\x38\x2c\x20\x5b\x78\x39\x2c\x20\x23\x2d\x35\x5d");
  COMPARE(ldrsh(w10, MemOperand(x11, -6)), "\x6c\x64\x75\x72\x73\x68\x20\x77\x31\x30\x2c\x20\x5b\x78\x31\x31\x2c\x20\x23\x2d\x36\x5d");
  COMPARE(ldrsh(x12, MemOperand(x13, -7)), "\x6c\x64\x75\x72\x73\x68\x20\x78\x31\x32\x2c\x20\x5b\x78\x31\x33\x2c\x20\x23\x2d\x37\x5d");
  COMPARE(ldrsw(x14, MemOperand(x15, -8)), "\x6c\x64\x75\x72\x73\x77\x20\x78\x31\x34\x2c\x20\x5b\x78\x31\x35\x2c\x20\x23\x2d\x38\x5d");

  CLEANUP();
}


TEST_(load_store_pair) {
  SET_UP();

  COMPARE(ldp(w0, w1, MemOperand(x2)), "\x6c\x64\x70\x20\x77\x30\x2c\x20\x77\x31\x2c\x20\x5b\x78\x32\x5d");
  COMPARE(ldp(x3, x4, MemOperand(x5)), "\x6c\x64\x70\x20\x78\x33\x2c\x20\x78\x34\x2c\x20\x5b\x78\x35\x5d");
  COMPARE(ldp(w6, w7, MemOperand(x8, 4)), "\x6c\x64\x70\x20\x77\x36\x2c\x20\x77\x37\x2c\x20\x5b\x78\x38\x2c\x20\x23\x34\x5d");
  COMPARE(ldp(x9, x10, MemOperand(x11, 8)), "\x6c\x64\x70\x20\x78\x39\x2c\x20\x78\x31\x30\x2c\x20\x5b\x78\x31\x31\x2c\x20\x23\x38\x5d");
  COMPARE(ldp(w12, w13, MemOperand(x14, 252)), "\x6c\x64\x70\x20\x77\x31\x32\x2c\x20\x77\x31\x33\x2c\x20\x5b\x78\x31\x34\x2c\x20\x23\x32\x35\x32\x5d");
  COMPARE(ldp(x15, x16, MemOperand(x17, 504)), "\x6c\x64\x70\x20\x78\x31\x35\x2c\x20\x78\x31\x36\x2c\x20\x5b\x78\x31\x37\x2c\x20\x23\x35\x30\x34\x5d");
  COMPARE(ldp(w18, w19, MemOperand(x20, -256)), "\x6c\x64\x70\x20\x77\x31\x38\x2c\x20\x77\x31\x39\x2c\x20\x5b\x78\x32\x30\x2c\x20\x23\x2d\x32\x35\x36\x5d");
  COMPARE(ldp(x21, x22, MemOperand(x23, -512)), "\x6c\x64\x70\x20\x78\x32\x31\x2c\x20\x78\x32\x32\x2c\x20\x5b\x78\x32\x33\x2c\x20\x23\x2d\x35\x31\x32\x5d");
  COMPARE(ldp(w24, w25, MemOperand(x26, 252, PreIndex)),
          "\x6c\x64\x70\x20\x77\x32\x34\x2c\x20\x77\x32\x35\x2c\x20\x5b\x78\x32\x36\x2c\x20\x23\x32\x35\x32\x5d\x21");
  COMPARE(ldp(cp, jssp, MemOperand(fp, 504, PreIndex)),
          "\x6c\x64\x70\x20\x63\x70\x2c\x20\x6a\x73\x73\x70\x2c\x20\x5b\x66\x70\x2c\x20\x23\x35\x30\x34\x5d\x21");
  COMPARE(ldp(w30, w0, MemOperand(x1, -256, PreIndex)),
          "\x6c\x64\x70\x20\x77\x33\x30\x2c\x20\x77\x30\x2c\x20\x5b\x78\x31\x2c\x20\x23\x2d\x32\x35\x36\x5d\x21");
  COMPARE(ldp(x2, x3, MemOperand(x4, -512, PreIndex)),
          "\x6c\x64\x70\x20\x78\x32\x2c\x20\x78\x33\x2c\x20\x5b\x78\x34\x2c\x20\x23\x2d\x35\x31\x32\x5d\x21");
  COMPARE(ldp(w5, w6, MemOperand(x7, 252, PostIndex)),
          "\x6c\x64\x70\x20\x77\x35\x2c\x20\x77\x36\x2c\x20\x5b\x78\x37\x5d\x2c\x20\x23\x32\x35\x32");
  COMPARE(ldp(x8, x9, MemOperand(x10, 504, PostIndex)),
          "\x6c\x64\x70\x20\x78\x38\x2c\x20\x78\x39\x2c\x20\x5b\x78\x31\x30\x5d\x2c\x20\x23\x35\x30\x34");
  COMPARE(ldp(w11, w12, MemOperand(x13, -256, PostIndex)),
          "\x6c\x64\x70\x20\x77\x31\x31\x2c\x20\x77\x31\x32\x2c\x20\x5b\x78\x31\x33\x5d\x2c\x20\x23\x2d\x32\x35\x36");
  COMPARE(ldp(x14, x15, MemOperand(x16, -512, PostIndex)),
          "\x6c\x64\x70\x20\x78\x31\x34\x2c\x20\x78\x31\x35\x2c\x20\x5b\x78\x31\x36\x5d\x2c\x20\x23\x2d\x35\x31\x32");

  COMPARE(ldp(s17, s18, MemOperand(x19)), "\x6c\x64\x70\x20\x73\x31\x37\x2c\x20\x73\x31\x38\x2c\x20\x5b\x78\x31\x39\x5d");
  COMPARE(ldp(s20, s21, MemOperand(x22, 252)), "\x6c\x64\x70\x20\x73\x32\x30\x2c\x20\x73\x32\x31\x2c\x20\x5b\x78\x32\x32\x2c\x20\x23\x32\x35\x32\x5d");
  COMPARE(ldp(s23, s24, MemOperand(x25, -256)), "\x6c\x64\x70\x20\x73\x32\x33\x2c\x20\x73\x32\x34\x2c\x20\x5b\x78\x32\x35\x2c\x20\x23\x2d\x32\x35\x36\x5d");
  COMPARE(ldp(s26, s27, MemOperand(jssp, 252, PreIndex)),
          "\x6c\x64\x70\x20\x73\x32\x36\x2c\x20\x73\x32\x37\x2c\x20\x5b\x6a\x73\x73\x70\x2c\x20\x23\x32\x35\x32\x5d\x21");
  COMPARE(ldp(s29, s30, MemOperand(fp, -256, PreIndex)),
          "\x6c\x64\x70\x20\x73\x32\x39\x2c\x20\x73\x33\x30\x2c\x20\x5b\x66\x70\x2c\x20\x23\x2d\x32\x35\x36\x5d\x21");
  COMPARE(ldp(s31, s0, MemOperand(x1, 252, PostIndex)),
          "\x6c\x64\x70\x20\x73\x33\x31\x2c\x20\x73\x30\x2c\x20\x5b\x78\x31\x5d\x2c\x20\x23\x32\x35\x32");
  COMPARE(ldp(s2, s3, MemOperand(x4, -256, PostIndex)),
          "\x6c\x64\x70\x20\x73\x32\x2c\x20\x73\x33\x2c\x20\x5b\x78\x34\x5d\x2c\x20\x23\x2d\x32\x35\x36");
  COMPARE(ldp(d17, d18, MemOperand(x19)), "\x6c\x64\x70\x20\x64\x31\x37\x2c\x20\x64\x31\x38\x2c\x20\x5b\x78\x31\x39\x5d");
  COMPARE(ldp(d20, d21, MemOperand(x22, 504)), "\x6c\x64\x70\x20\x64\x32\x30\x2c\x20\x64\x32\x31\x2c\x20\x5b\x78\x32\x32\x2c\x20\x23\x35\x30\x34\x5d");
  COMPARE(ldp(d23, d24, MemOperand(x25, -512)), "\x6c\x64\x70\x20\x64\x32\x33\x2c\x20\x64\x32\x34\x2c\x20\x5b\x78\x32\x35\x2c\x20\x23\x2d\x35\x31\x32\x5d");
  COMPARE(ldp(d26, d27, MemOperand(jssp, 504, PreIndex)),
          "\x6c\x64\x70\x20\x64\x32\x36\x2c\x20\x64\x32\x37\x2c\x20\x5b\x6a\x73\x73\x70\x2c\x20\x23\x35\x30\x34\x5d\x21");
  COMPARE(ldp(d29, d30, MemOperand(fp, -512, PreIndex)),
          "\x6c\x64\x70\x20\x64\x32\x39\x2c\x20\x64\x33\x30\x2c\x20\x5b\x66\x70\x2c\x20\x23\x2d\x35\x31\x32\x5d\x21");
  COMPARE(ldp(d31, d0, MemOperand(x1, 504, PostIndex)),
          "\x6c\x64\x70\x20\x64\x33\x31\x2c\x20\x64\x30\x2c\x20\x5b\x78\x31\x5d\x2c\x20\x23\x35\x30\x34");
  COMPARE(ldp(d2, d3, MemOperand(x4, -512, PostIndex)),
          "\x6c\x64\x70\x20\x64\x32\x2c\x20\x64\x33\x2c\x20\x5b\x78\x34\x5d\x2c\x20\x23\x2d\x35\x31\x32");

  COMPARE(stp(w0, w1, MemOperand(x2)), "\x73\x74\x70\x20\x77\x30\x2c\x20\x77\x31\x2c\x20\x5b\x78\x32\x5d");
  COMPARE(stp(x3, x4, MemOperand(x5)), "\x73\x74\x70\x20\x78\x33\x2c\x20\x78\x34\x2c\x20\x5b\x78\x35\x5d");
  COMPARE(stp(w6, w7, MemOperand(x8, 4)), "\x73\x74\x70\x20\x77\x36\x2c\x20\x77\x37\x2c\x20\x5b\x78\x38\x2c\x20\x23\x34\x5d");
  COMPARE(stp(x9, x10, MemOperand(x11, 8)), "\x73\x74\x70\x20\x78\x39\x2c\x20\x78\x31\x30\x2c\x20\x5b\x78\x31\x31\x2c\x20\x23\x38\x5d");
  COMPARE(stp(w12, w13, MemOperand(x14, 252)), "\x73\x74\x70\x20\x77\x31\x32\x2c\x20\x77\x31\x33\x2c\x20\x5b\x78\x31\x34\x2c\x20\x23\x32\x35\x32\x5d");
  COMPARE(stp(x15, x16, MemOperand(x17, 504)), "\x73\x74\x70\x20\x78\x31\x35\x2c\x20\x78\x31\x36\x2c\x20\x5b\x78\x31\x37\x2c\x20\x23\x35\x30\x34\x5d");
  COMPARE(stp(w18, w19, MemOperand(x20, -256)), "\x73\x74\x70\x20\x77\x31\x38\x2c\x20\x77\x31\x39\x2c\x20\x5b\x78\x32\x30\x2c\x20\x23\x2d\x32\x35\x36\x5d");
  COMPARE(stp(x21, x22, MemOperand(x23, -512)), "\x73\x74\x70\x20\x78\x32\x31\x2c\x20\x78\x32\x32\x2c\x20\x5b\x78\x32\x33\x2c\x20\x23\x2d\x35\x31\x32\x5d");
  COMPARE(stp(w24, w25, MemOperand(x26, 252, PreIndex)),
          "\x73\x74\x70\x20\x77\x32\x34\x2c\x20\x77\x32\x35\x2c\x20\x5b\x78\x32\x36\x2c\x20\x23\x32\x35\x32\x5d\x21");
  COMPARE(stp(cp, jssp, MemOperand(fp, 504, PreIndex)),
          "\x73\x74\x70\x20\x63\x70\x2c\x20\x6a\x73\x73\x70\x2c\x20\x5b\x66\x70\x2c\x20\x23\x35\x30\x34\x5d\x21");
  COMPARE(stp(w30, w0, MemOperand(x1, -256, PreIndex)),
          "\x73\x74\x70\x20\x77\x33\x30\x2c\x20\x77\x30\x2c\x20\x5b\x78\x31\x2c\x20\x23\x2d\x32\x35\x36\x5d\x21");
  COMPARE(stp(x2, x3, MemOperand(x4, -512, PreIndex)),
          "\x73\x74\x70\x20\x78\x32\x2c\x20\x78\x33\x2c\x20\x5b\x78\x34\x2c\x20\x23\x2d\x35\x31\x32\x5d\x21");
  COMPARE(stp(w5, w6, MemOperand(x7, 252, PostIndex)),
          "\x73\x74\x70\x20\x77\x35\x2c\x20\x77\x36\x2c\x20\x5b\x78\x37\x5d\x2c\x20\x23\x32\x35\x32");
  COMPARE(stp(x8, x9, MemOperand(x10, 504, PostIndex)),
          "\x73\x74\x70\x20\x78\x38\x2c\x20\x78\x39\x2c\x20\x5b\x78\x31\x30\x5d\x2c\x20\x23\x35\x30\x34");
  COMPARE(stp(w11, w12, MemOperand(x13, -256, PostIndex)),
          "\x73\x74\x70\x20\x77\x31\x31\x2c\x20\x77\x31\x32\x2c\x20\x5b\x78\x31\x33\x5d\x2c\x20\x23\x2d\x32\x35\x36");
  COMPARE(stp(x14, x15, MemOperand(x16, -512, PostIndex)),
          "\x73\x74\x70\x20\x78\x31\x34\x2c\x20\x78\x31\x35\x2c\x20\x5b\x78\x31\x36\x5d\x2c\x20\x23\x2d\x35\x31\x32");

  COMPARE(stp(s17, s18, MemOperand(x19)), "\x73\x74\x70\x20\x73\x31\x37\x2c\x20\x73\x31\x38\x2c\x20\x5b\x78\x31\x39\x5d");
  COMPARE(stp(s20, s21, MemOperand(x22, 252)), "\x73\x74\x70\x20\x73\x32\x30\x2c\x20\x73\x32\x31\x2c\x20\x5b\x78\x32\x32\x2c\x20\x23\x32\x35\x32\x5d");
  COMPARE(stp(s23, s24, MemOperand(x25, -256)), "\x73\x74\x70\x20\x73\x32\x33\x2c\x20\x73\x32\x34\x2c\x20\x5b\x78\x32\x35\x2c\x20\x23\x2d\x32\x35\x36\x5d");
  COMPARE(stp(s26, s27, MemOperand(jssp, 252, PreIndex)),
          "\x73\x74\x70\x20\x73\x32\x36\x2c\x20\x73\x32\x37\x2c\x20\x5b\x6a\x73\x73\x70\x2c\x20\x23\x32\x35\x32\x5d\x21");
  COMPARE(stp(s29, s30, MemOperand(fp, -256, PreIndex)),
          "\x73\x74\x70\x20\x73\x32\x39\x2c\x20\x73\x33\x30\x2c\x20\x5b\x66\x70\x2c\x20\x23\x2d\x32\x35\x36\x5d\x21");
  COMPARE(stp(s31, s0, MemOperand(x1, 252, PostIndex)),
          "\x73\x74\x70\x20\x73\x33\x31\x2c\x20\x73\x30\x2c\x20\x5b\x78\x31\x5d\x2c\x20\x23\x32\x35\x32");
  COMPARE(stp(s2, s3, MemOperand(x4, -256, PostIndex)),
          "\x73\x74\x70\x20\x73\x32\x2c\x20\x73\x33\x2c\x20\x5b\x78\x34\x5d\x2c\x20\x23\x2d\x32\x35\x36");
  COMPARE(stp(d17, d18, MemOperand(x19)), "\x73\x74\x70\x20\x64\x31\x37\x2c\x20\x64\x31\x38\x2c\x20\x5b\x78\x31\x39\x5d");
  COMPARE(stp(d20, d21, MemOperand(x22, 504)), "\x73\x74\x70\x20\x64\x32\x30\x2c\x20\x64\x32\x31\x2c\x20\x5b\x78\x32\x32\x2c\x20\x23\x35\x30\x34\x5d");
  COMPARE(stp(d23, d24, MemOperand(x25, -512)), "\x73\x74\x70\x20\x64\x32\x33\x2c\x20\x64\x32\x34\x2c\x20\x5b\x78\x32\x35\x2c\x20\x23\x2d\x35\x31\x32\x5d");
  COMPARE(stp(d26, d27, MemOperand(jssp, 504, PreIndex)),
          "\x73\x74\x70\x20\x64\x32\x36\x2c\x20\x64\x32\x37\x2c\x20\x5b\x6a\x73\x73\x70\x2c\x20\x23\x35\x30\x34\x5d\x21");
  COMPARE(stp(d29, d30, MemOperand(fp, -512, PreIndex)),
          "\x73\x74\x70\x20\x64\x32\x39\x2c\x20\x64\x33\x30\x2c\x20\x5b\x66\x70\x2c\x20\x23\x2d\x35\x31\x32\x5d\x21");
  COMPARE(stp(d31, d0, MemOperand(x1, 504, PostIndex)),
          "\x73\x74\x70\x20\x64\x33\x31\x2c\x20\x64\x30\x2c\x20\x5b\x78\x31\x5d\x2c\x20\x23\x35\x30\x34");
  COMPARE(stp(d2, d3, MemOperand(x4, -512, PostIndex)),
          "\x73\x74\x70\x20\x64\x32\x2c\x20\x64\x33\x2c\x20\x5b\x78\x34\x5d\x2c\x20\x23\x2d\x35\x31\x32");

  // TODO(all): Update / Restore this test.
  COMPARE(ldp(w16, w17, MemOperand(jssp, 4, PostIndex)),
          "\x6c\x64\x70\x20\x77\x31\x36\x2c\x20\x77\x31\x37\x2c\x20\x5b\x6a\x73\x73\x70\x5d\x2c\x20\x23\x34");
  COMPARE(stp(x18, x19, MemOperand(jssp, -8, PreIndex)),
          "\x73\x74\x70\x20\x78\x31\x38\x2c\x20\x78\x31\x39\x2c\x20\x5b\x6a\x73\x73\x70\x2c\x20\x23\x2d\x38\x5d\x21");
  COMPARE(ldp(s30, s31, MemOperand(jssp, 12, PostIndex)),
          "\x6c\x64\x70\x20\x73\x33\x30\x2c\x20\x73\x33\x31\x2c\x20\x5b\x6a\x73\x73\x70\x5d\x2c\x20\x23\x31\x32");
  COMPARE(stp(d30, d31, MemOperand(jssp, -16)),
          "\x73\x74\x70\x20\x64\x33\x30\x2c\x20\x64\x33\x31\x2c\x20\x5b\x6a\x73\x73\x70\x2c\x20\x23\x2d\x31\x36\x5d");

  COMPARE(ldpsw(x0, x1, MemOperand(x2)), "\x6c\x64\x70\x73\x77\x20\x78\x30\x2c\x20\x78\x31\x2c\x20\x5b\x78\x32\x5d");
  COMPARE(ldpsw(x3, x4, MemOperand(x5, 16)), "\x6c\x64\x70\x73\x77\x20\x78\x33\x2c\x20\x78\x34\x2c\x20\x5b\x78\x35\x2c\x20\x23\x31\x36\x5d");
  COMPARE(ldpsw(x6, x7, MemOperand(x8, -32, PreIndex)),
          "\x6c\x64\x70\x73\x77\x20\x78\x36\x2c\x20\x78\x37\x2c\x20\x5b\x78\x38\x2c\x20\x23\x2d\x33\x32\x5d\x21");
  COMPARE(ldpsw(x9, x10, MemOperand(x11, 128, PostIndex)),
          "\x6c\x64\x70\x73\x77\x20\x78\x39\x2c\x20\x78\x31\x30\x2c\x20\x5b\x78\x31\x31\x5d\x2c\x20\x23\x31\x32\x38");

  CLEANUP();
}


TEST_(load_store_pair_nontemp) {
  SET_UP();

  COMPARE(ldnp(w0, w1, MemOperand(x2)), "\x6c\x64\x6e\x70\x20\x77\x30\x2c\x20\x77\x31\x2c\x20\x5b\x78\x32\x5d");
  COMPARE(stnp(w3, w4, MemOperand(x5, 252)), "\x73\x74\x6e\x70\x20\x77\x33\x2c\x20\x77\x34\x2c\x20\x5b\x78\x35\x2c\x20\x23\x32\x35\x32\x5d");
  COMPARE(ldnp(w6, w7, MemOperand(x8, -256)), "\x6c\x64\x6e\x70\x20\x77\x36\x2c\x20\x77\x37\x2c\x20\x5b\x78\x38\x2c\x20\x23\x2d\x32\x35\x36\x5d");
  COMPARE(stnp(x9, x10, MemOperand(x11)), "\x73\x74\x6e\x70\x20\x78\x39\x2c\x20\x78\x31\x30\x2c\x20\x5b\x78\x31\x31\x5d");
  COMPARE(ldnp(x12, x13, MemOperand(x14, 504)), "\x6c\x64\x6e\x70\x20\x78\x31\x32\x2c\x20\x78\x31\x33\x2c\x20\x5b\x78\x31\x34\x2c\x20\x23\x35\x30\x34\x5d");
  COMPARE(stnp(x15, x16, MemOperand(x17, -512)), "\x73\x74\x6e\x70\x20\x78\x31\x35\x2c\x20\x78\x31\x36\x2c\x20\x5b\x78\x31\x37\x2c\x20\x23\x2d\x35\x31\x32\x5d");
  COMPARE(ldnp(s18, s19, MemOperand(x20)), "\x6c\x64\x6e\x70\x20\x73\x31\x38\x2c\x20\x73\x31\x39\x2c\x20\x5b\x78\x32\x30\x5d");
  COMPARE(stnp(s21, s22, MemOperand(x23, 252)), "\x73\x74\x6e\x70\x20\x73\x32\x31\x2c\x20\x73\x32\x32\x2c\x20\x5b\x78\x32\x33\x2c\x20\x23\x32\x35\x32\x5d");
  COMPARE(ldnp(s24, s25, MemOperand(x26, -256)), "\x6c\x64\x6e\x70\x20\x73\x32\x34\x2c\x20\x73\x32\x35\x2c\x20\x5b\x78\x32\x36\x2c\x20\x23\x2d\x32\x35\x36\x5d");
  COMPARE(stnp(d27, d28, MemOperand(fp)), "\x73\x74\x6e\x70\x20\x64\x32\x37\x2c\x20\x64\x32\x38\x2c\x20\x5b\x66\x70\x5d");
  COMPARE(ldnp(d30, d31, MemOperand(x0, 504)), "\x6c\x64\x6e\x70\x20\x64\x33\x30\x2c\x20\x64\x33\x31\x2c\x20\x5b\x78\x30\x2c\x20\x23\x35\x30\x34\x5d");
  COMPARE(stnp(d1, d2, MemOperand(x3, -512)), "\x73\x74\x6e\x70\x20\x64\x31\x2c\x20\x64\x32\x2c\x20\x5b\x78\x33\x2c\x20\x23\x2d\x35\x31\x32\x5d");

  CLEANUP();
}

#if 0  // TODO(all): enable.
TEST_(load_literal) {
  SET_UP();

  COMPARE_PREFIX(ldr(x10, 0x1234567890abcdefUL),  "\x6c\x64\x72\x20\x78\x31\x30\x2c\x20\x70\x63\x2b\x38");
  COMPARE_PREFIX(ldr(w20, 0xfedcba09),  "\x6c\x64\x72\x20\x77\x32\x30\x2c\x20\x70\x63\x2b\x38");
  COMPARE_PREFIX(ldr(d11, 1.234),  "\x6c\x64\x72\x20\x64\x31\x31\x2c\x20\x70\x63\x2b\x38");
  COMPARE_PREFIX(ldr(s22, 2.5f),  "\x6c\x64\x72\x20\x73\x32\x32\x2c\x20\x70\x63\x2b\x38");

  CLEANUP();
}
#endif

TEST_(cond_select) {
  SET_UP();

  COMPARE(csel(w0, w1, w2, eq), "\x63\x73\x65\x6c\x20\x77\x30\x2c\x20\x77\x31\x2c\x20\x77\x32\x2c\x20\x65\x71");
  COMPARE(csel(x3, x4, x5, ne), "\x63\x73\x65\x6c\x20\x78\x33\x2c\x20\x78\x34\x2c\x20\x78\x35\x2c\x20\x6e\x65");
  COMPARE(csinc(w6, w7, w8, hs), "\x63\x73\x69\x6e\x63\x20\x77\x36\x2c\x20\x77\x37\x2c\x20\x77\x38\x2c\x20\x68\x73");
  COMPARE(csinc(x9, x10, x11, lo), "\x63\x73\x69\x6e\x63\x20\x78\x39\x2c\x20\x78\x31\x30\x2c\x20\x78\x31\x31\x2c\x20\x6c\x6f");
  COMPARE(csinv(w12, w13, w14, mi), "\x63\x73\x69\x6e\x76\x20\x77\x31\x32\x2c\x20\x77\x31\x33\x2c\x20\x77\x31\x34\x2c\x20\x6d\x69");
  COMPARE(csinv(x15, x16, x17, pl), "\x63\x73\x69\x6e\x76\x20\x78\x31\x35\x2c\x20\x78\x31\x36\x2c\x20\x78\x31\x37\x2c\x20\x70\x6c");
  COMPARE(csneg(w18, w19, w20, vs), "\x63\x73\x6e\x65\x67\x20\x77\x31\x38\x2c\x20\x77\x31\x39\x2c\x20\x77\x32\x30\x2c\x20\x76\x73");
  COMPARE(csneg(x21, x22, x23, vc), "\x63\x73\x6e\x65\x67\x20\x78\x32\x31\x2c\x20\x78\x32\x32\x2c\x20\x78\x32\x33\x2c\x20\x76\x63");
  COMPARE(cset(w24, hi), "\x63\x73\x65\x74\x20\x77\x32\x34\x2c\x20\x68\x69");
  COMPARE(cset(x25, ls), "\x63\x73\x65\x74\x20\x78\x32\x35\x2c\x20\x6c\x73");
  COMPARE(csetm(w26, ge), "\x63\x73\x65\x74\x6d\x20\x77\x32\x36\x2c\x20\x67\x65");
  COMPARE(csetm(cp, lt), "\x63\x73\x65\x74\x6d\x20\x63\x70\x2c\x20\x6c\x74");
  COMPARE(cinc(w28, w29, gt), "\x63\x69\x6e\x63\x20\x77\x32\x38\x2c\x20\x77\x32\x39\x2c\x20\x67\x74");
  COMPARE(cinc(lr, x0, le), "\x63\x69\x6e\x63\x20\x6c\x72\x2c\x20\x78\x30\x2c\x20\x6c\x65");
  COMPARE(cinv(w1, w2, eq), "\x63\x69\x6e\x76\x20\x77\x31\x2c\x20\x77\x32\x2c\x20\x65\x71");
  COMPARE(cinv(x3, x4, ne), "\x63\x69\x6e\x76\x20\x78\x33\x2c\x20\x78\x34\x2c\x20\x6e\x65");
  COMPARE(cneg(w5, w6, hs), "\x63\x6e\x65\x67\x20\x77\x35\x2c\x20\x77\x36\x2c\x20\x68\x73");
  COMPARE(cneg(x7, x8, lo), "\x63\x6e\x65\x67\x20\x78\x37\x2c\x20\x78\x38\x2c\x20\x6c\x6f");

  COMPARE(csel(x0, x1, x2, al), "\x63\x73\x65\x6c\x20\x78\x30\x2c\x20\x78\x31\x2c\x20\x78\x32\x2c\x20\x61\x6c");
  COMPARE(csel(x1, x2, x3, nv), "\x63\x73\x65\x6c\x20\x78\x31\x2c\x20\x78\x32\x2c\x20\x78\x33\x2c\x20\x6e\x76");
  COMPARE(csinc(x2, x3, x4, al), "\x63\x73\x69\x6e\x63\x20\x78\x32\x2c\x20\x78\x33\x2c\x20\x78\x34\x2c\x20\x61\x6c");
  COMPARE(csinc(x3, x4, x5, nv), "\x63\x73\x69\x6e\x63\x20\x78\x33\x2c\x20\x78\x34\x2c\x20\x78\x35\x2c\x20\x6e\x76");
  COMPARE(csinv(x4, x5, x6, al), "\x63\x73\x69\x6e\x76\x20\x78\x34\x2c\x20\x78\x35\x2c\x20\x78\x36\x2c\x20\x61\x6c");
  COMPARE(csinv(x5, x6, x7, nv), "\x63\x73\x69\x6e\x76\x20\x78\x35\x2c\x20\x78\x36\x2c\x20\x78\x37\x2c\x20\x6e\x76");
  COMPARE(csneg(x6, x7, x8, al), "\x63\x73\x6e\x65\x67\x20\x78\x36\x2c\x20\x78\x37\x2c\x20\x78\x38\x2c\x20\x61\x6c");
  COMPARE(csneg(x7, x8, x9, nv), "\x63\x73\x6e\x65\x67\x20\x78\x37\x2c\x20\x78\x38\x2c\x20\x78\x39\x2c\x20\x6e\x76");

  CLEANUP();
}


TEST(cond_select_macro) {
  SET_UP_CLASS(MacroAssembler);

  COMPARE(Csel(w0, w1, -1, eq), "\x63\x73\x69\x6e\x76\x20\x77\x30\x2c\x20\x77\x31\x2c\x20\x77\x7a\x72\x2c\x20\x65\x71");
  COMPARE(Csel(w2, w3, 0, ne), "\x63\x73\x65\x6c\x20\x77\x32\x2c\x20\x77\x33\x2c\x20\x77\x7a\x72\x2c\x20\x6e\x65");
  COMPARE(Csel(w4, w5, 1, hs), "\x63\x73\x69\x6e\x63\x20\x77\x34\x2c\x20\x77\x35\x2c\x20\x77\x7a\x72\x2c\x20\x68\x73");
  COMPARE(Csel(x6, x7, -1, lo), "\x63\x73\x69\x6e\x76\x20\x78\x36\x2c\x20\x78\x37\x2c\x20\x78\x7a\x72\x2c\x20\x6c\x6f");
  COMPARE(Csel(x8, x9, 0, mi), "\x63\x73\x65\x6c\x20\x78\x38\x2c\x20\x78\x39\x2c\x20\x78\x7a\x72\x2c\x20\x6d\x69");
  COMPARE(Csel(x10, x11, 1, pl), "\x63\x73\x69\x6e\x63\x20\x78\x31\x30\x2c\x20\x78\x31\x31\x2c\x20\x78\x7a\x72\x2c\x20\x70\x6c");

  CLEANUP();
}


TEST_(cond_cmp) {
  SET_UP();

  COMPARE(ccmn(w0, w1, NZCVFlag, eq), "\x63\x63\x6d\x6e\x20\x77\x30\x2c\x20\x77\x31\x2c\x20\x23\x4e\x5a\x43\x56\x2c\x20\x65\x71");
  COMPARE(ccmn(x2, x3, NZCFlag, ne), "\x63\x63\x6d\x6e\x20\x78\x32\x2c\x20\x78\x33\x2c\x20\x23\x4e\x5a\x43\x76\x2c\x20\x6e\x65");
  COMPARE(ccmp(w4, w5, NZVFlag, hs), "\x63\x63\x6d\x70\x20\x77\x34\x2c\x20\x77\x35\x2c\x20\x23\x4e\x5a\x63\x56\x2c\x20\x68\x73");
  COMPARE(ccmp(x6, x7, NZFlag, lo), "\x63\x63\x6d\x70\x20\x78\x36\x2c\x20\x78\x37\x2c\x20\x23\x4e\x5a\x63\x76\x2c\x20\x6c\x6f");
  COMPARE(ccmn(w8, 31, NFlag, mi), "\x63\x63\x6d\x6e\x20\x77\x38\x2c\x20\x23\x33\x31\x2c\x20\x23\x4e\x7a\x63\x76\x2c\x20\x6d\x69");
  COMPARE(ccmn(x9, 30, NCFlag, pl), "\x63\x63\x6d\x6e\x20\x78\x39\x2c\x20\x23\x33\x30\x2c\x20\x23\x4e\x7a\x43\x76\x2c\x20\x70\x6c");
  COMPARE(ccmp(w10, 29, NVFlag, vs), "\x63\x63\x6d\x70\x20\x77\x31\x30\x2c\x20\x23\x32\x39\x2c\x20\x23\x4e\x7a\x63\x56\x2c\x20\x76\x73");
  COMPARE(ccmp(x11, 28, NFlag, vc), "\x63\x63\x6d\x70\x20\x78\x31\x31\x2c\x20\x23\x32\x38\x2c\x20\x23\x4e\x7a\x63\x76\x2c\x20\x76\x63");
  COMPARE(ccmn(w12, w13, NoFlag, al), "\x63\x63\x6d\x6e\x20\x77\x31\x32\x2c\x20\x77\x31\x33\x2c\x20\x23\x6e\x7a\x63\x76\x2c\x20\x61\x6c");
  COMPARE(ccmp(x14, 27, ZVFlag, nv), "\x63\x63\x6d\x70\x20\x78\x31\x34\x2c\x20\x23\x32\x37\x2c\x20\x23\x6e\x5a\x63\x56\x2c\x20\x6e\x76");

  CLEANUP();
}


TEST_(cond_cmp_macro) {
  SET_UP_CLASS(MacroAssembler);

  COMPARE(Ccmp(w0, -1, VFlag, hi), "\x63\x63\x6d\x6e\x20\x77\x30\x2c\x20\x23\x31\x2c\x20\x23\x6e\x7a\x63\x56\x2c\x20\x68\x69");
  COMPARE(Ccmp(x1, -31, CFlag, ge), "\x63\x63\x6d\x6e\x20\x78\x31\x2c\x20\x23\x33\x31\x2c\x20\x23\x6e\x7a\x43\x76\x2c\x20\x67\x65");
  COMPARE(Ccmn(w2, -1, CVFlag, gt), "\x63\x63\x6d\x70\x20\x77\x32\x2c\x20\x23\x31\x2c\x20\x23\x6e\x7a\x43\x56\x2c\x20\x67\x74");
  COMPARE(Ccmn(x3, -31, ZCVFlag, ls), "\x63\x63\x6d\x70\x20\x78\x33\x2c\x20\x23\x33\x31\x2c\x20\x23\x6e\x5a\x43\x56\x2c\x20\x6c\x73");

  CLEANUP();
}


TEST_(fmov_imm) {
  SET_UP();

  COMPARE(fmov(s0, 1.0f), "\x66\x6d\x6f\x76\x20\x73\x30\x2c\x20\x23\x30\x78\x37\x30\x20\x28\x31\x2e\x30\x30\x30\x30\x29");
  COMPARE(fmov(s31, -13.0f), "\x66\x6d\x6f\x76\x20\x73\x33\x31\x2c\x20\x23\x30\x78\x61\x61\x20\x28\x2d\x31\x33\x2e\x30\x30\x30\x30\x29");
  COMPARE(fmov(d1, 1.0), "\x66\x6d\x6f\x76\x20\x64\x31\x2c\x20\x23\x30\x78\x37\x30\x20\x28\x31\x2e\x30\x30\x30\x30\x29");
  COMPARE(fmov(d29, -13.0), "\x66\x6d\x6f\x76\x20\x64\x32\x39\x2c\x20\x23\x30\x78\x61\x61\x20\x28\x2d\x31\x33\x2e\x30\x30\x30\x30\x29");

  CLEANUP();
}


TEST_(fmov_reg) {
  SET_UP();

  COMPARE(fmov(w3, s13), "\x66\x6d\x6f\x76\x20\x77\x33\x2c\x20\x73\x31\x33");
  COMPARE(fmov(x6, d26), "\x66\x6d\x6f\x76\x20\x78\x36\x2c\x20\x64\x32\x36");
  COMPARE(fmov(s11, w30), "\x66\x6d\x6f\x76\x20\x73\x31\x31\x2c\x20\x77\x33\x30");
  COMPARE(fmov(d31, x2), "\x66\x6d\x6f\x76\x20\x64\x33\x31\x2c\x20\x78\x32");
  COMPARE(fmov(s12, s13), "\x66\x6d\x6f\x76\x20\x73\x31\x32\x2c\x20\x73\x31\x33");
  COMPARE(fmov(d22, d23), "\x66\x6d\x6f\x76\x20\x64\x32\x32\x2c\x20\x64\x32\x33");

  CLEANUP();
}


TEST_(fp_dp1) {
  SET_UP();

  COMPARE(fabs(s0, s1), "\x66\x61\x62\x73\x20\x73\x30\x2c\x20\x73\x31");
  COMPARE(fabs(s31, s30), "\x66\x61\x62\x73\x20\x73\x33\x31\x2c\x20\x73\x33\x30");
  COMPARE(fabs(d2, d3), "\x66\x61\x62\x73\x20\x64\x32\x2c\x20\x64\x33");
  COMPARE(fabs(d31, d30), "\x66\x61\x62\x73\x20\x64\x33\x31\x2c\x20\x64\x33\x30");
  COMPARE(fneg(s4, s5), "\x66\x6e\x65\x67\x20\x73\x34\x2c\x20\x73\x35");
  COMPARE(fneg(s31, s30), "\x66\x6e\x65\x67\x20\x73\x33\x31\x2c\x20\x73\x33\x30");
  COMPARE(fneg(d6, d7), "\x66\x6e\x65\x67\x20\x64\x36\x2c\x20\x64\x37");
  COMPARE(fneg(d31, d30), "\x66\x6e\x65\x67\x20\x64\x33\x31\x2c\x20\x64\x33\x30");
  COMPARE(fsqrt(s8, s9), "\x66\x73\x71\x72\x74\x20\x73\x38\x2c\x20\x73\x39");
  COMPARE(fsqrt(s31, s30), "\x66\x73\x71\x72\x74\x20\x73\x33\x31\x2c\x20\x73\x33\x30");
  COMPARE(fsqrt(d10, d11), "\x66\x73\x71\x72\x74\x20\x64\x31\x30\x2c\x20\x64\x31\x31");
  COMPARE(fsqrt(d31, d30), "\x66\x73\x71\x72\x74\x20\x64\x33\x31\x2c\x20\x64\x33\x30");
  COMPARE(frinta(s10, s11), "\x66\x72\x69\x6e\x74\x61\x20\x73\x31\x30\x2c\x20\x73\x31\x31");
  COMPARE(frinta(s31, s30), "\x66\x72\x69\x6e\x74\x61\x20\x73\x33\x31\x2c\x20\x73\x33\x30");
  COMPARE(frinta(d12, d13), "\x66\x72\x69\x6e\x74\x61\x20\x64\x31\x32\x2c\x20\x64\x31\x33");
  COMPARE(frinta(d31, d30), "\x66\x72\x69\x6e\x74\x61\x20\x64\x33\x31\x2c\x20\x64\x33\x30");
  COMPARE(frintn(s10, s11), "\x66\x72\x69\x6e\x74\x6e\x20\x73\x31\x30\x2c\x20\x73\x31\x31");
  COMPARE(frintn(s31, s30), "\x66\x72\x69\x6e\x74\x6e\x20\x73\x33\x31\x2c\x20\x73\x33\x30");
  COMPARE(frintn(d12, d13), "\x66\x72\x69\x6e\x74\x6e\x20\x64\x31\x32\x2c\x20\x64\x31\x33");
  COMPARE(frintn(d31, d30), "\x66\x72\x69\x6e\x74\x6e\x20\x64\x33\x31\x2c\x20\x64\x33\x30");
  COMPARE(frintz(s10, s11), "\x66\x72\x69\x6e\x74\x7a\x20\x73\x31\x30\x2c\x20\x73\x31\x31");
  COMPARE(frintz(s31, s30), "\x66\x72\x69\x6e\x74\x7a\x20\x73\x33\x31\x2c\x20\x73\x33\x30");
  COMPARE(frintz(d12, d13), "\x66\x72\x69\x6e\x74\x7a\x20\x64\x31\x32\x2c\x20\x64\x31\x33");
  COMPARE(frintz(d31, d30), "\x66\x72\x69\x6e\x74\x7a\x20\x64\x33\x31\x2c\x20\x64\x33\x30");
  COMPARE(fcvt(d14, s15), "\x66\x63\x76\x74\x20\x64\x31\x34\x2c\x20\x73\x31\x35");
  COMPARE(fcvt(d31, s31), "\x66\x63\x76\x74\x20\x64\x33\x31\x2c\x20\x73\x33\x31");

  CLEANUP();
}


TEST_(fp_dp2) {
  SET_UP();

  COMPARE(fadd(s0, s1, s2), "\x66\x61\x64\x64\x20\x73\x30\x2c\x20\x73\x31\x2c\x20\x73\x32");
  COMPARE(fadd(d3, d4, d5), "\x66\x61\x64\x64\x20\x64\x33\x2c\x20\x64\x34\x2c\x20\x64\x35");
  COMPARE(fsub(s31, s30, s29), "\x66\x73\x75\x62\x20\x73\x33\x31\x2c\x20\x73\x33\x30\x2c\x20\x73\x32\x39");
  COMPARE(fsub(d31, d30, d29), "\x66\x73\x75\x62\x20\x64\x33\x31\x2c\x20\x64\x33\x30\x2c\x20\x64\x32\x39");
  COMPARE(fmul(s7, s8, s9), "\x66\x6d\x75\x6c\x20\x73\x37\x2c\x20\x73\x38\x2c\x20\x73\x39");
  COMPARE(fmul(d10, d11, d12), "\x66\x6d\x75\x6c\x20\x64\x31\x30\x2c\x20\x64\x31\x31\x2c\x20\x64\x31\x32");
  COMPARE(fdiv(s13, s14, s15), "\x66\x64\x69\x76\x20\x73\x31\x33\x2c\x20\x73\x31\x34\x2c\x20\x73\x31\x35");
  COMPARE(fdiv(d16, d17, d18), "\x66\x64\x69\x76\x20\x64\x31\x36\x2c\x20\x64\x31\x37\x2c\x20\x64\x31\x38");
  COMPARE(fmax(s19, s20, s21), "\x66\x6d\x61\x78\x20\x73\x31\x39\x2c\x20\x73\x32\x30\x2c\x20\x73\x32\x31");
  COMPARE(fmax(d22, d23, d24), "\x66\x6d\x61\x78\x20\x64\x32\x32\x2c\x20\x64\x32\x33\x2c\x20\x64\x32\x34");
  COMPARE(fmin(s25, s26, s27), "\x66\x6d\x69\x6e\x20\x73\x32\x35\x2c\x20\x73\x32\x36\x2c\x20\x73\x32\x37");
  COMPARE(fmin(d28, d29, d30), "\x66\x6d\x69\x6e\x20\x64\x32\x38\x2c\x20\x64\x32\x39\x2c\x20\x64\x33\x30");
  COMPARE(fmaxnm(s31, s0, s1), "\x66\x6d\x61\x78\x6e\x6d\x20\x73\x33\x31\x2c\x20\x73\x30\x2c\x20\x73\x31");
  COMPARE(fmaxnm(d2, d3, d4), "\x66\x6d\x61\x78\x6e\x6d\x20\x64\x32\x2c\x20\x64\x33\x2c\x20\x64\x34");
  COMPARE(fminnm(s5, s6, s7), "\x66\x6d\x69\x6e\x6e\x6d\x20\x73\x35\x2c\x20\x73\x36\x2c\x20\x73\x37");
  COMPARE(fminnm(d8, d9, d10), "\x66\x6d\x69\x6e\x6e\x6d\x20\x64\x38\x2c\x20\x64\x39\x2c\x20\x64\x31\x30");

  CLEANUP();
}


TEST(fp_dp3) {
  SET_UP();

  COMPARE(fmadd(s7, s8, s9, s10), "\x66\x6d\x61\x64\x64\x20\x73\x37\x2c\x20\x73\x38\x2c\x20\x73\x39\x2c\x20\x73\x31\x30");
  COMPARE(fmadd(d10, d11, d12, d10), "\x66\x6d\x61\x64\x64\x20\x64\x31\x30\x2c\x20\x64\x31\x31\x2c\x20\x64\x31\x32\x2c\x20\x64\x31\x30");
  COMPARE(fmsub(s7, s8, s9, s10), "\x66\x6d\x73\x75\x62\x20\x73\x37\x2c\x20\x73\x38\x2c\x20\x73\x39\x2c\x20\x73\x31\x30");
  COMPARE(fmsub(d10, d11, d12, d10), "\x66\x6d\x73\x75\x62\x20\x64\x31\x30\x2c\x20\x64\x31\x31\x2c\x20\x64\x31\x32\x2c\x20\x64\x31\x30");

  COMPARE(fnmadd(s7, s8, s9, s10), "\x66\x6e\x6d\x61\x64\x64\x20\x73\x37\x2c\x20\x73\x38\x2c\x20\x73\x39\x2c\x20\x73\x31\x30");
  COMPARE(fnmadd(d10, d11, d12, d10), "\x66\x6e\x6d\x61\x64\x64\x20\x64\x31\x30\x2c\x20\x64\x31\x31\x2c\x20\x64\x31\x32\x2c\x20\x64\x31\x30");
  COMPARE(fnmsub(s7, s8, s9, s10), "\x66\x6e\x6d\x73\x75\x62\x20\x73\x37\x2c\x20\x73\x38\x2c\x20\x73\x39\x2c\x20\x73\x31\x30");
  COMPARE(fnmsub(d10, d11, d12, d10), "\x66\x6e\x6d\x73\x75\x62\x20\x64\x31\x30\x2c\x20\x64\x31\x31\x2c\x20\x64\x31\x32\x2c\x20\x64\x31\x30");

  CLEANUP();
}


TEST_(fp_compare) {
  SET_UP();

  COMPARE(fcmp(s0, s1), "\x66\x63\x6d\x70\x20\x73\x30\x2c\x20\x73\x31");
  COMPARE(fcmp(s31, s30), "\x66\x63\x6d\x70\x20\x73\x33\x31\x2c\x20\x73\x33\x30");
  COMPARE(fcmp(d0, d1), "\x66\x63\x6d\x70\x20\x64\x30\x2c\x20\x64\x31");
  COMPARE(fcmp(d31, d30), "\x66\x63\x6d\x70\x20\x64\x33\x31\x2c\x20\x64\x33\x30");
  COMPARE(fcmp(s12, 0), "\x66\x63\x6d\x70\x20\x73\x31\x32\x2c\x20\x23\x30\x2e\x30");
  COMPARE(fcmp(d12, 0), "\x66\x63\x6d\x70\x20\x64\x31\x32\x2c\x20\x23\x30\x2e\x30");

  CLEANUP();
}


TEST_(fp_cond_compare) {
  SET_UP();

  COMPARE(fccmp(s0, s1, NoFlag, eq), "\x66\x63\x63\x6d\x70\x20\x73\x30\x2c\x20\x73\x31\x2c\x20\x23\x6e\x7a\x63\x76\x2c\x20\x65\x71");
  COMPARE(fccmp(s2, s3, ZVFlag, ne), "\x66\x63\x63\x6d\x70\x20\x73\x32\x2c\x20\x73\x33\x2c\x20\x23\x6e\x5a\x63\x56\x2c\x20\x6e\x65");
  COMPARE(fccmp(s30, s16, NCFlag, pl), "\x66\x63\x63\x6d\x70\x20\x73\x33\x30\x2c\x20\x73\x31\x36\x2c\x20\x23\x4e\x7a\x43\x76\x2c\x20\x70\x6c");
  COMPARE(fccmp(s31, s31, NZCVFlag, le), "\x66\x63\x63\x6d\x70\x20\x73\x33\x31\x2c\x20\x73\x33\x31\x2c\x20\x23\x4e\x5a\x43\x56\x2c\x20\x6c\x65");
  COMPARE(fccmp(d4, d5, VFlag, gt), "\x66\x63\x63\x6d\x70\x20\x64\x34\x2c\x20\x64\x35\x2c\x20\x23\x6e\x7a\x63\x56\x2c\x20\x67\x74");
  COMPARE(fccmp(d6, d7, NFlag, vs), "\x66\x63\x63\x6d\x70\x20\x64\x36\x2c\x20\x64\x37\x2c\x20\x23\x4e\x7a\x63\x76\x2c\x20\x76\x73");
  COMPARE(fccmp(d30, d0, NZFlag, vc), "\x66\x63\x63\x6d\x70\x20\x64\x33\x30\x2c\x20\x64\x30\x2c\x20\x23\x4e\x5a\x63\x76\x2c\x20\x76\x63");
  COMPARE(fccmp(d31, d31, ZFlag, hs), "\x66\x63\x63\x6d\x70\x20\x64\x33\x31\x2c\x20\x64\x33\x31\x2c\x20\x23\x6e\x5a\x63\x76\x2c\x20\x68\x73");
  COMPARE(fccmp(s14, s15, CVFlag, al), "\x66\x63\x63\x6d\x70\x20\x73\x31\x34\x2c\x20\x73\x31\x35\x2c\x20\x23\x6e\x7a\x43\x56\x2c\x20\x61\x6c");
  COMPARE(fccmp(d16, d17, CFlag, nv), "\x66\x63\x63\x6d\x70\x20\x64\x31\x36\x2c\x20\x64\x31\x37\x2c\x20\x23\x6e\x7a\x43\x76\x2c\x20\x6e\x76");

  CLEANUP();
}


TEST_(fp_select) {
  SET_UP();

  COMPARE(fcsel(s0, s1, s2, eq), "\x66\x63\x73\x65\x6c\x20\x73\x30\x2c\x20\x73\x31\x2c\x20\x73\x32\x2c\x20\x65\x71")
  COMPARE(fcsel(s31, s31, s30, ne), "\x66\x63\x73\x65\x6c\x20\x73\x33\x31\x2c\x20\x73\x33\x31\x2c\x20\x73\x33\x30\x2c\x20\x6e\x65");
  COMPARE(fcsel(d0, d1, d2, mi), "\x66\x63\x73\x65\x6c\x20\x64\x30\x2c\x20\x64\x31\x2c\x20\x64\x32\x2c\x20\x6d\x69");
  COMPARE(fcsel(d31, d30, d31, pl), "\x66\x63\x73\x65\x6c\x20\x64\x33\x31\x2c\x20\x64\x33\x30\x2c\x20\x64\x33\x31\x2c\x20\x70\x6c");
  COMPARE(fcsel(s14, s15, s16, al), "\x66\x63\x73\x65\x6c\x20\x73\x31\x34\x2c\x20\x73\x31\x35\x2c\x20\x73\x31\x36\x2c\x20\x61\x6c");
  COMPARE(fcsel(d17, d18, d19, nv), "\x66\x63\x73\x65\x6c\x20\x64\x31\x37\x2c\x20\x64\x31\x38\x2c\x20\x64\x31\x39\x2c\x20\x6e\x76");

  CLEANUP();
}


TEST_(fcvt_scvtf_ucvtf) {
  SET_UP();

  COMPARE(fcvtas(w0, s1), "\x66\x63\x76\x74\x61\x73\x20\x77\x30\x2c\x20\x73\x31");
  COMPARE(fcvtas(x2, s3), "\x66\x63\x76\x74\x61\x73\x20\x78\x32\x2c\x20\x73\x33");
  COMPARE(fcvtas(w4, d5), "\x66\x63\x76\x74\x61\x73\x20\x77\x34\x2c\x20\x64\x35");
  COMPARE(fcvtas(x6, d7), "\x66\x63\x76\x74\x61\x73\x20\x78\x36\x2c\x20\x64\x37");
  COMPARE(fcvtau(w8, s9), "\x66\x63\x76\x74\x61\x75\x20\x77\x38\x2c\x20\x73\x39");
  COMPARE(fcvtau(x10, s11), "\x66\x63\x76\x74\x61\x75\x20\x78\x31\x30\x2c\x20\x73\x31\x31");
  COMPARE(fcvtau(w12, d13), "\x66\x63\x76\x74\x61\x75\x20\x77\x31\x32\x2c\x20\x64\x31\x33");
  COMPARE(fcvtau(x14, d15), "\x66\x63\x76\x74\x61\x75\x20\x78\x31\x34\x2c\x20\x64\x31\x35");
  COMPARE(fcvtns(w0, s1), "\x66\x63\x76\x74\x6e\x73\x20\x77\x30\x2c\x20\x73\x31");
  COMPARE(fcvtns(x2, s3), "\x66\x63\x76\x74\x6e\x73\x20\x78\x32\x2c\x20\x73\x33");
  COMPARE(fcvtns(w4, d5), "\x66\x63\x76\x74\x6e\x73\x20\x77\x34\x2c\x20\x64\x35");
  COMPARE(fcvtns(x6, d7), "\x66\x63\x76\x74\x6e\x73\x20\x78\x36\x2c\x20\x64\x37");
  COMPARE(fcvtnu(w8, s9), "\x66\x63\x76\x74\x6e\x75\x20\x77\x38\x2c\x20\x73\x39");
  COMPARE(fcvtnu(x10, s11), "\x66\x63\x76\x74\x6e\x75\x20\x78\x31\x30\x2c\x20\x73\x31\x31");
  COMPARE(fcvtnu(w12, d13), "\x66\x63\x76\x74\x6e\x75\x20\x77\x31\x32\x2c\x20\x64\x31\x33");
  COMPARE(fcvtnu(x14, d15), "\x66\x63\x76\x74\x6e\x75\x20\x78\x31\x34\x2c\x20\x64\x31\x35");
  COMPARE(fcvtzu(x16, d17), "\x66\x63\x76\x74\x7a\x75\x20\x78\x31\x36\x2c\x20\x64\x31\x37");
  COMPARE(fcvtzu(w18, d19), "\x66\x63\x76\x74\x7a\x75\x20\x77\x31\x38\x2c\x20\x64\x31\x39");
  COMPARE(fcvtzs(x20, d21), "\x66\x63\x76\x74\x7a\x73\x20\x78\x32\x30\x2c\x20\x64\x32\x31");
  COMPARE(fcvtzs(w22, d23), "\x66\x63\x76\x74\x7a\x73\x20\x77\x32\x32\x2c\x20\x64\x32\x33");
  COMPARE(fcvtzu(x16, s17), "\x66\x63\x76\x74\x7a\x75\x20\x78\x31\x36\x2c\x20\x73\x31\x37");
  COMPARE(fcvtzu(w18, s19), "\x66\x63\x76\x74\x7a\x75\x20\x77\x31\x38\x2c\x20\x73\x31\x39");
  COMPARE(fcvtzs(x20, s21), "\x66\x63\x76\x74\x7a\x73\x20\x78\x32\x30\x2c\x20\x73\x32\x31");
  COMPARE(fcvtzs(w22, s23), "\x66\x63\x76\x74\x7a\x73\x20\x77\x32\x32\x2c\x20\x73\x32\x33");
  COMPARE(scvtf(d24, w25), "\x73\x63\x76\x74\x66\x20\x64\x32\x34\x2c\x20\x77\x32\x35");
  COMPARE(scvtf(s24, w25), "\x73\x63\x76\x74\x66\x20\x73\x32\x34\x2c\x20\x77\x32\x35");
  COMPARE(scvtf(d26, x0), "\x73\x63\x76\x74\x66\x20\x64\x32\x36\x2c\x20\x78\x30");
  COMPARE(scvtf(s26, x0), "\x73\x63\x76\x74\x66\x20\x73\x32\x36\x2c\x20\x78\x30");
  COMPARE(ucvtf(d28, w29), "\x75\x63\x76\x74\x66\x20\x64\x32\x38\x2c\x20\x77\x32\x39");
  COMPARE(ucvtf(s28, w29), "\x75\x63\x76\x74\x66\x20\x73\x32\x38\x2c\x20\x77\x32\x39");
  COMPARE(ucvtf(d0, x1), "\x75\x63\x76\x74\x66\x20\x64\x30\x2c\x20\x78\x31");
  COMPARE(ucvtf(s0, x1), "\x75\x63\x76\x74\x66\x20\x73\x30\x2c\x20\x78\x31");
  COMPARE(ucvtf(d0, x1, 0), "\x75\x63\x76\x74\x66\x20\x64\x30\x2c\x20\x78\x31");
  COMPARE(ucvtf(s0, x1, 0), "\x75\x63\x76\x74\x66\x20\x73\x30\x2c\x20\x78\x31");
  COMPARE(scvtf(d1, x2, 1), "\x73\x63\x76\x74\x66\x20\x64\x31\x2c\x20\x78\x32\x2c\x20\x23\x31");
  COMPARE(scvtf(s1, x2, 1), "\x73\x63\x76\x74\x66\x20\x73\x31\x2c\x20\x78\x32\x2c\x20\x23\x31");
  COMPARE(scvtf(d3, x4, 15), "\x73\x63\x76\x74\x66\x20\x64\x33\x2c\x20\x78\x34\x2c\x20\x23\x31\x35");
  COMPARE(scvtf(s3, x4, 15), "\x73\x63\x76\x74\x66\x20\x73\x33\x2c\x20\x78\x34\x2c\x20\x23\x31\x35");
  COMPARE(scvtf(d5, x6, 32), "\x73\x63\x76\x74\x66\x20\x64\x35\x2c\x20\x78\x36\x2c\x20\x23\x33\x32");
  COMPARE(scvtf(s5, x6, 32), "\x73\x63\x76\x74\x66\x20\x73\x35\x2c\x20\x78\x36\x2c\x20\x23\x33\x32");
  COMPARE(ucvtf(d7, x8, 2), "\x75\x63\x76\x74\x66\x20\x64\x37\x2c\x20\x78\x38\x2c\x20\x23\x32");
  COMPARE(ucvtf(s7, x8, 2), "\x75\x63\x76\x74\x66\x20\x73\x37\x2c\x20\x78\x38\x2c\x20\x23\x32");
  COMPARE(ucvtf(d9, x10, 16), "\x75\x63\x76\x74\x66\x20\x64\x39\x2c\x20\x78\x31\x30\x2c\x20\x23\x31\x36");
  COMPARE(ucvtf(s9, x10, 16), "\x75\x63\x76\x74\x66\x20\x73\x39\x2c\x20\x78\x31\x30\x2c\x20\x23\x31\x36");
  COMPARE(ucvtf(d11, x12, 33), "\x75\x63\x76\x74\x66\x20\x64\x31\x31\x2c\x20\x78\x31\x32\x2c\x20\x23\x33\x33");
  COMPARE(ucvtf(s11, x12, 33), "\x75\x63\x76\x74\x66\x20\x73\x31\x31\x2c\x20\x78\x31\x32\x2c\x20\x23\x33\x33");
  COMPARE(fcvtms(w0, s1), "\x66\x63\x76\x74\x6d\x73\x20\x77\x30\x2c\x20\x73\x31");
  COMPARE(fcvtms(x2, s3), "\x66\x63\x76\x74\x6d\x73\x20\x78\x32\x2c\x20\x73\x33");
  COMPARE(fcvtms(w4, d5), "\x66\x63\x76\x74\x6d\x73\x20\x77\x34\x2c\x20\x64\x35");
  COMPARE(fcvtms(x6, d7), "\x66\x63\x76\x74\x6d\x73\x20\x78\x36\x2c\x20\x64\x37");
  COMPARE(fcvtmu(w8, s9), "\x66\x63\x76\x74\x6d\x75\x20\x77\x38\x2c\x20\x73\x39");
  COMPARE(fcvtmu(x10, s11), "\x66\x63\x76\x74\x6d\x75\x20\x78\x31\x30\x2c\x20\x73\x31\x31");
  COMPARE(fcvtmu(w12, d13), "\x66\x63\x76\x74\x6d\x75\x20\x77\x31\x32\x2c\x20\x64\x31\x33");
  COMPARE(fcvtmu(x14, d15), "\x66\x63\x76\x74\x6d\x75\x20\x78\x31\x34\x2c\x20\x64\x31\x35");

  CLEANUP();
}


TEST_(system_mrs) {
  SET_UP();

  COMPARE(mrs(x0, NZCV), "\x6d\x72\x73\x20\x78\x30\x2c\x20\x6e\x7a\x63\x76");
  COMPARE(mrs(lr, NZCV), "\x6d\x72\x73\x20\x6c\x72\x2c\x20\x6e\x7a\x63\x76");
  COMPARE(mrs(x15, FPCR), "\x6d\x72\x73\x20\x78\x31\x35\x2c\x20\x66\x70\x63\x72");

  CLEANUP();
}


TEST_(system_msr) {
  SET_UP();

  COMPARE(msr(NZCV, x0), "\x6d\x73\x72\x20\x6e\x7a\x63\x76\x2c\x20\x78\x30");
  COMPARE(msr(NZCV, x30), "\x6d\x73\x72\x20\x6e\x7a\x63\x76\x2c\x20\x6c\x72");
  COMPARE(msr(FPCR, x15), "\x6d\x73\x72\x20\x66\x70\x63\x72\x2c\x20\x78\x31\x35");

  CLEANUP();
}


TEST_(system_nop) {
  SET_UP();

  COMPARE(nop(), "\x6e\x6f\x70");

  CLEANUP();
}


TEST_(debug) {
  SET_UP();

  DCHECK(kImmExceptionIsDebug == 0xdeb0);

  // All debug codes should produce the same instruction, and the debug code
  // can be any uint32_t.
  COMPARE(debug("\x6d\x65\x73\x73\x61\x67\x65", 0, BREAK), "\x68\x6c\x74\x20\x23\x30\x78\x64\x65\x62\x30");
  COMPARE(debug("\x6d\x65\x73\x73\x61\x67\x65", 1, BREAK), "\x68\x6c\x74\x20\x23\x30\x78\x64\x65\x62\x30");
  COMPARE(debug("\x6d\x65\x73\x73\x61\x67\x65", 0xffff, BREAK), "\x68\x6c\x74\x20\x23\x30\x78\x64\x65\x62\x30");
  COMPARE(debug("\x6d\x65\x73\x73\x61\x67\x65", 0x10000, BREAK), "\x68\x6c\x74\x20\x23\x30\x78\x64\x65\x62\x30");
  COMPARE(debug("\x6d\x65\x73\x73\x61\x67\x65", 0x7fffffff, BREAK), "\x68\x6c\x74\x20\x23\x30\x78\x64\x65\x62\x30");
  COMPARE(debug("\x6d\x65\x73\x73\x61\x67\x65", 0x80000000u, BREAK), "\x68\x6c\x74\x20\x23\x30\x78\x64\x65\x62\x30");
  COMPARE(debug("\x6d\x65\x73\x73\x61\x67\x65", 0xffffffffu, BREAK), "\x68\x6c\x74\x20\x23\x30\x78\x64\x65\x62\x30");

  CLEANUP();
}


TEST_(hlt) {
  SET_UP();

  COMPARE(hlt(0), "\x68\x6c\x74\x20\x23\x30\x78\x30");
  COMPARE(hlt(1), "\x68\x6c\x74\x20\x23\x30\x78\x31");
  COMPARE(hlt(65535), "\x68\x6c\x74\x20\x23\x30\x78\x66\x66\x66\x66");

  CLEANUP();
}


TEST_(brk) {
  SET_UP();

  COMPARE(brk(0), "\x62\x72\x6b\x20\x23\x30\x78\x30");
  COMPARE(brk(1), "\x62\x72\x6b\x20\x23\x30\x78\x31");
  COMPARE(brk(65535), "\x62\x72\x6b\x20\x23\x30\x78\x66\x66\x66\x66");

  CLEANUP();
}


TEST_(add_sub_negative) {
  SET_UP_CLASS(MacroAssembler);

  COMPARE(Add(x10, x0, -42), "\x73\x75\x62\x20\x78\x31\x30\x2c\x20\x78\x30\x2c\x20\x23\x30\x78\x32\x61\x20\x28\x34\x32\x29");
  COMPARE(Add(x11, x1, -687), "\x73\x75\x62\x20\x78\x31\x31\x2c\x20\x78\x31\x2c\x20\x23\x30\x78\x32\x61\x66\x20\x28\x36\x38\x37\x29");
  COMPARE(Add(x12, x2, -0x88), "\x73\x75\x62\x20\x78\x31\x32\x2c\x20\x78\x32\x2c\x20\x23\x30\x78\x38\x38\x20\x28\x31\x33\x36\x29");

  COMPARE(Sub(x13, x0, -600), "\x61\x64\x64\x20\x78\x31\x33\x2c\x20\x78\x30\x2c\x20\x23\x30\x78\x32\x35\x38\x20\x28\x36\x30\x30\x29");
  COMPARE(Sub(x14, x1, -313), "\x61\x64\x64\x20\x78\x31\x34\x2c\x20\x78\x31\x2c\x20\x23\x30\x78\x31\x33\x39\x20\x28\x33\x31\x33\x29");
  COMPARE(Sub(x15, x2, -0x555), "\x61\x64\x64\x20\x78\x31\x35\x2c\x20\x78\x32\x2c\x20\x23\x30\x78\x35\x35\x35\x20\x28\x31\x33\x36\x35\x29");

  COMPARE(Add(w19, w3, -0x344), "\x73\x75\x62\x20\x77\x31\x39\x2c\x20\x77\x33\x2c\x20\x23\x30\x78\x33\x34\x34\x20\x28\x38\x33\x36\x29");
  COMPARE(Add(w20, w4, -2000), "\x73\x75\x62\x20\x77\x32\x30\x2c\x20\x77\x34\x2c\x20\x23\x30\x78\x37\x64\x30\x20\x28\x32\x30\x30\x30\x29");

  COMPARE(Sub(w21, w3, -0xbc), "\x61\x64\x64\x20\x77\x32\x31\x2c\x20\x77\x33\x2c\x20\x23\x30\x78\x62\x63\x20\x28\x31\x38\x38\x29");
  COMPARE(Sub(w22, w4, -2000), "\x61\x64\x64\x20\x77\x32\x32\x2c\x20\x77\x34\x2c\x20\x23\x30\x78\x37\x64\x30\x20\x28\x32\x30\x30\x30\x29");

  COMPARE(Cmp(w0, -1), "\x63\x6d\x6e\x20\x77\x30\x2c\x20\x23\x30\x78\x31\x20\x28\x31\x29");
  COMPARE(Cmp(x1, -1), "\x63\x6d\x6e\x20\x78\x31\x2c\x20\x23\x30\x78\x31\x20\x28\x31\x29");
  COMPARE(Cmp(w2, -4095), "\x63\x6d\x6e\x20\x77\x32\x2c\x20\x23\x30\x78\x66\x66\x66\x20\x28\x34\x30\x39\x35\x29");
  COMPARE(Cmp(x3, -4095), "\x63\x6d\x6e\x20\x78\x33\x2c\x20\x23\x30\x78\x66\x66\x66\x20\x28\x34\x30\x39\x35\x29");

  COMPARE(Cmn(w0, -1), "\x63\x6d\x70\x20\x77\x30\x2c\x20\x23\x30\x78\x31\x20\x28\x31\x29");
  COMPARE(Cmn(x1, -1), "\x63\x6d\x70\x20\x78\x31\x2c\x20\x23\x30\x78\x31\x20\x28\x31\x29");
  COMPARE(Cmn(w2, -4095), "\x63\x6d\x70\x20\x77\x32\x2c\x20\x23\x30\x78\x66\x66\x66\x20\x28\x34\x30\x39\x35\x29");
  COMPARE(Cmn(x3, -4095), "\x63\x6d\x70\x20\x78\x33\x2c\x20\x23\x30\x78\x66\x66\x66\x20\x28\x34\x30\x39\x35\x29");

  CLEANUP();
}


TEST_(logical_immediate_move) {
  SET_UP_CLASS(MacroAssembler);

  COMPARE(And(w0, w1, 0), "\x6d\x6f\x76\x7a\x20\x77\x30\x2c\x20\x23\x30\x78\x30");
  COMPARE(And(x0, x1, 0), "\x6d\x6f\x76\x7a\x20\x78\x30\x2c\x20\x23\x30\x78\x30");
  COMPARE(Orr(w2, w3, 0), "\x6d\x6f\x76\x20\x77\x32\x2c\x20\x77\x33");
  COMPARE(Orr(x2, x3, 0), "\x6d\x6f\x76\x20\x78\x32\x2c\x20\x78\x33");
  COMPARE(Eor(w4, w5, 0), "\x6d\x6f\x76\x20\x77\x34\x2c\x20\x77\x35");
  COMPARE(Eor(x4, x5, 0), "\x6d\x6f\x76\x20\x78\x34\x2c\x20\x78\x35");
  COMPARE(Bic(w6, w7, 0), "\x6d\x6f\x76\x20\x77\x36\x2c\x20\x77\x37");
  COMPARE(Bic(x6, x7, 0), "\x6d\x6f\x76\x20\x78\x36\x2c\x20\x78\x37");
  COMPARE(Orn(w8, w9, 0), "\x6d\x6f\x76\x6e\x20\x77\x38\x2c\x20\x23\x30\x78\x30");
  COMPARE(Orn(x8, x9, 0), "\x6d\x6f\x76\x6e\x20\x78\x38\x2c\x20\x23\x30\x78\x30");
  COMPARE(Eon(w10, w11, 0), "\x6d\x76\x6e\x20\x77\x31\x30\x2c\x20\x77\x31\x31");
  COMPARE(Eon(x10, x11, 0), "\x6d\x76\x6e\x20\x78\x31\x30\x2c\x20\x78\x31\x31");

  COMPARE(And(w12, w13, 0xffffffff), "\x6d\x6f\x76\x20\x77\x31\x32\x2c\x20\x77\x31\x33");
  COMPARE(And(x12, x13, 0xffffffff), "\x61\x6e\x64\x20\x78\x31\x32\x2c\x20\x78\x31\x33\x2c\x20\x23\x30\x78\x66\x66\x66\x66\x66\x66\x66\x66");
  COMPARE(And(x12, x13, 0xffffffffffffffff), "\x6d\x6f\x76\x20\x78\x31\x32\x2c\x20\x78\x31\x33");
  COMPARE(Orr(w14, w15, 0xffffffff), "\x6d\x6f\x76\x6e\x20\x77\x31\x34\x2c\x20\x23\x30\x78\x30");
  COMPARE(Orr(x14, x15, 0xffffffff), "\x6f\x72\x72\x20\x78\x31\x34\x2c\x20\x78\x31\x35\x2c\x20\x23\x30\x78\x66\x66\x66\x66\x66\x66\x66\x66");
  COMPARE(Orr(x14, x15, 0xffffffffffffffff), "\x6d\x6f\x76\x6e\x20\x78\x31\x34\x2c\x20\x23\x30\x78\x30");
  COMPARE(Eor(w16, w17, 0xffffffff), "\x6d\x76\x6e\x20\x77\x31\x36\x2c\x20\x77\x31\x37");
  COMPARE(Eor(x16, x17, 0xffffffff), "\x65\x6f\x72\x20\x78\x31\x36\x2c\x20\x78\x31\x37\x2c\x20\x23\x30\x78\x66\x66\x66\x66\x66\x66\x66\x66");
  COMPARE(Eor(x16, x17, 0xffffffffffffffff), "\x6d\x76\x6e\x20\x78\x31\x36\x2c\x20\x78\x31\x37");
  COMPARE(Bic(w18, w19, 0xffffffff), "\x6d\x6f\x76\x7a\x20\x77\x31\x38\x2c\x20\x23\x30\x78\x30");
  COMPARE(Bic(x18, x19, 0xffffffff), "\x61\x6e\x64\x20\x78\x31\x38\x2c\x20\x78\x31\x39\x2c\x20\x23\x30\x78\x66\x66\x66\x66\x66\x66\x66\x66\x30\x30\x30\x30\x30\x30\x30\x30");
  COMPARE(Bic(x18, x19, 0xffffffffffffffff), "\x6d\x6f\x76\x7a\x20\x78\x31\x38\x2c\x20\x23\x30\x78\x30");
  COMPARE(Orn(w20, w21, 0xffffffff), "\x6d\x6f\x76\x20\x77\x32\x30\x2c\x20\x77\x32\x31");
  COMPARE(Orn(x20, x21, 0xffffffff), "\x6f\x72\x72\x20\x78\x32\x30\x2c\x20\x78\x32\x31\x2c\x20\x23\x30\x78\x66\x66\x66\x66\x66\x66\x66\x66\x30\x30\x30\x30\x30\x30\x30\x30");
  COMPARE(Orn(x20, x21, 0xffffffffffffffff), "\x6d\x6f\x76\x20\x78\x32\x30\x2c\x20\x78\x32\x31");
  COMPARE(Eon(w22, w23, 0xffffffff), "\x6d\x6f\x76\x20\x77\x32\x32\x2c\x20\x77\x32\x33");
  COMPARE(Eon(x22, x23, 0xffffffff), "\x65\x6f\x72\x20\x78\x32\x32\x2c\x20\x78\x32\x33\x2c\x20\x23\x30\x78\x66\x66\x66\x66\x66\x66\x66\x66\x30\x30\x30\x30\x30\x30\x30\x30");
  COMPARE(Eon(x22, x23, 0xffffffffffffffff), "\x6d\x6f\x76\x20\x78\x32\x32\x2c\x20\x78\x32\x33");

  CLEANUP();
}


TEST_(barriers) {
  SET_UP_CLASS(MacroAssembler);

  // DMB
  COMPARE(Dmb(FullSystem, BarrierAll), "\x64\x6d\x62\x20\x73\x79");
  COMPARE(Dmb(FullSystem, BarrierReads), "\x64\x6d\x62\x20\x6c\x64");
  COMPARE(Dmb(FullSystem, BarrierWrites), "\x64\x6d\x62\x20\x73\x74");

  COMPARE(Dmb(InnerShareable, BarrierAll), "\x64\x6d\x62\x20\x69\x73\x68");
  COMPARE(Dmb(InnerShareable, BarrierReads), "\x64\x6d\x62\x20\x69\x73\x68\x6c\x64");
  COMPARE(Dmb(InnerShareable, BarrierWrites), "\x64\x6d\x62\x20\x69\x73\x68\x73\x74");

  COMPARE(Dmb(NonShareable, BarrierAll), "\x64\x6d\x62\x20\x6e\x73\x68");
  COMPARE(Dmb(NonShareable, BarrierReads), "\x64\x6d\x62\x20\x6e\x73\x68\x6c\x64");
  COMPARE(Dmb(NonShareable, BarrierWrites), "\x64\x6d\x62\x20\x6e\x73\x68\x73\x74");

  COMPARE(Dmb(OuterShareable, BarrierAll), "\x64\x6d\x62\x20\x6f\x73\x68");
  COMPARE(Dmb(OuterShareable, BarrierReads), "\x64\x6d\x62\x20\x6f\x73\x68\x6c\x64");
  COMPARE(Dmb(OuterShareable, BarrierWrites), "\x64\x6d\x62\x20\x6f\x73\x68\x73\x74");

  COMPARE(Dmb(FullSystem, BarrierOther), "\x64\x6d\x62\x20\x73\x79\x20\x28\x30\x62\x31\x31\x30\x30\x29");
  COMPARE(Dmb(InnerShareable, BarrierOther), "\x64\x6d\x62\x20\x73\x79\x20\x28\x30\x62\x31\x30\x30\x30\x29");
  COMPARE(Dmb(NonShareable, BarrierOther), "\x64\x6d\x62\x20\x73\x79\x20\x28\x30\x62\x30\x31\x30\x30\x29");
  COMPARE(Dmb(OuterShareable, BarrierOther), "\x64\x6d\x62\x20\x73\x79\x20\x28\x30\x62\x30\x30\x30\x30\x29");

  // DSB
  COMPARE(Dsb(FullSystem, BarrierAll), "\x64\x73\x62\x20\x73\x79");
  COMPARE(Dsb(FullSystem, BarrierReads), "\x64\x73\x62\x20\x6c\x64");
  COMPARE(Dsb(FullSystem, BarrierWrites), "\x64\x73\x62\x20\x73\x74");

  COMPARE(Dsb(InnerShareable, BarrierAll), "\x64\x73\x62\x20\x69\x73\x68");
  COMPARE(Dsb(InnerShareable, BarrierReads), "\x64\x73\x62\x20\x69\x73\x68\x6c\x64");
  COMPARE(Dsb(InnerShareable, BarrierWrites), "\x64\x73\x62\x20\x69\x73\x68\x73\x74");

  COMPARE(Dsb(NonShareable, BarrierAll), "\x64\x73\x62\x20\x6e\x73\x68");
  COMPARE(Dsb(NonShareable, BarrierReads), "\x64\x73\x62\x20\x6e\x73\x68\x6c\x64");
  COMPARE(Dsb(NonShareable, BarrierWrites), "\x64\x73\x62\x20\x6e\x73\x68\x73\x74");

  COMPARE(Dsb(OuterShareable, BarrierAll), "\x64\x73\x62\x20\x6f\x73\x68");
  COMPARE(Dsb(OuterShareable, BarrierReads), "\x64\x73\x62\x20\x6f\x73\x68\x6c\x64");
  COMPARE(Dsb(OuterShareable, BarrierWrites), "\x64\x73\x62\x20\x6f\x73\x68\x73\x74");

  COMPARE(Dsb(FullSystem, BarrierOther), "\x64\x73\x62\x20\x73\x79\x20\x28\x30\x62\x31\x31\x30\x30\x29");
  COMPARE(Dsb(InnerShareable, BarrierOther), "\x64\x73\x62\x20\x73\x79\x20\x28\x30\x62\x31\x30\x30\x30\x29");
  COMPARE(Dsb(NonShareable, BarrierOther), "\x64\x73\x62\x20\x73\x79\x20\x28\x30\x62\x30\x31\x30\x30\x29");
  COMPARE(Dsb(OuterShareable, BarrierOther), "\x64\x73\x62\x20\x73\x79\x20\x28\x30\x62\x30\x30\x30\x30\x29");

  // ISB
  COMPARE(Isb(), "\x69\x73\x62");

  CLEANUP();
}
