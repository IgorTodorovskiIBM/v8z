// Copyright 2011 the V8 project authors. All rights reserved.
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//
//     * Redistributions of source code must retain the above copyright
//       notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above
//       copyright notice, this list of conditions and the following
//       disclaimer in the documentation and/or other materials provided
//       with the distribution.
//     * Neither the name of Google Inc. nor the names of its
//       contributors may be used to endorse or promote products derived
//       from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//

#include <stdlib.h>

#include "src/v8.h"

#include "src/debug.h"
#include "src/disasm.h"
#include "src/disassembler.h"
#include "src/macro-assembler.h"
#include "src/serialize.h"
#include "test/cctest/cctest.h"

using namespace v8::internal;


bool DisassembleAndCompare(byte* pc, const char* compare_string) {
  disasm::NameConverter converter;
  disasm::Disassembler disasm(converter);
  EmbeddedVector<char, 128> disasm_buffer;

  disasm.InstructionDecode(disasm_buffer, pc);

  if (strcmp(compare_string, disasm_buffer.start()) != 0) {
    fprintf(stderr,
            "\x65\x78\x70\x65\x63\x74\x65\x64\x3a\x20\xa"
            "\x6c\xa2\xa"
            "\x64\x69\x73\x61\x73\x73\x65\x6d\x62\x6c\x65\x64\x3a\x20\xa"
            "\x6c\xa2\xa\xa",
            compare_string, disasm_buffer.start());
    return false;
  }
  return true;
}


// Set up V8 to a state where we can at least run the assembler and
// disassembler. Declare the variables and allocate the data structures used
// in the rest of the macros.
#define SET_UP()                                          \
  CcTest::InitializeVM();                                 \
  Isolate* isolate = CcTest::i_isolate();                  \
  HandleScope scope(isolate);                             \
  byte *buffer = reinterpret_cast<byte*>(malloc(4*1024)); \
  Assembler assm(isolate, buffer, 4*1024);                \
  bool failure = false;


// This macro assembles one instruction using the preallocated assembler and
// disassembles the generated instruction, comparing the output to the expected
// value. If the comparison fails an error message is printed, but the test
// continues to run until the end.
#define COMPARE(asm_, compare_string) \
  { \
    int pc_offset = assm.pc_offset(); \
    byte *progcounter = &buffer[pc_offset]; \
    assm.asm_; \
    if (!DisassembleAndCompare(progcounter, compare_string)) failure = true; \
  }

// Force emission of any pending literals into a pool.
#define EMIT_PENDING_LITERALS() \
  assm.CheckConstPool(true, false)


// Verify that all invocations of the COMPARE macro passed successfully.
// Exit with a failure if at least one of the tests failed.
#define VERIFY_RUN() \
if (failure) { \
    V8_Fatal(__FILE__, __LINE__, "\x41\x52\x4d\x20\x44\x69\x73\x61\x73\x73\x65\x6d\x62\x6c\x65\x72\x20\x74\x65\x73\x74\x73\x20\x66\x61\x69\x6c\x65\x64\x2e\xa"); \
  }


TEST(Type0) {
  SET_UP();

  COMPARE(and_(r0, r1, Operand(r2)),
          "\x65\x30\x30\x31\x30\x30\x30\x32\x20\x20\x20\x20\x20\x20\x20\x61\x6e\x64\x20\x72\x30\x2c\x20\x72\x31\x2c\x20\x72\x32");
  COMPARE(and_(r1, r2, Operand(r3), LeaveCC),
          "\x65\x30\x30\x32\x31\x30\x30\x33\x20\x20\x20\x20\x20\x20\x20\x61\x6e\x64\x20\x72\x31\x2c\x20\x72\x32\x2c\x20\x72\x33");
  COMPARE(and_(r2, r3, Operand(r4), SetCC),
          "\x65\x30\x31\x33\x32\x30\x30\x34\x20\x20\x20\x20\x20\x20\x20\x61\x6e\x64\x73\x20\x72\x32\x2c\x20\x72\x33\x2c\x20\x72\x34");
  COMPARE(and_(r3, r4, Operand(r5), LeaveCC, eq),
          "\x30\x30\x30\x34\x33\x30\x30\x35\x20\x20\x20\x20\x20\x20\x20\x61\x6e\x64\x65\x71\x20\x72\x33\x2c\x20\x72\x34\x2c\x20\x72\x35");

  COMPARE(eor(r4, r5, Operand(r6, LSL, 0)),
          "\x65\x30\x32\x35\x34\x30\x30\x36\x20\x20\x20\x20\x20\x20\x20\x65\x6f\x72\x20\x72\x34\x2c\x20\x72\x35\x2c\x20\x72\x36");
  COMPARE(eor(r4, r5, Operand(r7, LSL, 1), SetCC),
          "\x65\x30\x33\x35\x34\x30\x38\x37\x20\x20\x20\x20\x20\x20\x20\x65\x6f\x72\x73\x20\x72\x34\x2c\x20\x72\x35\x2c\x20\x72\x37\x2c\x20\x6c\x73\x6c\x20\x23\x31");
  COMPARE(eor(r4, r5, Operand(r8, LSL, 2), LeaveCC, ne),
          "\x31\x30\x32\x35\x34\x31\x30\x38\x20\x20\x20\x20\x20\x20\x20\x65\x6f\x72\x6e\x65\x20\x72\x34\x2c\x20\x72\x35\x2c\x20\x72\x38\x2c\x20\x6c\x73\x6c\x20\x23\x32");
  COMPARE(eor(r4, r5, Operand(r9, LSL, 3), SetCC, cs),
          "\x32\x30\x33\x35\x34\x31\x38\x39\x20\x20\x20\x20\x20\x20\x20\x65\x6f\x72\x63\x73\x73\x20\x72\x34\x2c\x20\x72\x35\x2c\x20\x72\x39\x2c\x20\x6c\x73\x6c\x20\x23\x33");

  COMPARE(sub(r5, r6, Operand(r10, LSL, 31), LeaveCC, hs),
          "\x32\x30\x34\x36\x35\x66\x38\x61\x20\x20\x20\x20\x20\x20\x20\x73\x75\x62\x63\x73\x20\x72\x35\x2c\x20\x72\x36\x2c\x20\x72\x31\x30\x2c\x20\x6c\x73\x6c\x20\x23\x33\x31");
  COMPARE(sub(r5, r6, Operand(r10, LSL, 30), SetCC, cc),
          "\x33\x30\x35\x36\x35\x66\x30\x61\x20\x20\x20\x20\x20\x20\x20\x73\x75\x62\x63\x63\x73\x20\x72\x35\x2c\x20\x72\x36\x2c\x20\x72\x31\x30\x2c\x20\x6c\x73\x6c\x20\x23\x33\x30");
  COMPARE(sub(r5, r6, Operand(r10, LSL, 24), LeaveCC, lo),
          "\x33\x30\x34\x36\x35\x63\x30\x61\x20\x20\x20\x20\x20\x20\x20\x73\x75\x62\x63\x63\x20\x72\x35\x2c\x20\x72\x36\x2c\x20\x72\x31\x30\x2c\x20\x6c\x73\x6c\x20\x23\x32\x34");
  COMPARE(sub(r5, r6, Operand(r10, LSL, 16), SetCC, mi),
          "\x34\x30\x35\x36\x35\x38\x30\x61\x20\x20\x20\x20\x20\x20\x20\x73\x75\x62\x6d\x69\x73\x20\x72\x35\x2c\x20\x72\x36\x2c\x20\x72\x31\x30\x2c\x20\x6c\x73\x6c\x20\x23\x31\x36");

  COMPARE(rsb(r6, r7, Operand(fp)),
          "\x65\x30\x36\x37\x36\x30\x30\x62\x20\x20\x20\x20\x20\x20\x20\x72\x73\x62\x20\x72\x36\x2c\x20\x72\x37\x2c\x20\x66\x70");
  COMPARE(rsb(r6, r7, Operand(fp, LSR, 1)),
          "\x65\x30\x36\x37\x36\x30\x61\x62\x20\x20\x20\x20\x20\x20\x20\x72\x73\x62\x20\x72\x36\x2c\x20\x72\x37\x2c\x20\x66\x70\x2c\x20\x6c\x73\x72\x20\x23\x31");
  COMPARE(rsb(r6, r7, Operand(fp, LSR, 0), SetCC),
          "\x65\x30\x37\x37\x36\x30\x32\x62\x20\x20\x20\x20\x20\x20\x20\x72\x73\x62\x73\x20\x72\x36\x2c\x20\x72\x37\x2c\x20\x66\x70\x2c\x20\x6c\x73\x72\x20\x23\x33\x32");
  COMPARE(rsb(r6, r7, Operand(fp, LSR, 31), LeaveCC, pl),
          "\x35\x30\x36\x37\x36\x66\x61\x62\x20\x20\x20\x20\x20\x20\x20\x72\x73\x62\x70\x6c\x20\x72\x36\x2c\x20\x72\x37\x2c\x20\x66\x70\x2c\x20\x6c\x73\x72\x20\x23\x33\x31");

  COMPARE(add(r7, r8, Operand(ip, ASR, 1)),
          "\x65\x30\x38\x38\x37\x30\x63\x63\x20\x20\x20\x20\x20\x20\x20\x61\x64\x64\x20\x72\x37\x2c\x20\x72\x38\x2c\x20\x69\x70\x2c\x20\x61\x73\x72\x20\x23\x31");
  COMPARE(add(r7, r8, Operand(ip, ASR, 0)),
          "\x65\x30\x38\x38\x37\x30\x34\x63\x20\x20\x20\x20\x20\x20\x20\x61\x64\x64\x20\x72\x37\x2c\x20\x72\x38\x2c\x20\x69\x70\x2c\x20\x61\x73\x72\x20\x23\x33\x32");
  COMPARE(add(r7, r8, Operand(ip), SetCC),
          "\x65\x30\x39\x38\x37\x30\x30\x63\x20\x20\x20\x20\x20\x20\x20\x61\x64\x64\x73\x20\x72\x37\x2c\x20\x72\x38\x2c\x20\x69\x70");
  COMPARE(add(r7, r8, Operand(ip, ASR, 31), SetCC, vs),
          "\x36\x30\x39\x38\x37\x66\x63\x63\x20\x20\x20\x20\x20\x20\x20\x61\x64\x64\x76\x73\x73\x20\x72\x37\x2c\x20\x72\x38\x2c\x20\x69\x70\x2c\x20\x61\x73\x72\x20\x23\x33\x31");

  COMPARE(adc(r7, fp, Operand(ip, ASR, 5)),
          "\x65\x30\x61\x62\x37\x32\x63\x63\x20\x20\x20\x20\x20\x20\x20\x61\x64\x63\x20\x72\x37\x2c\x20\x66\x70\x2c\x20\x69\x70\x2c\x20\x61\x73\x72\x20\x23\x35");
  COMPARE(adc(r4, ip, Operand(ip, ASR, 1), LeaveCC, vc),
          "\x37\x30\x61\x63\x34\x30\x63\x63\x20\x20\x20\x20\x20\x20\x20\x61\x64\x63\x76\x63\x20\x72\x34\x2c\x20\x69\x70\x2c\x20\x69\x70\x2c\x20\x61\x73\x72\x20\x23\x31");
  COMPARE(adc(r5, sp, Operand(ip), SetCC),
          "\x65\x30\x62\x64\x35\x30\x30\x63\x20\x20\x20\x20\x20\x20\x20\x61\x64\x63\x73\x20\x72\x35\x2c\x20\x73\x70\x2c\x20\x69\x70");
  COMPARE(adc(r8, lr, Operand(ip, ASR, 31), SetCC, vc),
          "\x37\x30\x62\x65\x38\x66\x63\x63\x20\x20\x20\x20\x20\x20\x20\x61\x64\x63\x76\x63\x73\x20\x72\x38\x2c\x20\x6c\x72\x2c\x20\x69\x70\x2c\x20\x61\x73\x72\x20\x23\x33\x31");

  COMPARE(sbc(r7, r1, Operand(ip, ROR, 1), LeaveCC, hi),
          "\x38\x30\x63\x31\x37\x30\x65\x63\x20\x20\x20\x20\x20\x20\x20\x73\x62\x63\x68\x69\x20\x72\x37\x2c\x20\x72\x31\x2c\x20\x69\x70\x2c\x20\x72\x6f\x72\x20\x23\x31");
  COMPARE(sbc(r7, r9, Operand(ip, ROR, 4)),
          "\x65\x30\x63\x39\x37\x32\x36\x63\x20\x20\x20\x20\x20\x20\x20\x73\x62\x63\x20\x72\x37\x2c\x20\x72\x39\x2c\x20\x69\x70\x2c\x20\x72\x6f\x72\x20\x23\x34");
  COMPARE(sbc(r7, r10, Operand(ip), SetCC),
          "\x65\x30\x64\x61\x37\x30\x30\x63\x20\x20\x20\x20\x20\x20\x20\x73\x62\x63\x73\x20\x72\x37\x2c\x20\x72\x31\x30\x2c\x20\x69\x70");
  COMPARE(sbc(r7, ip, Operand(ip, ROR, 31), SetCC, hi),
          "\x38\x30\x64\x63\x37\x66\x65\x63\x20\x20\x20\x20\x20\x20\x20\x73\x62\x63\x68\x69\x73\x20\x72\x37\x2c\x20\x69\x70\x2c\x20\x69\x70\x2c\x20\x72\x6f\x72\x20\x23\x33\x31");

  COMPARE(rsc(r7, r8, Operand(ip, LSL, r0)),
          "\x65\x30\x65\x38\x37\x30\x31\x63\x20\x20\x20\x20\x20\x20\x20\x72\x73\x63\x20\x72\x37\x2c\x20\x72\x38\x2c\x20\x69\x70\x2c\x20\x6c\x73\x6c\x20\x72\x30");
  COMPARE(rsc(r7, r8, Operand(ip, LSL, r1)),
          "\x65\x30\x65\x38\x37\x31\x31\x63\x20\x20\x20\x20\x20\x20\x20\x72\x73\x63\x20\x72\x37\x2c\x20\x72\x38\x2c\x20\x69\x70\x2c\x20\x6c\x73\x6c\x20\x72\x31");
  COMPARE(rsc(r7, r8, Operand(ip), SetCC),
          "\x65\x30\x66\x38\x37\x30\x30\x63\x20\x20\x20\x20\x20\x20\x20\x72\x73\x63\x73\x20\x72\x37\x2c\x20\x72\x38\x2c\x20\x69\x70");
  COMPARE(rsc(r7, r8, Operand(ip, LSL, r3), SetCC, ls),
          "\x39\x30\x66\x38\x37\x33\x31\x63\x20\x20\x20\x20\x20\x20\x20\x72\x73\x63\x6c\x73\x73\x20\x72\x37\x2c\x20\x72\x38\x2c\x20\x69\x70\x2c\x20\x6c\x73\x6c\x20\x72\x33");

  COMPARE(tst(r7, Operand(r5, ASR, ip), ge),
          "\x61\x31\x31\x37\x30\x63\x35\x35\x20\x20\x20\x20\x20\x20\x20\x74\x73\x74\x67\x65\x20\x72\x37\x2c\x20\x72\x35\x2c\x20\x61\x73\x72\x20\x69\x70");
  COMPARE(tst(r7, Operand(r6, ASR, sp)),
          "\x65\x31\x31\x37\x30\x64\x35\x36\x20\x20\x20\x20\x20\x20\x20\x74\x73\x74\x20\x72\x37\x2c\x20\x72\x36\x2c\x20\x61\x73\x72\x20\x73\x70");
  COMPARE(tst(r7, Operand(r7), ge),
          "\x61\x31\x31\x37\x30\x30\x30\x37\x20\x20\x20\x20\x20\x20\x20\x74\x73\x74\x67\x65\x20\x72\x37\x2c\x20\x72\x37");
  COMPARE(tst(r7, Operand(r8, ASR, fp), ge),
          "\x61\x31\x31\x37\x30\x62\x35\x38\x20\x20\x20\x20\x20\x20\x20\x74\x73\x74\x67\x65\x20\x72\x37\x2c\x20\x72\x38\x2c\x20\x61\x73\x72\x20\x66\x70");

  COMPARE(teq(r7, Operand(r5, ROR, r0), lt),
          "\x62\x31\x33\x37\x30\x30\x37\x35\x20\x20\x20\x20\x20\x20\x20\x74\x65\x71\x6c\x74\x20\x72\x37\x2c\x20\x72\x35\x2c\x20\x72\x6f\x72\x20\x72\x30");
  COMPARE(teq(r7, Operand(r6, ROR, lr)),
          "\x65\x31\x33\x37\x30\x65\x37\x36\x20\x20\x20\x20\x20\x20\x20\x74\x65\x71\x20\x72\x37\x2c\x20\x72\x36\x2c\x20\x72\x6f\x72\x20\x6c\x72");
  COMPARE(teq(r7, Operand(r7), lt),
          "\x62\x31\x33\x37\x30\x30\x30\x37\x20\x20\x20\x20\x20\x20\x20\x74\x65\x71\x6c\x74\x20\x72\x37\x2c\x20\x72\x37");
  COMPARE(teq(r7, Operand(r8, ROR, r1)),
          "\x65\x31\x33\x37\x30\x31\x37\x38\x20\x20\x20\x20\x20\x20\x20\x74\x65\x71\x20\x72\x37\x2c\x20\x72\x38\x2c\x20\x72\x6f\x72\x20\x72\x31");

  COMPARE(cmp(r7, Operand(r4)),
          "\x65\x31\x35\x37\x30\x30\x30\x34\x20\x20\x20\x20\x20\x20\x20\x63\x6d\x70\x20\x72\x37\x2c\x20\x72\x34");
  COMPARE(cmp(r7, Operand(r6, LSL, 1), gt),
          "\x63\x31\x35\x37\x30\x30\x38\x36\x20\x20\x20\x20\x20\x20\x20\x63\x6d\x70\x67\x74\x20\x72\x37\x2c\x20\x72\x36\x2c\x20\x6c\x73\x6c\x20\x23\x31");
  COMPARE(cmp(r7, Operand(r8, LSR, 3), gt),
          "\x63\x31\x35\x37\x30\x31\x61\x38\x20\x20\x20\x20\x20\x20\x20\x63\x6d\x70\x67\x74\x20\x72\x37\x2c\x20\x72\x38\x2c\x20\x6c\x73\x72\x20\x23\x33");
  COMPARE(cmp(r7, Operand(r8, ASR, 19)),
          "\x65\x31\x35\x37\x30\x39\x63\x38\x20\x20\x20\x20\x20\x20\x20\x63\x6d\x70\x20\x72\x37\x2c\x20\x72\x38\x2c\x20\x61\x73\x72\x20\x23\x31\x39");

  COMPARE(cmn(r0, Operand(r4)),
          "\x65\x31\x37\x30\x30\x30\x30\x34\x20\x20\x20\x20\x20\x20\x20\x63\x6d\x6e\x20\x72\x30\x2c\x20\x72\x34");
  COMPARE(cmn(r1, Operand(r6, ROR, 1)),
          "\x65\x31\x37\x31\x30\x30\x65\x36\x20\x20\x20\x20\x20\x20\x20\x63\x6d\x6e\x20\x72\x31\x2c\x20\x72\x36\x2c\x20\x72\x6f\x72\x20\x23\x31");
  COMPARE(cmn(r2, Operand(r8)),
          "\x65\x31\x37\x32\x30\x30\x30\x38\x20\x20\x20\x20\x20\x20\x20\x63\x6d\x6e\x20\x72\x32\x2c\x20\x72\x38");
  COMPARE(cmn(r3, Operand(fp), le),
          "\x64\x31\x37\x33\x30\x30\x30\x62\x20\x20\x20\x20\x20\x20\x20\x63\x6d\x6e\x6c\x65\x20\x72\x33\x2c\x20\x66\x70");

  COMPARE(orr(r7, r8, Operand(lr), LeaveCC, al),
          "\x65\x31\x38\x38\x37\x30\x30\x65\x20\x20\x20\x20\x20\x20\x20\x6f\x72\x72\x20\x72\x37\x2c\x20\x72\x38\x2c\x20\x6c\x72");
  COMPARE(orr(r7, r8, Operand(fp)),
          "\x65\x31\x38\x38\x37\x30\x30\x62\x20\x20\x20\x20\x20\x20\x20\x6f\x72\x72\x20\x72\x37\x2c\x20\x72\x38\x2c\x20\x66\x70");
  COMPARE(orr(r7, r8, Operand(sp), SetCC),
          "\x65\x31\x39\x38\x37\x30\x30\x64\x20\x20\x20\x20\x20\x20\x20\x6f\x72\x72\x73\x20\x72\x37\x2c\x20\x72\x38\x2c\x20\x73\x70");
  COMPARE(orr(r7, r8, Operand(ip), SetCC, al),
          "\x65\x31\x39\x38\x37\x30\x30\x63\x20\x20\x20\x20\x20\x20\x20\x6f\x72\x72\x73\x20\x72\x37\x2c\x20\x72\x38\x2c\x20\x69\x70");

  COMPARE(mov(r0, Operand(r1), LeaveCC, eq),
          "\x30\x31\x61\x30\x30\x30\x30\x31\x20\x20\x20\x20\x20\x20\x20\x6d\x6f\x76\x65\x71\x20\x72\x30\x2c\x20\x72\x31");
  COMPARE(mov(r0, Operand(r2)),
          "\x65\x31\x61\x30\x30\x30\x30\x32\x20\x20\x20\x20\x20\x20\x20\x6d\x6f\x76\x20\x72\x30\x2c\x20\x72\x32");
  COMPARE(mov(r0, Operand(r3), SetCC),
          "\x65\x31\x62\x30\x30\x30\x30\x33\x20\x20\x20\x20\x20\x20\x20\x6d\x6f\x76\x73\x20\x72\x30\x2c\x20\x72\x33");
  COMPARE(mov(r0, Operand(r4), SetCC, pl),
          "\x35\x31\x62\x30\x30\x30\x30\x34\x20\x20\x20\x20\x20\x20\x20\x6d\x6f\x76\x70\x6c\x73\x20\x72\x30\x2c\x20\x72\x34");

  COMPARE(bic(r0, lr, Operand(r1), LeaveCC, vs),
          "\x36\x31\x63\x65\x30\x30\x30\x31\x20\x20\x20\x20\x20\x20\x20\x62\x69\x63\x76\x73\x20\x72\x30\x2c\x20\x6c\x72\x2c\x20\x72\x31");
  COMPARE(bic(r0, r9, Operand(r2), LeaveCC, vc),
          "\x37\x31\x63\x39\x30\x30\x30\x32\x20\x20\x20\x20\x20\x20\x20\x62\x69\x63\x76\x63\x20\x72\x30\x2c\x20\x72\x39\x2c\x20\x72\x32");
  COMPARE(bic(r0, r5, Operand(r3), SetCC),
          "\x65\x31\x64\x35\x30\x30\x30\x33\x20\x20\x20\x20\x20\x20\x20\x62\x69\x63\x73\x20\x72\x30\x2c\x20\x72\x35\x2c\x20\x72\x33");
  COMPARE(bic(r0, r1, Operand(r4), SetCC, pl),
          "\x35\x31\x64\x31\x30\x30\x30\x34\x20\x20\x20\x20\x20\x20\x20\x62\x69\x63\x70\x6c\x73\x20\x72\x30\x2c\x20\x72\x31\x2c\x20\x72\x34");

  COMPARE(mvn(r10, Operand(r1)),
          "\x65\x31\x65\x30\x61\x30\x30\x31\x20\x20\x20\x20\x20\x20\x20\x6d\x76\x6e\x20\x72\x31\x30\x2c\x20\x72\x31");
  COMPARE(mvn(r9, Operand(r2)),
          "\x65\x31\x65\x30\x39\x30\x30\x32\x20\x20\x20\x20\x20\x20\x20\x6d\x76\x6e\x20\x72\x39\x2c\x20\x72\x32");
  COMPARE(mvn(r0, Operand(r3), SetCC),
          "\x65\x31\x66\x30\x30\x30\x30\x33\x20\x20\x20\x20\x20\x20\x20\x6d\x76\x6e\x73\x20\x72\x30\x2c\x20\x72\x33");
  COMPARE(mvn(r5, Operand(r4), SetCC, cc),
          "\x33\x31\x66\x30\x35\x30\x30\x34\x20\x20\x20\x20\x20\x20\x20\x6d\x76\x6e\x63\x63\x73\x20\x72\x35\x2c\x20\x72\x34");

  // Instructions autotransformed by the assembler.
  // mov -> mvn.
  COMPARE(mov(r3, Operand(-1), LeaveCC, al),
          "\x65\x33\x65\x30\x33\x30\x30\x30\x20\x20\x20\x20\x20\x20\x20\x6d\x76\x6e\x20\x72\x33\x2c\x20\x23\x30");
  COMPARE(mov(r4, Operand(-2), SetCC, al),
          "\x65\x33\x66\x30\x34\x30\x30\x31\x20\x20\x20\x20\x20\x20\x20\x6d\x76\x6e\x73\x20\x72\x34\x2c\x20\x23\x31");
  COMPARE(mov(r5, Operand(0x0ffffff0), SetCC, ne),
          "\x31\x33\x66\x30\x35\x32\x66\x66\x20\x20\x20\x20\x20\x20\x20\x6d\x76\x6e\x6e\x65\x73\x20\x72\x35\x2c\x20\x23\x2d\x32\x36\x38\x34\x33\x35\x34\x34\x31");
  COMPARE(mov(r6, Operand(-1), LeaveCC, ne),
          "\x31\x33\x65\x30\x36\x30\x30\x30\x20\x20\x20\x20\x20\x20\x20\x6d\x76\x6e\x6e\x65\x20\x72\x36\x2c\x20\x23\x30");

  // mvn -> mov.
  COMPARE(mvn(r3, Operand(-1), LeaveCC, al),
          "\x65\x33\x61\x30\x33\x30\x30\x30\x20\x20\x20\x20\x20\x20\x20\x6d\x6f\x76\x20\x72\x33\x2c\x20\x23\x30");
  COMPARE(mvn(r4, Operand(-2), SetCC, al),
          "\x65\x33\x62\x30\x34\x30\x30\x31\x20\x20\x20\x20\x20\x20\x20\x6d\x6f\x76\x73\x20\x72\x34\x2c\x20\x23\x31");
  COMPARE(mvn(r5, Operand(0x0ffffff0), SetCC, ne),
          "\x31\x33\x62\x30\x35\x32\x66\x66\x20\x20\x20\x20\x20\x20\x20\x6d\x6f\x76\x6e\x65\x73\x20\x72\x35\x2c\x20\x23\x2d\x32\x36\x38\x34\x33\x35\x34\x34\x31");
  COMPARE(mvn(r6, Operand(-1), LeaveCC, ne),
          "\x31\x33\x61\x30\x36\x30\x30\x30\x20\x20\x20\x20\x20\x20\x20\x6d\x6f\x76\x6e\x65\x20\x72\x36\x2c\x20\x23\x30");

  // mov -> movw.
  if (CpuFeatures::IsSupported(ARMv7)) {
    COMPARE(mov(r5, Operand(0x01234), LeaveCC, ne),
            "\x31\x33\x30\x31\x35\x32\x33\x34\x20\x20\x20\x20\x20\x20\x20\x6d\x6f\x76\x77\x6e\x65\x20\x72\x35\x2c\x20\x23\x34\x36\x36\x30");
    // We only disassemble one instruction so the eor instruction is not here.
    COMPARE(eor(r5, r4, Operand(0x1234), LeaveCC, ne),
            "\x31\x33\x30\x31\x63\x32\x33\x34\x20\x20\x20\x20\x20\x20\x20\x6d\x6f\x76\x77\x6e\x65\x20\x69\x70\x2c\x20\x23\x34\x36\x36\x30");
    // Movw can't do setcc, so first move to ip, then the following instruction
    // moves to r5.  Mov immediate with setcc is pretty strange anyway.
    COMPARE(mov(r5, Operand(0x01234), SetCC, ne),
            "\x31\x33\x30\x31\x63\x32\x33\x34\x20\x20\x20\x20\x20\x20\x20\x6d\x6f\x76\x77\x6e\x65\x20\x69\x70\x2c\x20\x23\x34\x36\x36\x30");
    // Emit a literal pool now, otherwise this could be dumped later, in the
    // middle of a different test.
    EMIT_PENDING_LITERALS();

    // We only disassemble one instruction so the eor instruction is not here.
    // The eor does the setcc so we get a movw here.
    COMPARE(eor(r5, r4, Operand(0x1234), SetCC, ne),
            "\x31\x33\x30\x31\x63\x32\x33\x34\x20\x20\x20\x20\x20\x20\x20\x6d\x6f\x76\x77\x6e\x65\x20\x69\x70\x2c\x20\x23\x34\x36\x36\x30");

    COMPARE(movt(r5, 0x4321, ne),
            "\x31\x33\x34\x34\x35\x33\x32\x31\x20\x20\x20\x20\x20\x20\x20\x6d\x6f\x76\x74\x6e\x65\x20\x72\x35\x2c\x20\x23\x31\x37\x31\x38\x35");
    COMPARE(movw(r5, 0xabcd, eq),
            "\x30\x33\x30\x61\x35\x62\x63\x64\x20\x20\x20\x20\x20\x20\x20\x6d\x6f\x76\x77\x65\x71\x20\x72\x35\x2c\x20\x23\x34\x33\x39\x38\x31");
  }

  // Eor doesn't have an eor-negative variant, but we can do an mvn followed by
  // an eor to get the same effect.
  COMPARE(eor(r5, r4, Operand(0xffffff34), SetCC, ne),
          "\x31\x33\x65\x30\x63\x30\x63\x62\x20\x20\x20\x20\x20\x20\x20\x6d\x76\x6e\x6e\x65\x20\x69\x70\x2c\x20\x23\x32\x30\x33");

  // and <-> bic.
  COMPARE(and_(r3, r5, Operand(0xfc03ffff)),
          "\x65\x33\x63\x35\x33\x37\x66\x66\x20\x20\x20\x20\x20\x20\x20\x62\x69\x63\x20\x72\x33\x2c\x20\x72\x35\x2c\x20\x23\x36\x36\x38\x34\x36\x37\x32\x30");
  COMPARE(bic(r3, r5, Operand(0xfc03ffff)),
          "\x65\x32\x30\x35\x33\x37\x66\x66\x20\x20\x20\x20\x20\x20\x20\x61\x6e\x64\x20\x72\x33\x2c\x20\x72\x35\x2c\x20\x23\x36\x36\x38\x34\x36\x37\x32\x30");

  // sub <-> add.
  COMPARE(add(r3, r5, Operand(-1024)),
          "\x65\x32\x34\x35\x33\x62\x30\x31\x20\x20\x20\x20\x20\x20\x20\x73\x75\x62\x20\x72\x33\x2c\x20\x72\x35\x2c\x20\x23\x31\x30\x32\x34");
  COMPARE(sub(r3, r5, Operand(-1024)),
          "\x65\x32\x38\x35\x33\x62\x30\x31\x20\x20\x20\x20\x20\x20\x20\x61\x64\x64\x20\x72\x33\x2c\x20\x72\x35\x2c\x20\x23\x31\x30\x32\x34");

  // cmp <-> cmn.
  COMPARE(cmp(r3, Operand(-1024)),
          "\x65\x33\x37\x33\x30\x62\x30\x31\x20\x20\x20\x20\x20\x20\x20\x63\x6d\x6e\x20\x72\x33\x2c\x20\x23\x31\x30\x32\x34");
  COMPARE(cmn(r3, Operand(-1024)),
          "\x65\x33\x35\x33\x30\x62\x30\x31\x20\x20\x20\x20\x20\x20\x20\x63\x6d\x70\x20\x72\x33\x2c\x20\x23\x31\x30\x32\x34");

  // Miscellaneous instructions encoded as type 0.
  COMPARE(blx(ip),
          "\x65\x31\x32\x66\x66\x66\x33\x63\x20\x20\x20\x20\x20\x20\x20\x62\x6c\x78\x20\x69\x70");
  COMPARE(bkpt(0),
          "\x65\x31\x32\x30\x30\x30\x37\x30\x20\x20\x20\x20\x20\x20\x20\x62\x6b\x70\x74\x20\x30");
  COMPARE(bkpt(0xffff),
          "\x65\x31\x32\x66\x66\x66\x37\x66\x20\x20\x20\x20\x20\x20\x20\x62\x6b\x70\x74\x20\x36\x35\x35\x33\x35");
  COMPARE(clz(r6, r7),
          "\x65\x31\x36\x66\x36\x66\x31\x37\x20\x20\x20\x20\x20\x20\x20\x63\x6c\x7a\x20\x72\x36\x2c\x20\x72\x37");

  VERIFY_RUN();
}


TEST(Type1) {
  SET_UP();

  COMPARE(and_(r0, r1, Operand(0x00000000)),
          "\x65\x32\x30\x31\x30\x30\x30\x30\x20\x20\x20\x20\x20\x20\x20\x61\x6e\x64\x20\x72\x30\x2c\x20\x72\x31\x2c\x20\x23\x30");
  COMPARE(and_(r1, r2, Operand(0x00000001), LeaveCC),
          "\x65\x32\x30\x32\x31\x30\x30\x31\x20\x20\x20\x20\x20\x20\x20\x61\x6e\x64\x20\x72\x31\x2c\x20\x72\x32\x2c\x20\x23\x31");
  COMPARE(and_(r2, r3, Operand(0x00000010), SetCC),
          "\x65\x32\x31\x33\x32\x30\x31\x30\x20\x20\x20\x20\x20\x20\x20\x61\x6e\x64\x73\x20\x72\x32\x2c\x20\x72\x33\x2c\x20\x23\x31\x36");
  COMPARE(and_(r3, r4, Operand(0x00000100), LeaveCC, eq),
          "\x30\x32\x30\x34\x33\x63\x30\x31\x20\x20\x20\x20\x20\x20\x20\x61\x6e\x64\x65\x71\x20\x72\x33\x2c\x20\x72\x34\x2c\x20\x23\x32\x35\x36");
  COMPARE(and_(r4, r5, Operand(0x00001000), SetCC, ne),
          "\x31\x32\x31\x35\x34\x61\x30\x31\x20\x20\x20\x20\x20\x20\x20\x61\x6e\x64\x6e\x65\x73\x20\x72\x34\x2c\x20\x72\x35\x2c\x20\x23\x34\x30\x39\x36");

  COMPARE(eor(r4, r5, Operand(0x00001000)),
          "\x65\x32\x32\x35\x34\x61\x30\x31\x20\x20\x20\x20\x20\x20\x20\x65\x6f\x72\x20\x72\x34\x2c\x20\x72\x35\x2c\x20\x23\x34\x30\x39\x36");
  COMPARE(eor(r4, r4, Operand(0x00010000), LeaveCC),
          "\x65\x32\x32\x34\x34\x38\x30\x31\x20\x20\x20\x20\x20\x20\x20\x65\x6f\x72\x20\x72\x34\x2c\x20\x72\x34\x2c\x20\x23\x36\x35\x35\x33\x36");
  COMPARE(eor(r4, r3, Operand(0x00100000), SetCC),
          "\x65\x32\x33\x33\x34\x36\x30\x31\x20\x20\x20\x20\x20\x20\x20\x65\x6f\x72\x73\x20\x72\x34\x2c\x20\x72\x33\x2c\x20\x23\x31\x30\x34\x38\x35\x37\x36");
  COMPARE(eor(r4, r2, Operand(0x01000000), LeaveCC, cs),
          "\x32\x32\x32\x32\x34\x34\x30\x31\x20\x20\x20\x20\x20\x20\x20\x65\x6f\x72\x63\x73\x20\x72\x34\x2c\x20\x72\x32\x2c\x20\x23\x31\x36\x37\x37\x37\x32\x31\x36");
  COMPARE(eor(r4, r1, Operand(0x10000000), SetCC, cc),
          "\x33\x32\x33\x31\x34\x32\x30\x31\x20\x20\x20\x20\x20\x20\x20\x65\x6f\x72\x63\x63\x73\x20\x72\x34\x2c\x20\x72\x31\x2c\x20\x23\x32\x36\x38\x34\x33\x35\x34\x35\x36");

  VERIFY_RUN();
}


TEST(Type3) {
  SET_UP();

  if (CpuFeatures::IsSupported(ARMv7)) {
    COMPARE(ubfx(r0, r1, 5, 10),
            "\x65\x37\x65\x39\x30\x32\x64\x31\x20\x20\x20\x20\x20\x20\x20\x75\x62\x66\x78\x20\x72\x30\x2c\x20\x72\x31\x2c\x20\x23\x35\x2c\x20\x23\x31\x30");
    COMPARE(ubfx(r1, r0, 5, 10),
            "\x65\x37\x65\x39\x31\x32\x64\x30\x20\x20\x20\x20\x20\x20\x20\x75\x62\x66\x78\x20\x72\x31\x2c\x20\x72\x30\x2c\x20\x23\x35\x2c\x20\x23\x31\x30");
    COMPARE(ubfx(r0, r1, 31, 1),
            "\x65\x37\x65\x30\x30\x66\x64\x31\x20\x20\x20\x20\x20\x20\x20\x75\x62\x66\x78\x20\x72\x30\x2c\x20\x72\x31\x2c\x20\x23\x33\x31\x2c\x20\x23\x31");
    COMPARE(ubfx(r1, r0, 31, 1),
            "\x65\x37\x65\x30\x31\x66\x64\x30\x20\x20\x20\x20\x20\x20\x20\x75\x62\x66\x78\x20\x72\x31\x2c\x20\x72\x30\x2c\x20\x23\x33\x31\x2c\x20\x23\x31");

    COMPARE(sbfx(r0, r1, 5, 10),
            "\x65\x37\x61\x39\x30\x32\x64\x31\x20\x20\x20\x20\x20\x20\x20\x73\x62\x66\x78\x20\x72\x30\x2c\x20\x72\x31\x2c\x20\x23\x35\x2c\x20\x23\x31\x30");
    COMPARE(sbfx(r1, r0, 5, 10),
            "\x65\x37\x61\x39\x31\x32\x64\x30\x20\x20\x20\x20\x20\x20\x20\x73\x62\x66\x78\x20\x72\x31\x2c\x20\x72\x30\x2c\x20\x23\x35\x2c\x20\x23\x31\x30");
    COMPARE(sbfx(r0, r1, 31, 1),
            "\x65\x37\x61\x30\x30\x66\x64\x31\x20\x20\x20\x20\x20\x20\x20\x73\x62\x66\x78\x20\x72\x30\x2c\x20\x72\x31\x2c\x20\x23\x33\x31\x2c\x20\x23\x31");
    COMPARE(sbfx(r1, r0, 31, 1),
            "\x65\x37\x61\x30\x31\x66\x64\x30\x20\x20\x20\x20\x20\x20\x20\x73\x62\x66\x78\x20\x72\x31\x2c\x20\x72\x30\x2c\x20\x23\x33\x31\x2c\x20\x23\x31");

    COMPARE(bfc(r0, 5, 10),
            "\x65\x37\x63\x65\x30\x32\x39\x66\x20\x20\x20\x20\x20\x20\x20\x62\x66\x63\x20\x72\x30\x2c\x20\x23\x35\x2c\x20\x23\x31\x30");
    COMPARE(bfc(r1, 5, 10),
            "\x65\x37\x63\x65\x31\x32\x39\x66\x20\x20\x20\x20\x20\x20\x20\x62\x66\x63\x20\x72\x31\x2c\x20\x23\x35\x2c\x20\x23\x31\x30");
    COMPARE(bfc(r0, 31, 1),
            "\x65\x37\x64\x66\x30\x66\x39\x66\x20\x20\x20\x20\x20\x20\x20\x62\x66\x63\x20\x72\x30\x2c\x20\x23\x33\x31\x2c\x20\x23\x31");
    COMPARE(bfc(r1, 31, 1),
            "\x65\x37\x64\x66\x31\x66\x39\x66\x20\x20\x20\x20\x20\x20\x20\x62\x66\x63\x20\x72\x31\x2c\x20\x23\x33\x31\x2c\x20\x23\x31");

    COMPARE(bfi(r0, r1, 5, 10),
            "\x65\x37\x63\x65\x30\x32\x39\x31\x20\x20\x20\x20\x20\x20\x20\x62\x66\x69\x20\x72\x30\x2c\x20\x72\x31\x2c\x20\x23\x35\x2c\x20\x23\x31\x30");
    COMPARE(bfi(r1, r0, 5, 10),
            "\x65\x37\x63\x65\x31\x32\x39\x30\x20\x20\x20\x20\x20\x20\x20\x62\x66\x69\x20\x72\x31\x2c\x20\x72\x30\x2c\x20\x23\x35\x2c\x20\x23\x31\x30");
    COMPARE(bfi(r0, r1, 31, 1),
            "\x65\x37\x64\x66\x30\x66\x39\x31\x20\x20\x20\x20\x20\x20\x20\x62\x66\x69\x20\x72\x30\x2c\x20\x72\x31\x2c\x20\x23\x33\x31\x2c\x20\x23\x31");
    COMPARE(bfi(r1, r0, 31, 1),
            "\x65\x37\x64\x66\x31\x66\x39\x30\x20\x20\x20\x20\x20\x20\x20\x62\x66\x69\x20\x72\x31\x2c\x20\x72\x30\x2c\x20\x23\x33\x31\x2c\x20\x23\x31");

    COMPARE(usat(r0, 1, Operand(r1)),
            "\x65\x36\x65\x31\x30\x30\x31\x31\x20\x20\x20\x20\x20\x20\x20\x75\x73\x61\x74\x20\x72\x30\x2c\x20\x23\x31\x2c\x20\x72\x31");
    COMPARE(usat(r2, 7, Operand(lr)),
            "\x65\x36\x65\x37\x32\x30\x31\x65\x20\x20\x20\x20\x20\x20\x20\x75\x73\x61\x74\x20\x72\x32\x2c\x20\x23\x37\x2c\x20\x6c\x72");
    COMPARE(usat(r3, 31, Operand(r4, LSL, 31)),
            "\x65\x36\x66\x66\x33\x66\x39\x34\x20\x20\x20\x20\x20\x20\x20\x75\x73\x61\x74\x20\x72\x33\x2c\x20\x23\x33\x31\x2c\x20\x72\x34\x2c\x20\x6c\x73\x6c\x20\x23\x33\x31");
    COMPARE(usat(r8, 0, Operand(r5, ASR, 17)),
            "\x65\x36\x65\x30\x38\x38\x64\x35\x20\x20\x20\x20\x20\x20\x20\x75\x73\x61\x74\x20\x72\x38\x2c\x20\x23\x30\x2c\x20\x72\x35\x2c\x20\x61\x73\x72\x20\x23\x31\x37");

    COMPARE(pkhbt(r3, r4, Operand(r5, LSL, 17)),
            "\x65\x36\x38\x34\x33\x38\x39\x35\x20\x20\x20\x20\x20\x20\x20\x70\x6b\x68\x62\x74\x20\x72\x33\x2c\x20\x72\x34\x2c\x20\x72\x35\x2c\x20\x6c\x73\x6c\x20\x23\x31\x37");
    COMPARE(pkhtb(r3, r4, Operand(r5, ASR, 17)),
            "\x65\x36\x38\x34\x33\x38\x64\x35\x20\x20\x20\x20\x20\x20\x20\x70\x6b\x68\x74\x62\x20\x72\x33\x2c\x20\x72\x34\x2c\x20\x72\x35\x2c\x20\x61\x73\x72\x20\x23\x31\x37");
    COMPARE(uxtb(r9, Operand(r10, ROR, 0)),
            "\x65\x36\x65\x66\x39\x30\x37\x61\x20\x20\x20\x20\x20\x20\x20\x75\x78\x74\x62\x20\x72\x39\x2c\x20\x72\x31\x30");
    COMPARE(uxtb(r3, Operand(r4, ROR, 8)),
            "\x65\x36\x65\x66\x33\x34\x37\x34\x20\x20\x20\x20\x20\x20\x20\x75\x78\x74\x62\x20\x72\x33\x2c\x20\x72\x34\x2c\x20\x72\x6f\x72\x20\x23\x38");
    COMPARE(uxtab(r3, r4, Operand(r5, ROR, 8)),
            "\x65\x36\x65\x34\x33\x34\x37\x35\x20\x20\x20\x20\x20\x20\x20\x75\x78\x74\x61\x62\x20\x72\x33\x2c\x20\x72\x34\x2c\x20\x72\x35\x2c\x20\x72\x6f\x72\x20\x23\x38");
    COMPARE(uxtb16(r3, Operand(r4, ROR, 8)),
            "\x65\x36\x63\x66\x33\x34\x37\x34\x20\x20\x20\x20\x20\x20\x20\x75\x78\x74\x62\x31\x36\x20\x72\x33\x2c\x20\x72\x34\x2c\x20\x72\x6f\x72\x20\x23\x38");
  }

  VERIFY_RUN();
}



TEST(Vfp) {
  SET_UP();

  if (CpuFeatures::IsSupported(VFP3)) {
    CpuFeatureScope scope(&assm, VFP3);
    COMPARE(vmov(d0, r2, r3),
            "\x65\x63\x34\x33\x32\x62\x31\x30\x20\x20\x20\x20\x20\x20\x20\x76\x6d\x6f\x76\x20\x64\x30\x2c\x20\x72\x32\x2c\x20\x72\x33");
    COMPARE(vmov(r2, r3, d0),
            "\x65\x63\x35\x33\x32\x62\x31\x30\x20\x20\x20\x20\x20\x20\x20\x76\x6d\x6f\x76\x20\x72\x32\x2c\x20\x72\x33\x2c\x20\x64\x30");
    COMPARE(vmov(d0, d1),
            "\x65\x65\x62\x30\x30\x62\x34\x31\x20\x20\x20\x20\x20\x20\x20\x76\x6d\x6f\x76\x2e\x66\x36\x34\x20\x64\x30\x2c\x20\x64\x31");
    COMPARE(vmov(d3, d3, eq),
            "\x30\x65\x62\x30\x33\x62\x34\x33\x20\x20\x20\x20\x20\x20\x20\x76\x6d\x6f\x76\x65\x71\x2e\x66\x36\x34\x20\x64\x33\x2c\x20\x64\x33");

    COMPARE(vmov(s0, s31),
            "\x65\x65\x62\x30\x30\x61\x36\x66\x20\x20\x20\x20\x20\x20\x20\x76\x6d\x6f\x76\x2e\x66\x33\x32\x20\x73\x30\x2c\x20\x73\x33\x31");
    COMPARE(vmov(s31, s0),
            "\x65\x65\x66\x30\x66\x61\x34\x30\x20\x20\x20\x20\x20\x20\x20\x76\x6d\x6f\x76\x2e\x66\x33\x32\x20\x73\x33\x31\x2c\x20\x73\x30");
    COMPARE(vmov(r0, s0),
            "\x65\x65\x31\x30\x30\x61\x31\x30\x20\x20\x20\x20\x20\x20\x20\x76\x6d\x6f\x76\x20\x72\x30\x2c\x20\x73\x30");
    COMPARE(vmov(r10, s31),
            "\x65\x65\x31\x66\x61\x61\x39\x30\x20\x20\x20\x20\x20\x20\x20\x76\x6d\x6f\x76\x20\x72\x31\x30\x2c\x20\x73\x33\x31");
    COMPARE(vmov(s0, r0),
            "\x65\x65\x30\x30\x30\x61\x31\x30\x20\x20\x20\x20\x20\x20\x20\x76\x6d\x6f\x76\x20\x73\x30\x2c\x20\x72\x30");
    COMPARE(vmov(s31, r10),
            "\x65\x65\x30\x66\x61\x61\x39\x30\x20\x20\x20\x20\x20\x20\x20\x76\x6d\x6f\x76\x20\x73\x33\x31\x2c\x20\x72\x31\x30");

    COMPARE(vabs(d0, d1),
            "\x65\x65\x62\x30\x30\x62\x63\x31\x20\x20\x20\x20\x20\x20\x20\x76\x61\x62\x73\x2e\x66\x36\x34\x20\x64\x30\x2c\x20\x64\x31");
    COMPARE(vabs(d3, d4, mi),
            "\x34\x65\x62\x30\x33\x62\x63\x34\x20\x20\x20\x20\x20\x20\x20\x76\x61\x62\x73\x6d\x69\x2e\x66\x36\x34\x20\x64\x33\x2c\x20\x64\x34");

    COMPARE(vneg(d0, d1),
            "\x65\x65\x62\x31\x30\x62\x34\x31\x20\x20\x20\x20\x20\x20\x20\x76\x6e\x65\x67\x2e\x66\x36\x34\x20\x64\x30\x2c\x20\x64\x31");
    COMPARE(vneg(d3, d4, mi),
            "\x34\x65\x62\x31\x33\x62\x34\x34\x20\x20\x20\x20\x20\x20\x20\x76\x6e\x65\x67\x6d\x69\x2e\x66\x36\x34\x20\x64\x33\x2c\x20\x64\x34");

    COMPARE(vadd(d0, d1, d2),
            "\x65\x65\x33\x31\x30\x62\x30\x32\x20\x20\x20\x20\x20\x20\x20\x76\x61\x64\x64\x2e\x66\x36\x34\x20\x64\x30\x2c\x20\x64\x31\x2c\x20\x64\x32");
    COMPARE(vadd(d3, d4, d5, mi),
            "\x34\x65\x33\x34\x33\x62\x30\x35\x20\x20\x20\x20\x20\x20\x20\x76\x61\x64\x64\x6d\x69\x2e\x66\x36\x34\x20\x64\x33\x2c\x20\x64\x34\x2c\x20\x64\x35");

    COMPARE(vsub(d0, d1, d2),
            "\x65\x65\x33\x31\x30\x62\x34\x32\x20\x20\x20\x20\x20\x20\x20\x76\x73\x75\x62\x2e\x66\x36\x34\x20\x64\x30\x2c\x20\x64\x31\x2c\x20\x64\x32");
    COMPARE(vsub(d3, d4, d5, ne),
            "\x31\x65\x33\x34\x33\x62\x34\x35\x20\x20\x20\x20\x20\x20\x20\x76\x73\x75\x62\x6e\x65\x2e\x66\x36\x34\x20\x64\x33\x2c\x20\x64\x34\x2c\x20\x64\x35");

    COMPARE(vmul(d2, d1, d0),
            "\x65\x65\x32\x31\x32\x62\x30\x30\x20\x20\x20\x20\x20\x20\x20\x76\x6d\x75\x6c\x2e\x66\x36\x34\x20\x64\x32\x2c\x20\x64\x31\x2c\x20\x64\x30");
    COMPARE(vmul(d6, d4, d5, cc),
            "\x33\x65\x32\x34\x36\x62\x30\x35\x20\x20\x20\x20\x20\x20\x20\x76\x6d\x75\x6c\x63\x63\x2e\x66\x36\x34\x20\x64\x36\x2c\x20\x64\x34\x2c\x20\x64\x35");

    COMPARE(vdiv(d2, d2, d2),
            "\x65\x65\x38\x32\x32\x62\x30\x32\x20\x20\x20\x20\x20\x20\x20\x76\x64\x69\x76\x2e\x66\x36\x34\x20\x64\x32\x2c\x20\x64\x32\x2c\x20\x64\x32");
    COMPARE(vdiv(d6, d7, d7, hi),
            "\x38\x65\x38\x37\x36\x62\x30\x37\x20\x20\x20\x20\x20\x20\x20\x76\x64\x69\x76\x68\x69\x2e\x66\x36\x34\x20\x64\x36\x2c\x20\x64\x37\x2c\x20\x64\x37");

    COMPARE(vcmp(d0, d1),
            "\x65\x65\x62\x34\x30\x62\x34\x31\x20\x20\x20\x20\x20\x20\x20\x76\x63\x6d\x70\x2e\x66\x36\x34\x20\x64\x30\x2c\x20\x64\x31");
    COMPARE(vcmp(d0, 0.0),
            "\x65\x65\x62\x35\x30\x62\x34\x30\x20\x20\x20\x20\x20\x20\x20\x76\x63\x6d\x70\x2e\x66\x36\x34\x20\x64\x30\x2c\x20\x23\x30\x2e\x30");

    COMPARE(vsqrt(d0, d0),
            "\x65\x65\x62\x31\x30\x62\x63\x30\x20\x20\x20\x20\x20\x20\x20\x76\x73\x71\x72\x74\x2e\x66\x36\x34\x20\x64\x30\x2c\x20\x64\x30");
    COMPARE(vsqrt(d2, d3, ne),
            "\x31\x65\x62\x31\x32\x62\x63\x33\x20\x20\x20\x20\x20\x20\x20\x76\x73\x71\x72\x74\x6e\x65\x2e\x66\x36\x34\x20\x64\x32\x2c\x20\x64\x33");

    COMPARE(vmov(d0, 1.0),
            "\x65\x65\x62\x37\x30\x62\x30\x30\x20\x20\x20\x20\x20\x20\x20\x76\x6d\x6f\x76\x2e\x66\x36\x34\x20\x64\x30\x2c\x20\x23\x31");
    COMPARE(vmov(d2, -13.0),
            "\x65\x65\x62\x61\x32\x62\x30\x61\x20\x20\x20\x20\x20\x20\x20\x76\x6d\x6f\x76\x2e\x66\x36\x34\x20\x64\x32\x2c\x20\x23\x2d\x31\x33");

    COMPARE(vmov(d0, VmovIndexLo, r0),
            "\x65\x65\x30\x30\x30\x62\x31\x30\x20\x20\x20\x20\x20\x20\x20\x76\x6d\x6f\x76\x2e\x33\x32\x20\x64\x30\x5b\x30\x5d\x2c\x20\x72\x30");
    COMPARE(vmov(d0, VmovIndexHi, r0),
            "\x65\x65\x32\x30\x30\x62\x31\x30\x20\x20\x20\x20\x20\x20\x20\x76\x6d\x6f\x76\x2e\x33\x32\x20\x64\x30\x5b\x31\x5d\x2c\x20\x72\x30");

    COMPARE(vmov(r2, VmovIndexLo, d15),
            "\x65\x65\x31\x66\x32\x62\x31\x30\x20\x20\x20\x20\x20\x20\x20\x76\x6d\x6f\x76\x2e\x33\x32\x20\x72\x32\x2c\x20\x64\x31\x35\x5b\x30\x5d");
    COMPARE(vmov(r3, VmovIndexHi, d14),
            "\x65\x65\x33\x65\x33\x62\x31\x30\x20\x20\x20\x20\x20\x20\x20\x76\x6d\x6f\x76\x2e\x33\x32\x20\x72\x33\x2c\x20\x64\x31\x34\x5b\x31\x5d");

    COMPARE(vldr(s0, r0, 0),
            "\x65\x64\x39\x30\x30\x61\x30\x30\x20\x20\x20\x20\x20\x20\x20\x76\x6c\x64\x72\x20\x73\x30\x2c\x20\x5b\x72\x30\x20\x2b\x20\x34\x2a\x30\x5d");
    COMPARE(vldr(s1, r1, 4),
            "\x65\x64\x64\x31\x30\x61\x30\x31\x20\x20\x20\x20\x20\x20\x20\x76\x6c\x64\x72\x20\x73\x31\x2c\x20\x5b\x72\x31\x20\x2b\x20\x34\x2a\x31\x5d");
    COMPARE(vldr(s15, r4, 16),
            "\x65\x64\x64\x34\x37\x61\x30\x34\x20\x20\x20\x20\x20\x20\x20\x76\x6c\x64\x72\x20\x73\x31\x35\x2c\x20\x5b\x72\x34\x20\x2b\x20\x34\x2a\x34\x5d");
    COMPARE(vldr(s16, r5, 20),
            "\x65\x64\x39\x35\x38\x61\x30\x35\x20\x20\x20\x20\x20\x20\x20\x76\x6c\x64\x72\x20\x73\x31\x36\x2c\x20\x5b\x72\x35\x20\x2b\x20\x34\x2a\x35\x5d");
    COMPARE(vldr(s31, r10, 1020),
            "\x65\x64\x64\x61\x66\x61\x66\x66\x20\x20\x20\x20\x20\x20\x20\x76\x6c\x64\x72\x20\x73\x33\x31\x2c\x20\x5b\x72\x31\x30\x20\x2b\x20\x34\x2a\x32\x35\x35\x5d");

    COMPARE(vstr(s0, r0, 0),
            "\x65\x64\x38\x30\x30\x61\x30\x30\x20\x20\x20\x20\x20\x20\x20\x76\x73\x74\x72\x20\x73\x30\x2c\x20\x5b\x72\x30\x20\x2b\x20\x34\x2a\x30\x5d");
    COMPARE(vstr(s1, r1, 4),
            "\x65\x64\x63\x31\x30\x61\x30\x31\x20\x20\x20\x20\x20\x20\x20\x76\x73\x74\x72\x20\x73\x31\x2c\x20\x5b\x72\x31\x20\x2b\x20\x34\x2a\x31\x5d");
    COMPARE(vstr(s15, r8, 8),
            "\x65\x64\x63\x38\x37\x61\x30\x32\x20\x20\x20\x20\x20\x20\x20\x76\x73\x74\x72\x20\x73\x31\x35\x2c\x20\x5b\x72\x38\x20\x2b\x20\x34\x2a\x32\x5d");
    COMPARE(vstr(s16, r9, 12),
            "\x65\x64\x38\x39\x38\x61\x30\x33\x20\x20\x20\x20\x20\x20\x20\x76\x73\x74\x72\x20\x73\x31\x36\x2c\x20\x5b\x72\x39\x20\x2b\x20\x34\x2a\x33\x5d");
    COMPARE(vstr(s31, r10, 1020),
            "\x65\x64\x63\x61\x66\x61\x66\x66\x20\x20\x20\x20\x20\x20\x20\x76\x73\x74\x72\x20\x73\x33\x31\x2c\x20\x5b\x72\x31\x30\x20\x2b\x20\x34\x2a\x32\x35\x35\x5d");

    COMPARE(vldr(d0, r0, 0),
            "\x65\x64\x39\x30\x30\x62\x30\x30\x20\x20\x20\x20\x20\x20\x20\x76\x6c\x64\x72\x20\x64\x30\x2c\x20\x5b\x72\x30\x20\x2b\x20\x34\x2a\x30\x5d");
    COMPARE(vldr(d1, r1, 4),
            "\x65\x64\x39\x31\x31\x62\x30\x31\x20\x20\x20\x20\x20\x20\x20\x76\x6c\x64\x72\x20\x64\x31\x2c\x20\x5b\x72\x31\x20\x2b\x20\x34\x2a\x31\x5d");
    COMPARE(vldr(d15, r10, 1020),
            "\x65\x64\x39\x61\x66\x62\x66\x66\x20\x20\x20\x20\x20\x20\x20\x76\x6c\x64\x72\x20\x64\x31\x35\x2c\x20\x5b\x72\x31\x30\x20\x2b\x20\x34\x2a\x32\x35\x35\x5d");
    COMPARE(vstr(d0, r0, 0),
            "\x65\x64\x38\x30\x30\x62\x30\x30\x20\x20\x20\x20\x20\x20\x20\x76\x73\x74\x72\x20\x64\x30\x2c\x20\x5b\x72\x30\x20\x2b\x20\x34\x2a\x30\x5d");
    COMPARE(vstr(d1, r1, 4),
            "\x65\x64\x38\x31\x31\x62\x30\x31\x20\x20\x20\x20\x20\x20\x20\x76\x73\x74\x72\x20\x64\x31\x2c\x20\x5b\x72\x31\x20\x2b\x20\x34\x2a\x31\x5d");
    COMPARE(vstr(d15, r10, 1020),
            "\x65\x64\x38\x61\x66\x62\x66\x66\x20\x20\x20\x20\x20\x20\x20\x76\x73\x74\x72\x20\x64\x31\x35\x2c\x20\x5b\x72\x31\x30\x20\x2b\x20\x34\x2a\x32\x35\x35\x5d");

    COMPARE(vmsr(r5),
            "\x65\x65\x65\x31\x35\x61\x31\x30\x20\x20\x20\x20\x20\x20\x20\x76\x6d\x73\x72\x20\x46\x50\x53\x43\x52\x2c\x20\x72\x35");
    COMPARE(vmsr(r10, pl),
            "\x35\x65\x65\x31\x61\x61\x31\x30\x20\x20\x20\x20\x20\x20\x20\x76\x6d\x73\x72\x70\x6c\x20\x46\x50\x53\x43\x52\x2c\x20\x72\x31\x30");
    COMPARE(vmsr(pc),
            "\x65\x65\x65\x31\x66\x61\x31\x30\x20\x20\x20\x20\x20\x20\x20\x76\x6d\x73\x72\x20\x46\x50\x53\x43\x52\x2c\x20\x41\x50\x53\x52");
    COMPARE(vmrs(r5),
            "\x65\x65\x66\x31\x35\x61\x31\x30\x20\x20\x20\x20\x20\x20\x20\x76\x6d\x72\x73\x20\x72\x35\x2c\x20\x46\x50\x53\x43\x52");
    COMPARE(vmrs(r10, ge),
            "\x61\x65\x66\x31\x61\x61\x31\x30\x20\x20\x20\x20\x20\x20\x20\x76\x6d\x72\x73\x67\x65\x20\x72\x31\x30\x2c\x20\x46\x50\x53\x43\x52");
    COMPARE(vmrs(pc),
            "\x65\x65\x66\x31\x66\x61\x31\x30\x20\x20\x20\x20\x20\x20\x20\x76\x6d\x72\x73\x20\x41\x50\x53\x52\x2c\x20\x46\x50\x53\x43\x52");

    COMPARE(vstm(ia, r0, d1, d3),
            "\x65\x63\x38\x30\x31\x62\x30\x36\x20\x20\x20\x20\x20\x20\x20\x76\x73\x74\x6d\x69\x61\x20\x72\x30\x2c\x20\x7b\x64\x31\x2d\x64\x33\x7d");
    COMPARE(vldm(ia, r1, d2, d5),
            "\x65\x63\x39\x31\x32\x62\x30\x38\x20\x20\x20\x20\x20\x20\x20\x76\x6c\x64\x6d\x69\x61\x20\x72\x31\x2c\x20\x7b\x64\x32\x2d\x64\x35\x7d");
    COMPARE(vstm(ia, r2, d0, d15),
            "\x65\x63\x38\x32\x30\x62\x32\x30\x20\x20\x20\x20\x20\x20\x20\x76\x73\x74\x6d\x69\x61\x20\x72\x32\x2c\x20\x7b\x64\x30\x2d\x64\x31\x35\x7d");
    COMPARE(vldm(ia, r3, d0, d15),
            "\x65\x63\x39\x33\x30\x62\x32\x30\x20\x20\x20\x20\x20\x20\x20\x76\x6c\x64\x6d\x69\x61\x20\x72\x33\x2c\x20\x7b\x64\x30\x2d\x64\x31\x35\x7d");
    COMPARE(vstm(ia, r4, s1, s3),
            "\x65\x63\x63\x34\x30\x61\x30\x33\x20\x20\x20\x20\x20\x20\x20\x76\x73\x74\x6d\x69\x61\x20\x72\x34\x2c\x20\x7b\x73\x31\x2d\x73\x33\x7d");
    COMPARE(vldm(ia, r5, s2, s5),
            "\x65\x63\x39\x35\x31\x61\x30\x34\x20\x20\x20\x20\x20\x20\x20\x76\x6c\x64\x6d\x69\x61\x20\x72\x35\x2c\x20\x7b\x73\x32\x2d\x73\x35\x7d");
    COMPARE(vstm(ia, r6, s0, s31),
            "\x65\x63\x38\x36\x30\x61\x32\x30\x20\x20\x20\x20\x20\x20\x20\x76\x73\x74\x6d\x69\x61\x20\x72\x36\x2c\x20\x7b\x73\x30\x2d\x73\x33\x31\x7d");
    COMPARE(vldm(ia, r7, s0, s31),
            "\x65\x63\x39\x37\x30\x61\x32\x30\x20\x20\x20\x20\x20\x20\x20\x76\x6c\x64\x6d\x69\x61\x20\x72\x37\x2c\x20\x7b\x73\x30\x2d\x73\x33\x31\x7d");

    COMPARE(vmla(d2, d1, d0),
            "\x65\x65\x30\x31\x32\x62\x30\x30\x20\x20\x20\x20\x20\x20\x20\x76\x6d\x6c\x61\x2e\x66\x36\x34\x20\x64\x32\x2c\x20\x64\x31\x2c\x20\x64\x30");
    COMPARE(vmla(d6, d4, d5, cc),
            "\x33\x65\x30\x34\x36\x62\x30\x35\x20\x20\x20\x20\x20\x20\x20\x76\x6d\x6c\x61\x63\x63\x2e\x66\x36\x34\x20\x64\x36\x2c\x20\x64\x34\x2c\x20\x64\x35");

    COMPARE(vmls(d2, d1, d0),
            "\x65\x65\x30\x31\x32\x62\x34\x30\x20\x20\x20\x20\x20\x20\x20\x76\x6d\x6c\x73\x2e\x66\x36\x34\x20\x64\x32\x2c\x20\x64\x31\x2c\x20\x64\x30");
    COMPARE(vmls(d6, d4, d5, cc),
            "\x33\x65\x30\x34\x36\x62\x34\x35\x20\x20\x20\x20\x20\x20\x20\x76\x6d\x6c\x73\x63\x63\x2e\x66\x36\x34\x20\x64\x36\x2c\x20\x64\x34\x2c\x20\x64\x35");

    COMPARE(vcvt_u32_f64(s0, d0),
            "\x65\x65\x62\x63\x30\x62\x63\x30\x20\x20\x20\x20\x20\x20\x20\x76\x63\x76\x74\x2e\x75\x33\x32\x2e\x66\x36\x34\x20\x73\x30\x2c\x20\x64\x30");
    COMPARE(vcvt_s32_f64(s0, d0),
            "\x65\x65\x62\x64\x30\x62\x63\x30\x20\x20\x20\x20\x20\x20\x20\x76\x63\x76\x74\x2e\x73\x33\x32\x2e\x66\x36\x34\x20\x73\x30\x2c\x20\x64\x30");
    COMPARE(vcvt_f64_u32(d0, s1),
            "\x65\x65\x62\x38\x30\x62\x36\x30\x20\x20\x20\x20\x20\x20\x20\x76\x63\x76\x74\x2e\x66\x36\x34\x2e\x75\x33\x32\x20\x64\x30\x2c\x20\x73\x31");
    COMPARE(vcvt_f64_s32(d0, s1),
            "\x65\x65\x62\x38\x30\x62\x65\x30\x20\x20\x20\x20\x20\x20\x20\x76\x63\x76\x74\x2e\x66\x36\x34\x2e\x73\x33\x32\x20\x64\x30\x2c\x20\x73\x31");
    COMPARE(vcvt_f32_s32(s0, s2),
            "\x65\x65\x62\x38\x30\x61\x63\x31\x20\x20\x20\x20\x20\x20\x20\x76\x63\x76\x74\x2e\x66\x33\x32\x2e\x73\x33\x32\x20\x73\x30\x2c\x20\x73\x32");
    COMPARE(vcvt_f64_s32(d0, 2),
            "\x65\x65\x62\x61\x30\x62\x63\x66\x20\x20\x20\x20\x20\x20\x20\x76\x63\x76\x74\x2e\x66\x36\x34\x2e\x73\x33\x32\x20\x64\x30\x2c\x20\x64\x30\x2c\x20\x23\x32");

    if (CpuFeatures::IsSupported(VFP32DREGS)) {
      COMPARE(vmov(d3, d27),
              "\x65\x65\x62\x30\x33\x62\x36\x62\x20\x20\x20\x20\x20\x20\x20\x76\x6d\x6f\x76\x2e\x66\x36\x34\x20\x64\x33\x2c\x20\x64\x32\x37");
      COMPARE(vmov(d18, d7),
              "\x65\x65\x66\x30\x32\x62\x34\x37\x20\x20\x20\x20\x20\x20\x20\x76\x6d\x6f\x76\x2e\x66\x36\x34\x20\x64\x31\x38\x2c\x20\x64\x37");
      COMPARE(vmov(d18, r2, r3),
              "\x65\x63\x34\x33\x32\x62\x33\x32\x20\x20\x20\x20\x20\x20\x20\x76\x6d\x6f\x76\x20\x64\x31\x38\x2c\x20\x72\x32\x2c\x20\x72\x33");
      COMPARE(vmov(r2, r3, d18),
              "\x65\x63\x35\x33\x32\x62\x33\x32\x20\x20\x20\x20\x20\x20\x20\x76\x6d\x6f\x76\x20\x72\x32\x2c\x20\x72\x33\x2c\x20\x64\x31\x38");
      COMPARE(vmov(d20, d31),
              "\x65\x65\x66\x30\x34\x62\x36\x66\x20\x20\x20\x20\x20\x20\x20\x76\x6d\x6f\x76\x2e\x66\x36\x34\x20\x64\x32\x30\x2c\x20\x64\x33\x31");

      COMPARE(vabs(d16, d31),
              "\x65\x65\x66\x30\x30\x62\x65\x66\x20\x20\x20\x20\x20\x20\x20\x76\x61\x62\x73\x2e\x66\x36\x34\x20\x64\x31\x36\x2c\x20\x64\x33\x31");

      COMPARE(vneg(d16, d31),
              "\x65\x65\x66\x31\x30\x62\x36\x66\x20\x20\x20\x20\x20\x20\x20\x76\x6e\x65\x67\x2e\x66\x36\x34\x20\x64\x31\x36\x2c\x20\x64\x33\x31");

      COMPARE(vadd(d16, d17, d18),
              "\x65\x65\x37\x31\x30\x62\x61\x32\x20\x20\x20\x20\x20\x20\x20\x76\x61\x64\x64\x2e\x66\x36\x34\x20\x64\x31\x36\x2c\x20\x64\x31\x37\x2c\x20\x64\x31\x38");

      COMPARE(vsub(d16, d17, d18),
              "\x65\x65\x37\x31\x30\x62\x65\x32\x20\x20\x20\x20\x20\x20\x20\x76\x73\x75\x62\x2e\x66\x36\x34\x20\x64\x31\x36\x2c\x20\x64\x31\x37\x2c\x20\x64\x31\x38");

      COMPARE(vmul(d16, d17, d18),
              "\x65\x65\x36\x31\x30\x62\x61\x32\x20\x20\x20\x20\x20\x20\x20\x76\x6d\x75\x6c\x2e\x66\x36\x34\x20\x64\x31\x36\x2c\x20\x64\x31\x37\x2c\x20\x64\x31\x38");

      COMPARE(vdiv(d16, d17, d18),
              "\x65\x65\x63\x31\x30\x62\x61\x32\x20\x20\x20\x20\x20\x20\x20\x76\x64\x69\x76\x2e\x66\x36\x34\x20\x64\x31\x36\x2c\x20\x64\x31\x37\x2c\x20\x64\x31\x38");

      COMPARE(vcmp(d16, d17),
              "\x65\x65\x66\x34\x30\x62\x36\x31\x20\x20\x20\x20\x20\x20\x20\x76\x63\x6d\x70\x2e\x66\x36\x34\x20\x64\x31\x36\x2c\x20\x64\x31\x37");
      COMPARE(vcmp(d16, 0.0),
              "\x65\x65\x66\x35\x30\x62\x34\x30\x20\x20\x20\x20\x20\x20\x20\x76\x63\x6d\x70\x2e\x66\x36\x34\x20\x64\x31\x36\x2c\x20\x23\x30\x2e\x30");

      COMPARE(vsqrt(d16, d17),
              "\x65\x65\x66\x31\x30\x62\x65\x31\x20\x20\x20\x20\x20\x20\x20\x76\x73\x71\x72\x74\x2e\x66\x36\x34\x20\x64\x31\x36\x2c\x20\x64\x31\x37");

      COMPARE(vmov(d30, 16.0),
              "\x65\x65\x66\x33\x65\x62\x30\x30\x20\x20\x20\x20\x20\x20\x20\x76\x6d\x6f\x76\x2e\x66\x36\x34\x20\x64\x33\x30\x2c\x20\x23\x31\x36");

      COMPARE(vmov(d31, VmovIndexLo, r7),
              "\x65\x65\x30\x66\x37\x62\x39\x30\x20\x20\x20\x20\x20\x20\x20\x76\x6d\x6f\x76\x2e\x33\x32\x20\x64\x33\x31\x5b\x30\x5d\x2c\x20\x72\x37");
      COMPARE(vmov(d31, VmovIndexHi, r7),
              "\x65\x65\x32\x66\x37\x62\x39\x30\x20\x20\x20\x20\x20\x20\x20\x76\x6d\x6f\x76\x2e\x33\x32\x20\x64\x33\x31\x5b\x31\x5d\x2c\x20\x72\x37");

      COMPARE(vldr(d25, r0, 0),
              "\x65\x64\x64\x30\x39\x62\x30\x30\x20\x20\x20\x20\x20\x20\x20\x76\x6c\x64\x72\x20\x64\x32\x35\x2c\x20\x5b\x72\x30\x20\x2b\x20\x34\x2a\x30\x5d");
      COMPARE(vldr(d26, r1, 4),
              "\x65\x64\x64\x31\x61\x62\x30\x31\x20\x20\x20\x20\x20\x20\x20\x76\x6c\x64\x72\x20\x64\x32\x36\x2c\x20\x5b\x72\x31\x20\x2b\x20\x34\x2a\x31\x5d");
      COMPARE(vldr(d31, r10, 1020),
              "\x65\x64\x64\x61\x66\x62\x66\x66\x20\x20\x20\x20\x20\x20\x20\x76\x6c\x64\x72\x20\x64\x33\x31\x2c\x20\x5b\x72\x31\x30\x20\x2b\x20\x34\x2a\x32\x35\x35\x5d");

      COMPARE(vstr(d16, r0, 0),
              "\x65\x64\x63\x30\x30\x62\x30\x30\x20\x20\x20\x20\x20\x20\x20\x76\x73\x74\x72\x20\x64\x31\x36\x2c\x20\x5b\x72\x30\x20\x2b\x20\x34\x2a\x30\x5d");
      COMPARE(vstr(d17, r1, 4),
              "\x65\x64\x63\x31\x31\x62\x30\x31\x20\x20\x20\x20\x20\x20\x20\x76\x73\x74\x72\x20\x64\x31\x37\x2c\x20\x5b\x72\x31\x20\x2b\x20\x34\x2a\x31\x5d");
      COMPARE(vstr(d31, r10, 1020),
              "\x65\x64\x63\x61\x66\x62\x66\x66\x20\x20\x20\x20\x20\x20\x20\x76\x73\x74\x72\x20\x64\x33\x31\x2c\x20\x5b\x72\x31\x30\x20\x2b\x20\x34\x2a\x32\x35\x35\x5d");

      COMPARE(vstm(ia, r0, d16, d31),
              "\x65\x63\x63\x30\x30\x62\x32\x30\x20\x20\x20\x20\x20\x20\x20\x76\x73\x74\x6d\x69\x61\x20\x72\x30\x2c\x20\x7b\x64\x31\x36\x2d\x64\x33\x31\x7d");
      COMPARE(vldm(ia, r3, d16, d31),
              "\x65\x63\x64\x33\x30\x62\x32\x30\x20\x20\x20\x20\x20\x20\x20\x76\x6c\x64\x6d\x69\x61\x20\x72\x33\x2c\x20\x7b\x64\x31\x36\x2d\x64\x33\x31\x7d");
      COMPARE(vstm(ia, r0, d23, d27),
              "\x65\x63\x63\x30\x37\x62\x30\x61\x20\x20\x20\x20\x20\x20\x20\x76\x73\x74\x6d\x69\x61\x20\x72\x30\x2c\x20\x7b\x64\x32\x33\x2d\x64\x32\x37\x7d");
      COMPARE(vldm(ia, r3, d23, d27),
              "\x65\x63\x64\x33\x37\x62\x30\x61\x20\x20\x20\x20\x20\x20\x20\x76\x6c\x64\x6d\x69\x61\x20\x72\x33\x2c\x20\x7b\x64\x32\x33\x2d\x64\x32\x37\x7d");

      COMPARE(vmla(d16, d17, d18),
              "\x65\x65\x34\x31\x30\x62\x61\x32\x20\x20\x20\x20\x20\x20\x20\x76\x6d\x6c\x61\x2e\x66\x36\x34\x20\x64\x31\x36\x2c\x20\x64\x31\x37\x2c\x20\x64\x31\x38");

      COMPARE(vcvt_u32_f64(s0, d16),
              "\x65\x65\x62\x63\x30\x62\x65\x30\x20\x20\x20\x20\x20\x20\x20\x76\x63\x76\x74\x2e\x75\x33\x32\x2e\x66\x36\x34\x20\x73\x30\x2c\x20\x64\x31\x36");
      COMPARE(vcvt_s32_f64(s0, d16),
              "\x65\x65\x62\x64\x30\x62\x65\x30\x20\x20\x20\x20\x20\x20\x20\x76\x63\x76\x74\x2e\x73\x33\x32\x2e\x66\x36\x34\x20\x73\x30\x2c\x20\x64\x31\x36");
      COMPARE(vcvt_f64_u32(d16, s1),
              "\x65\x65\x66\x38\x30\x62\x36\x30\x20\x20\x20\x20\x20\x20\x20\x76\x63\x76\x74\x2e\x66\x36\x34\x2e\x75\x33\x32\x20\x64\x31\x36\x2c\x20\x73\x31");
    }
  }

  VERIFY_RUN();
}


TEST(Neon) {
  SET_UP();

  if (CpuFeatures::IsSupported(NEON)) {
    CpuFeatureScope scope(&assm, NEON);
      COMPARE(vld1(Neon8, NeonListOperand(d4, 4), NeonMemOperand(r1)),
              "\x66\x34\x32\x31\x34\x32\x30\x66\x20\x20\x20\x20\x20\x20\x20\x76\x6c\x64\x31\x2e\x38\x20\x7b\x64\x34\x2c\x20\x64\x35\x2c\x20\x64\x36\x2c\x20\x64\x37\x7d\x2c\x20\x5b\x72\x31\x5d");
      COMPARE(vst1(Neon16, NeonListOperand(d17, 4), NeonMemOperand(r9)),
              "\x66\x34\x34\x39\x31\x32\x34\x66\x20\x20\x20\x20\x20\x20\x20\x76\x73\x74\x31\x2e\x31\x36\x20\x7b\x64\x31\x37\x2c\x20\x64\x31\x38\x2c\x20\x64\x31\x39\x2c\x20\x64\x32\x30\x7d\x2c\x20\x5b\x72\x39\x5d");
      COMPARE(vmovl(NeonU8, q3, d1),
              "\x66\x33\x38\x38\x36\x61\x31\x31\x20\x20\x20\x20\x20\x20\x20\x76\x6d\x6f\x76\x6c\x2e\x75\x38\x20\x71\x33\x2c\x20\x64\x31");
      COMPARE(vmovl(NeonU8, q4, d2),
              "\x66\x33\x38\x38\x38\x61\x31\x32\x20\x20\x20\x20\x20\x20\x20\x76\x6d\x6f\x76\x6c\x2e\x75\x38\x20\x71\x34\x2c\x20\x64\x32");
  }

  VERIFY_RUN();
}


TEST(LoadStore) {
  SET_UP();

  COMPARE(ldrb(r0, MemOperand(r1)),
          "\x65\x35\x64\x31\x30\x30\x30\x30\x20\x20\x20\x20\x20\x20\x20\x6c\x64\x72\x62\x20\x72\x30\x2c\x20\x5b\x72\x31\x2c\x20\x23\x2b\x30\x5d");
  COMPARE(ldrb(r2, MemOperand(r3, 42)),
          "\x65\x35\x64\x33\x32\x30\x32\x61\x20\x20\x20\x20\x20\x20\x20\x6c\x64\x72\x62\x20\x72\x32\x2c\x20\x5b\x72\x33\x2c\x20\x23\x2b\x34\x32\x5d");
  COMPARE(ldrb(r4, MemOperand(r5, -42)),
          "\x65\x35\x35\x35\x34\x30\x32\x61\x20\x20\x20\x20\x20\x20\x20\x6c\x64\x72\x62\x20\x72\x34\x2c\x20\x5b\x72\x35\x2c\x20\x23\x2d\x34\x32\x5d");
  COMPARE(ldrb(r6, MemOperand(r7, 42, PostIndex)),
          "\x65\x34\x64\x37\x36\x30\x32\x61\x20\x20\x20\x20\x20\x20\x20\x6c\x64\x72\x62\x20\x72\x36\x2c\x20\x5b\x72\x37\x5d\x2c\x20\x23\x2b\x34\x32");
  COMPARE(ldrb(r8, MemOperand(r9, -42, PostIndex)),
          "\x65\x34\x35\x39\x38\x30\x32\x61\x20\x20\x20\x20\x20\x20\x20\x6c\x64\x72\x62\x20\x72\x38\x2c\x20\x5b\x72\x39\x5d\x2c\x20\x23\x2d\x34\x32");
  COMPARE(ldrb(r10, MemOperand(fp, 42, PreIndex)),
          "\x65\x35\x66\x62\x61\x30\x32\x61\x20\x20\x20\x20\x20\x20\x20\x6c\x64\x72\x62\x20\x72\x31\x30\x2c\x20\x5b\x66\x70\x2c\x20\x23\x2b\x34\x32\x5d\x21");
  COMPARE(ldrb(ip, MemOperand(sp, -42, PreIndex)),
          "\x65\x35\x37\x64\x63\x30\x32\x61\x20\x20\x20\x20\x20\x20\x20\x6c\x64\x72\x62\x20\x69\x70\x2c\x20\x5b\x73\x70\x2c\x20\x23\x2d\x34\x32\x5d\x21");
  COMPARE(ldrb(r0, MemOperand(r1, r2)),
          "\x65\x37\x64\x31\x30\x30\x30\x32\x20\x20\x20\x20\x20\x20\x20\x6c\x64\x72\x62\x20\x72\x30\x2c\x20\x5b\x72\x31\x2c\x20\x2b\x72\x32\x5d");
  COMPARE(ldrb(r0, MemOperand(r1, r2, NegOffset)),
          "\x65\x37\x35\x31\x30\x30\x30\x32\x20\x20\x20\x20\x20\x20\x20\x6c\x64\x72\x62\x20\x72\x30\x2c\x20\x5b\x72\x31\x2c\x20\x2d\x72\x32\x5d");
  COMPARE(ldrb(r0, MemOperand(r1, r2, PostIndex)),
          "\x65\x36\x64\x31\x30\x30\x30\x32\x20\x20\x20\x20\x20\x20\x20\x6c\x64\x72\x62\x20\x72\x30\x2c\x20\x5b\x72\x31\x5d\x2c\x20\x2b\x72\x32");
  COMPARE(ldrb(r0, MemOperand(r1, r2, NegPostIndex)),
          "\x65\x36\x35\x31\x30\x30\x30\x32\x20\x20\x20\x20\x20\x20\x20\x6c\x64\x72\x62\x20\x72\x30\x2c\x20\x5b\x72\x31\x5d\x2c\x20\x2d\x72\x32");
  COMPARE(ldrb(r0, MemOperand(r1, r2, PreIndex)),
          "\x65\x37\x66\x31\x30\x30\x30\x32\x20\x20\x20\x20\x20\x20\x20\x6c\x64\x72\x62\x20\x72\x30\x2c\x20\x5b\x72\x31\x2c\x20\x2b\x72\x32\x5d\x21");
  COMPARE(ldrb(r0, MemOperand(r1, r2, NegPreIndex)),
          "\x65\x37\x37\x31\x30\x30\x30\x32\x20\x20\x20\x20\x20\x20\x20\x6c\x64\x72\x62\x20\x72\x30\x2c\x20\x5b\x72\x31\x2c\x20\x2d\x72\x32\x5d\x21");

  COMPARE(strb(r0, MemOperand(r1)),
          "\x65\x35\x63\x31\x30\x30\x30\x30\x20\x20\x20\x20\x20\x20\x20\x73\x74\x72\x62\x20\x72\x30\x2c\x20\x5b\x72\x31\x2c\x20\x23\x2b\x30\x5d");
  COMPARE(strb(r2, MemOperand(r3, 42)),
          "\x65\x35\x63\x33\x32\x30\x32\x61\x20\x20\x20\x20\x20\x20\x20\x73\x74\x72\x62\x20\x72\x32\x2c\x20\x5b\x72\x33\x2c\x20\x23\x2b\x34\x32\x5d");
  COMPARE(strb(r4, MemOperand(r5, -42)),
          "\x65\x35\x34\x35\x34\x30\x32\x61\x20\x20\x20\x20\x20\x20\x20\x73\x74\x72\x62\x20\x72\x34\x2c\x20\x5b\x72\x35\x2c\x20\x23\x2d\x34\x32\x5d");
  COMPARE(strb(r6, MemOperand(r7, 42, PostIndex)),
          "\x65\x34\x63\x37\x36\x30\x32\x61\x20\x20\x20\x20\x20\x20\x20\x73\x74\x72\x62\x20\x72\x36\x2c\x20\x5b\x72\x37\x5d\x2c\x20\x23\x2b\x34\x32");
  COMPARE(strb(r8, MemOperand(r9, -42, PostIndex)),
          "\x65\x34\x34\x39\x38\x30\x32\x61\x20\x20\x20\x20\x20\x20\x20\x73\x74\x72\x62\x20\x72\x38\x2c\x20\x5b\x72\x39\x5d\x2c\x20\x23\x2d\x34\x32");
  COMPARE(strb(r10, MemOperand(fp, 42, PreIndex)),
          "\x65\x35\x65\x62\x61\x30\x32\x61\x20\x20\x20\x20\x20\x20\x20\x73\x74\x72\x62\x20\x72\x31\x30\x2c\x20\x5b\x66\x70\x2c\x20\x23\x2b\x34\x32\x5d\x21");
  COMPARE(strb(ip, MemOperand(sp, -42, PreIndex)),
          "\x65\x35\x36\x64\x63\x30\x32\x61\x20\x20\x20\x20\x20\x20\x20\x73\x74\x72\x62\x20\x69\x70\x2c\x20\x5b\x73\x70\x2c\x20\x23\x2d\x34\x32\x5d\x21");
  COMPARE(strb(r0, MemOperand(r1, r2)),
          "\x65\x37\x63\x31\x30\x30\x30\x32\x20\x20\x20\x20\x20\x20\x20\x73\x74\x72\x62\x20\x72\x30\x2c\x20\x5b\x72\x31\x2c\x20\x2b\x72\x32\x5d");
  COMPARE(strb(r0, MemOperand(r1, r2, NegOffset)),
          "\x65\x37\x34\x31\x30\x30\x30\x32\x20\x20\x20\x20\x20\x20\x20\x73\x74\x72\x62\x20\x72\x30\x2c\x20\x5b\x72\x31\x2c\x20\x2d\x72\x32\x5d");
  COMPARE(strb(r0, MemOperand(r1, r2, PostIndex)),
          "\x65\x36\x63\x31\x30\x30\x30\x32\x20\x20\x20\x20\x20\x20\x20\x73\x74\x72\x62\x20\x72\x30\x2c\x20\x5b\x72\x31\x5d\x2c\x20\x2b\x72\x32");
  COMPARE(strb(r0, MemOperand(r1, r2, NegPostIndex)),
          "\x65\x36\x34\x31\x30\x30\x30\x32\x20\x20\x20\x20\x20\x20\x20\x73\x74\x72\x62\x20\x72\x30\x2c\x20\x5b\x72\x31\x5d\x2c\x20\x2d\x72\x32");
  COMPARE(strb(r0, MemOperand(r1, r2, PreIndex)),
          "\x65\x37\x65\x31\x30\x30\x30\x32\x20\x20\x20\x20\x20\x20\x20\x73\x74\x72\x62\x20\x72\x30\x2c\x20\x5b\x72\x31\x2c\x20\x2b\x72\x32\x5d\x21");
  COMPARE(strb(r0, MemOperand(r1, r2, NegPreIndex)),
          "\x65\x37\x36\x31\x30\x30\x30\x32\x20\x20\x20\x20\x20\x20\x20\x73\x74\x72\x62\x20\x72\x30\x2c\x20\x5b\x72\x31\x2c\x20\x2d\x72\x32\x5d\x21");

  COMPARE(ldrh(r0, MemOperand(r1)),
          "\x65\x31\x64\x31\x30\x30\x62\x30\x20\x20\x20\x20\x20\x20\x20\x6c\x64\x72\x68\x20\x72\x30\x2c\x20\x5b\x72\x31\x2c\x20\x23\x2b\x30\x5d");
  COMPARE(ldrh(r2, MemOperand(r3, 42)),
          "\x65\x31\x64\x33\x32\x32\x62\x61\x20\x20\x20\x20\x20\x20\x20\x6c\x64\x72\x68\x20\x72\x32\x2c\x20\x5b\x72\x33\x2c\x20\x23\x2b\x34\x32\x5d");
  COMPARE(ldrh(r4, MemOperand(r5, -42)),
          "\x65\x31\x35\x35\x34\x32\x62\x61\x20\x20\x20\x20\x20\x20\x20\x6c\x64\x72\x68\x20\x72\x34\x2c\x20\x5b\x72\x35\x2c\x20\x23\x2d\x34\x32\x5d");
  COMPARE(ldrh(r6, MemOperand(r7, 42, PostIndex)),
          "\x65\x30\x64\x37\x36\x32\x62\x61\x20\x20\x20\x20\x20\x20\x20\x6c\x64\x72\x68\x20\x72\x36\x2c\x20\x5b\x72\x37\x5d\x2c\x20\x23\x2b\x34\x32");
  COMPARE(ldrh(r8, MemOperand(r9, -42, PostIndex)),
          "\x65\x30\x35\x39\x38\x32\x62\x61\x20\x20\x20\x20\x20\x20\x20\x6c\x64\x72\x68\x20\x72\x38\x2c\x20\x5b\x72\x39\x5d\x2c\x20\x23\x2d\x34\x32");
  COMPARE(ldrh(r10, MemOperand(fp, 42, PreIndex)),
          "\x65\x31\x66\x62\x61\x32\x62\x61\x20\x20\x20\x20\x20\x20\x20\x6c\x64\x72\x68\x20\x72\x31\x30\x2c\x20\x5b\x66\x70\x2c\x20\x23\x2b\x34\x32\x5d\x21");
  COMPARE(ldrh(ip, MemOperand(sp, -42, PreIndex)),
          "\x65\x31\x37\x64\x63\x32\x62\x61\x20\x20\x20\x20\x20\x20\x20\x6c\x64\x72\x68\x20\x69\x70\x2c\x20\x5b\x73\x70\x2c\x20\x23\x2d\x34\x32\x5d\x21");
  COMPARE(ldrh(r0, MemOperand(r1, r2)),
          "\x65\x31\x39\x31\x30\x30\x62\x32\x20\x20\x20\x20\x20\x20\x20\x6c\x64\x72\x68\x20\x72\x30\x2c\x20\x5b\x72\x31\x2c\x20\x2b\x72\x32\x5d");
  COMPARE(ldrh(r0, MemOperand(r1, r2, NegOffset)),
          "\x65\x31\x31\x31\x30\x30\x62\x32\x20\x20\x20\x20\x20\x20\x20\x6c\x64\x72\x68\x20\x72\x30\x2c\x20\x5b\x72\x31\x2c\x20\x2d\x72\x32\x5d");
  COMPARE(ldrh(r0, MemOperand(r1, r2, PostIndex)),
          "\x65\x30\x39\x31\x30\x30\x62\x32\x20\x20\x20\x20\x20\x20\x20\x6c\x64\x72\x68\x20\x72\x30\x2c\x20\x5b\x72\x31\x5d\x2c\x20\x2b\x72\x32");
  COMPARE(ldrh(r0, MemOperand(r1, r2, NegPostIndex)),
          "\x65\x30\x31\x31\x30\x30\x62\x32\x20\x20\x20\x20\x20\x20\x20\x6c\x64\x72\x68\x20\x72\x30\x2c\x20\x5b\x72\x31\x5d\x2c\x20\x2d\x72\x32");
  COMPARE(ldrh(r0, MemOperand(r1, r2, PreIndex)),
          "\x65\x31\x62\x31\x30\x30\x62\x32\x20\x20\x20\x20\x20\x20\x20\x6c\x64\x72\x68\x20\x72\x30\x2c\x20\x5b\x72\x31\x2c\x20\x2b\x72\x32\x5d\x21");
  COMPARE(ldrh(r0, MemOperand(r1, r2, NegPreIndex)),
          "\x65\x31\x33\x31\x30\x30\x62\x32\x20\x20\x20\x20\x20\x20\x20\x6c\x64\x72\x68\x20\x72\x30\x2c\x20\x5b\x72\x31\x2c\x20\x2d\x72\x32\x5d\x21");

  COMPARE(strh(r0, MemOperand(r1)),
          "\x65\x31\x63\x31\x30\x30\x62\x30\x20\x20\x20\x20\x20\x20\x20\x73\x74\x72\x68\x20\x72\x30\x2c\x20\x5b\x72\x31\x2c\x20\x23\x2b\x30\x5d");
  COMPARE(strh(r2, MemOperand(r3, 42)),
          "\x65\x31\x63\x33\x32\x32\x62\x61\x20\x20\x20\x20\x20\x20\x20\x73\x74\x72\x68\x20\x72\x32\x2c\x20\x5b\x72\x33\x2c\x20\x23\x2b\x34\x32\x5d");
  COMPARE(strh(r4, MemOperand(r5, -42)),
          "\x65\x31\x34\x35\x34\x32\x62\x61\x20\x20\x20\x20\x20\x20\x20\x73\x74\x72\x68\x20\x72\x34\x2c\x20\x5b\x72\x35\x2c\x20\x23\x2d\x34\x32\x5d");
  COMPARE(strh(r6, MemOperand(r7, 42, PostIndex)),
          "\x65\x30\x63\x37\x36\x32\x62\x61\x20\x20\x20\x20\x20\x20\x20\x73\x74\x72\x68\x20\x72\x36\x2c\x20\x5b\x72\x37\x5d\x2c\x20\x23\x2b\x34\x32");
  COMPARE(strh(r8, MemOperand(r9, -42, PostIndex)),
          "\x65\x30\x34\x39\x38\x32\x62\x61\x20\x20\x20\x20\x20\x20\x20\x73\x74\x72\x68\x20\x72\x38\x2c\x20\x5b\x72\x39\x5d\x2c\x20\x23\x2d\x34\x32");
  COMPARE(strh(r10, MemOperand(fp, 42, PreIndex)),
          "\x65\x31\x65\x62\x61\x32\x62\x61\x20\x20\x20\x20\x20\x20\x20\x73\x74\x72\x68\x20\x72\x31\x30\x2c\x20\x5b\x66\x70\x2c\x20\x23\x2b\x34\x32\x5d\x21");
  COMPARE(strh(ip, MemOperand(sp, -42, PreIndex)),
          "\x65\x31\x36\x64\x63\x32\x62\x61\x20\x20\x20\x20\x20\x20\x20\x73\x74\x72\x68\x20\x69\x70\x2c\x20\x5b\x73\x70\x2c\x20\x23\x2d\x34\x32\x5d\x21");
  COMPARE(strh(r0, MemOperand(r1, r2)),
          "\x65\x31\x38\x31\x30\x30\x62\x32\x20\x20\x20\x20\x20\x20\x20\x73\x74\x72\x68\x20\x72\x30\x2c\x20\x5b\x72\x31\x2c\x20\x2b\x72\x32\x5d");
  COMPARE(strh(r0, MemOperand(r1, r2, NegOffset)),
          "\x65\x31\x30\x31\x30\x30\x62\x32\x20\x20\x20\x20\x20\x20\x20\x73\x74\x72\x68\x20\x72\x30\x2c\x20\x5b\x72\x31\x2c\x20\x2d\x72\x32\x5d");
  COMPARE(strh(r0, MemOperand(r1, r2, PostIndex)),
          "\x65\x30\x38\x31\x30\x30\x62\x32\x20\x20\x20\x20\x20\x20\x20\x73\x74\x72\x68\x20\x72\x30\x2c\x20\x5b\x72\x31\x5d\x2c\x20\x2b\x72\x32");
  COMPARE(strh(r0, MemOperand(r1, r2, NegPostIndex)),
          "\x65\x30\x30\x31\x30\x30\x62\x32\x20\x20\x20\x20\x20\x20\x20\x73\x74\x72\x68\x20\x72\x30\x2c\x20\x5b\x72\x31\x5d\x2c\x20\x2d\x72\x32");
  COMPARE(strh(r0, MemOperand(r1, r2, PreIndex)),
          "\x65\x31\x61\x31\x30\x30\x62\x32\x20\x20\x20\x20\x20\x20\x20\x73\x74\x72\x68\x20\x72\x30\x2c\x20\x5b\x72\x31\x2c\x20\x2b\x72\x32\x5d\x21");
  COMPARE(strh(r0, MemOperand(r1, r2, NegPreIndex)),
          "\x65\x31\x32\x31\x30\x30\x62\x32\x20\x20\x20\x20\x20\x20\x20\x73\x74\x72\x68\x20\x72\x30\x2c\x20\x5b\x72\x31\x2c\x20\x2d\x72\x32\x5d\x21");

  COMPARE(ldr(r0, MemOperand(r1)),
          "\x65\x35\x39\x31\x30\x30\x30\x30\x20\x20\x20\x20\x20\x20\x20\x6c\x64\x72\x20\x72\x30\x2c\x20\x5b\x72\x31\x2c\x20\x23\x2b\x30\x5d");
  COMPARE(ldr(r2, MemOperand(r3, 42)),
          "\x65\x35\x39\x33\x32\x30\x32\x61\x20\x20\x20\x20\x20\x20\x20\x6c\x64\x72\x20\x72\x32\x2c\x20\x5b\x72\x33\x2c\x20\x23\x2b\x34\x32\x5d");
  COMPARE(ldr(r4, MemOperand(r5, -42)),
          "\x65\x35\x31\x35\x34\x30\x32\x61\x20\x20\x20\x20\x20\x20\x20\x6c\x64\x72\x20\x72\x34\x2c\x20\x5b\x72\x35\x2c\x20\x23\x2d\x34\x32\x5d");
  COMPARE(ldr(r6, MemOperand(r7, 42, PostIndex)),
          "\x65\x34\x39\x37\x36\x30\x32\x61\x20\x20\x20\x20\x20\x20\x20\x6c\x64\x72\x20\x72\x36\x2c\x20\x5b\x72\x37\x5d\x2c\x20\x23\x2b\x34\x32");
  COMPARE(ldr(r8, MemOperand(r9, -42, PostIndex)),
          "\x65\x34\x31\x39\x38\x30\x32\x61\x20\x20\x20\x20\x20\x20\x20\x6c\x64\x72\x20\x72\x38\x2c\x20\x5b\x72\x39\x5d\x2c\x20\x23\x2d\x34\x32");
  COMPARE(ldr(r10, MemOperand(fp, 42, PreIndex)),
          "\x65\x35\x62\x62\x61\x30\x32\x61\x20\x20\x20\x20\x20\x20\x20\x6c\x64\x72\x20\x72\x31\x30\x2c\x20\x5b\x66\x70\x2c\x20\x23\x2b\x34\x32\x5d\x21");
  COMPARE(ldr(ip, MemOperand(sp, -42, PreIndex)),
          "\x65\x35\x33\x64\x63\x30\x32\x61\x20\x20\x20\x20\x20\x20\x20\x6c\x64\x72\x20\x69\x70\x2c\x20\x5b\x73\x70\x2c\x20\x23\x2d\x34\x32\x5d\x21");
  COMPARE(ldr(r0, MemOperand(r1, r2)),
          "\x65\x37\x39\x31\x30\x30\x30\x32\x20\x20\x20\x20\x20\x20\x20\x6c\x64\x72\x20\x72\x30\x2c\x20\x5b\x72\x31\x2c\x20\x2b\x72\x32\x5d");
  COMPARE(ldr(r0, MemOperand(r1, r2, NegOffset)),
          "\x65\x37\x31\x31\x30\x30\x30\x32\x20\x20\x20\x20\x20\x20\x20\x6c\x64\x72\x20\x72\x30\x2c\x20\x5b\x72\x31\x2c\x20\x2d\x72\x32\x5d");
  COMPARE(ldr(r0, MemOperand(r1, r2, PostIndex)),
          "\x65\x36\x39\x31\x30\x30\x30\x32\x20\x20\x20\x20\x20\x20\x20\x6c\x64\x72\x20\x72\x30\x2c\x20\x5b\x72\x31\x5d\x2c\x20\x2b\x72\x32");
  COMPARE(ldr(r0, MemOperand(r1, r2, NegPostIndex)),
          "\x65\x36\x31\x31\x30\x30\x30\x32\x20\x20\x20\x20\x20\x20\x20\x6c\x64\x72\x20\x72\x30\x2c\x20\x5b\x72\x31\x5d\x2c\x20\x2d\x72\x32");
  COMPARE(ldr(r0, MemOperand(r1, r2, PreIndex)),
          "\x65\x37\x62\x31\x30\x30\x30\x32\x20\x20\x20\x20\x20\x20\x20\x6c\x64\x72\x20\x72\x30\x2c\x20\x5b\x72\x31\x2c\x20\x2b\x72\x32\x5d\x21");
  COMPARE(ldr(r0, MemOperand(r1, r2, NegPreIndex)),
          "\x65\x37\x33\x31\x30\x30\x30\x32\x20\x20\x20\x20\x20\x20\x20\x6c\x64\x72\x20\x72\x30\x2c\x20\x5b\x72\x31\x2c\x20\x2d\x72\x32\x5d\x21");

  COMPARE(str(r0, MemOperand(r1)),
          "\x65\x35\x38\x31\x30\x30\x30\x30\x20\x20\x20\x20\x20\x20\x20\x73\x74\x72\x20\x72\x30\x2c\x20\x5b\x72\x31\x2c\x20\x23\x2b\x30\x5d");
  COMPARE(str(r2, MemOperand(r3, 42)),
          "\x65\x35\x38\x33\x32\x30\x32\x61\x20\x20\x20\x20\x20\x20\x20\x73\x74\x72\x20\x72\x32\x2c\x20\x5b\x72\x33\x2c\x20\x23\x2b\x34\x32\x5d");
  COMPARE(str(r4, MemOperand(r5, -42)),
          "\x65\x35\x30\x35\x34\x30\x32\x61\x20\x20\x20\x20\x20\x20\x20\x73\x74\x72\x20\x72\x34\x2c\x20\x5b\x72\x35\x2c\x20\x23\x2d\x34\x32\x5d");
  COMPARE(str(r6, MemOperand(r7, 42, PostIndex)),
          "\x65\x34\x38\x37\x36\x30\x32\x61\x20\x20\x20\x20\x20\x20\x20\x73\x74\x72\x20\x72\x36\x2c\x20\x5b\x72\x37\x5d\x2c\x20\x23\x2b\x34\x32");
  COMPARE(str(r8, MemOperand(r9, -42, PostIndex)),
          "\x65\x34\x30\x39\x38\x30\x32\x61\x20\x20\x20\x20\x20\x20\x20\x73\x74\x72\x20\x72\x38\x2c\x20\x5b\x72\x39\x5d\x2c\x20\x23\x2d\x34\x32");
  COMPARE(str(r10, MemOperand(fp, 42, PreIndex)),
          "\x65\x35\x61\x62\x61\x30\x32\x61\x20\x20\x20\x20\x20\x20\x20\x73\x74\x72\x20\x72\x31\x30\x2c\x20\x5b\x66\x70\x2c\x20\x23\x2b\x34\x32\x5d\x21");
  COMPARE(str(ip, MemOperand(sp, -42, PreIndex)),
          "\x65\x35\x32\x64\x63\x30\x32\x61\x20\x20\x20\x20\x20\x20\x20\x73\x74\x72\x20\x69\x70\x2c\x20\x5b\x73\x70\x2c\x20\x23\x2d\x34\x32\x5d\x21");
  COMPARE(str(r0, MemOperand(r1, r2)),
          "\x65\x37\x38\x31\x30\x30\x30\x32\x20\x20\x20\x20\x20\x20\x20\x73\x74\x72\x20\x72\x30\x2c\x20\x5b\x72\x31\x2c\x20\x2b\x72\x32\x5d");
  COMPARE(str(r0, MemOperand(r1, r2, NegOffset)),
          "\x65\x37\x30\x31\x30\x30\x30\x32\x20\x20\x20\x20\x20\x20\x20\x73\x74\x72\x20\x72\x30\x2c\x20\x5b\x72\x31\x2c\x20\x2d\x72\x32\x5d");
  COMPARE(str(r0, MemOperand(r1, r2, PostIndex)),
          "\x65\x36\x38\x31\x30\x30\x30\x32\x20\x20\x20\x20\x20\x20\x20\x73\x74\x72\x20\x72\x30\x2c\x20\x5b\x72\x31\x5d\x2c\x20\x2b\x72\x32");
  COMPARE(str(r0, MemOperand(r1, r2, NegPostIndex)),
          "\x65\x36\x30\x31\x30\x30\x30\x32\x20\x20\x20\x20\x20\x20\x20\x73\x74\x72\x20\x72\x30\x2c\x20\x5b\x72\x31\x5d\x2c\x20\x2d\x72\x32");
  COMPARE(str(r0, MemOperand(r1, r2, PreIndex)),
          "\x65\x37\x61\x31\x30\x30\x30\x32\x20\x20\x20\x20\x20\x20\x20\x73\x74\x72\x20\x72\x30\x2c\x20\x5b\x72\x31\x2c\x20\x2b\x72\x32\x5d\x21");
  COMPARE(str(r0, MemOperand(r1, r2, NegPreIndex)),
          "\x65\x37\x32\x31\x30\x30\x30\x32\x20\x20\x20\x20\x20\x20\x20\x73\x74\x72\x20\x72\x30\x2c\x20\x5b\x72\x31\x2c\x20\x2d\x72\x32\x5d\x21");

  if (CpuFeatures::IsSupported(ARMv7)) {
    CpuFeatureScope scope(&assm, ARMv7);
    COMPARE(ldrd(r0, r1, MemOperand(r1)),
            "\x65\x31\x63\x31\x30\x30\x64\x30\x20\x20\x20\x20\x20\x20\x20\x6c\x64\x72\x64\x20\x72\x30\x2c\x20\x5b\x72\x31\x2c\x20\x23\x2b\x30\x5d");
    COMPARE(ldrd(r2, r3, MemOperand(r3, 127)),
            "\x65\x31\x63\x33\x32\x37\x64\x66\x20\x20\x20\x20\x20\x20\x20\x6c\x64\x72\x64\x20\x72\x32\x2c\x20\x5b\x72\x33\x2c\x20\x23\x2b\x31\x32\x37\x5d");
    COMPARE(ldrd(r4, r5, MemOperand(r5, -127)),
            "\x65\x31\x34\x35\x34\x37\x64\x66\x20\x20\x20\x20\x20\x20\x20\x6c\x64\x72\x64\x20\x72\x34\x2c\x20\x5b\x72\x35\x2c\x20\x23\x2d\x31\x32\x37\x5d");
    COMPARE(ldrd(r6, r7, MemOperand(r7, 127, PostIndex)),
            "\x65\x30\x63\x37\x36\x37\x64\x66\x20\x20\x20\x20\x20\x20\x20\x6c\x64\x72\x64\x20\x72\x36\x2c\x20\x5b\x72\x37\x5d\x2c\x20\x23\x2b\x31\x32\x37");
    COMPARE(ldrd(r8, r9, MemOperand(r9, -127, PostIndex)),
            "\x65\x30\x34\x39\x38\x37\x64\x66\x20\x20\x20\x20\x20\x20\x20\x6c\x64\x72\x64\x20\x72\x38\x2c\x20\x5b\x72\x39\x5d\x2c\x20\x23\x2d\x31\x32\x37");
    COMPARE(ldrd(r10, fp, MemOperand(fp, 127, PreIndex)),
            "\x65\x31\x65\x62\x61\x37\x64\x66\x20\x20\x20\x20\x20\x20\x20\x6c\x64\x72\x64\x20\x72\x31\x30\x2c\x20\x5b\x66\x70\x2c\x20\x23\x2b\x31\x32\x37\x5d\x21");
    COMPARE(ldrd(ip, sp, MemOperand(sp, -127, PreIndex)),
            "\x65\x31\x36\x64\x63\x37\x64\x66\x20\x20\x20\x20\x20\x20\x20\x6c\x64\x72\x64\x20\x69\x70\x2c\x20\x5b\x73\x70\x2c\x20\x23\x2d\x31\x32\x37\x5d\x21");

    COMPARE(strd(r0, r1, MemOperand(r1)),
            "\x65\x31\x63\x31\x30\x30\x66\x30\x20\x20\x20\x20\x20\x20\x20\x73\x74\x72\x64\x20\x72\x30\x2c\x20\x5b\x72\x31\x2c\x20\x23\x2b\x30\x5d");
    COMPARE(strd(r2, r3, MemOperand(r3, 127)),
            "\x65\x31\x63\x33\x32\x37\x66\x66\x20\x20\x20\x20\x20\x20\x20\x73\x74\x72\x64\x20\x72\x32\x2c\x20\x5b\x72\x33\x2c\x20\x23\x2b\x31\x32\x37\x5d");
    COMPARE(strd(r4, r5, MemOperand(r5, -127)),
            "\x65\x31\x34\x35\x34\x37\x66\x66\x20\x20\x20\x20\x20\x20\x20\x73\x74\x72\x64\x20\x72\x34\x2c\x20\x5b\x72\x35\x2c\x20\x23\x2d\x31\x32\x37\x5d");
    COMPARE(strd(r6, r7, MemOperand(r7, 127, PostIndex)),
            "\x65\x30\x63\x37\x36\x37\x66\x66\x20\x20\x20\x20\x20\x20\x20\x73\x74\x72\x64\x20\x72\x36\x2c\x20\x5b\x72\x37\x5d\x2c\x20\x23\x2b\x31\x32\x37");
    COMPARE(strd(r8, r9, MemOperand(r9, -127, PostIndex)),
            "\x65\x30\x34\x39\x38\x37\x66\x66\x20\x20\x20\x20\x20\x20\x20\x73\x74\x72\x64\x20\x72\x38\x2c\x20\x5b\x72\x39\x5d\x2c\x20\x23\x2d\x31\x32\x37");
    COMPARE(strd(r10, fp, MemOperand(fp, 127, PreIndex)),
            "\x65\x31\x65\x62\x61\x37\x66\x66\x20\x20\x20\x20\x20\x20\x20\x73\x74\x72\x64\x20\x72\x31\x30\x2c\x20\x5b\x66\x70\x2c\x20\x23\x2b\x31\x32\x37\x5d\x21");
    COMPARE(strd(ip, sp, MemOperand(sp, -127, PreIndex)),
            "\x65\x31\x36\x64\x63\x37\x66\x66\x20\x20\x20\x20\x20\x20\x20\x73\x74\x72\x64\x20\x69\x70\x2c\x20\x5b\x73\x70\x2c\x20\x23\x2d\x31\x32\x37\x5d\x21");

    COMPARE(pld(MemOperand(r1, 0)),
            "\x66\x35\x64\x31\x66\x30\x30\x30\x20\x20\x20\x20\x20\x20\x20\x70\x6c\x64\x20\x5b\x72\x31\x5d");
    COMPARE(pld(MemOperand(r2, 128)),
            "\x66\x35\x64\x32\x66\x30\x38\x30\x20\x20\x20\x20\x20\x20\x20\x70\x6c\x64\x20\x5b\x72\x32\x2c\x20\x23\x2b\x31\x32\x38\x5d");
  }

  VERIFY_RUN();
}
